{"version":3,"sources":["SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Nauczyciele.tsx","Zgony.tsx","Panel.tsx","SelektorWojewodztwa.tsx","WyborModulow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelektorGminy","props","state","powiaty","Map","this","gminaChangeFn","id","onChange","ev","target","value","Array","from","entries","key","label","gminy","gmina","kodGminy","Fragment","React","Component","BudzetComp","dane","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat","powiat_pc","wojewodztwo","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Nauczyciele","kodGus","console","log","syncId","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","szkoly","377896","378306","378248","378626","apiUrl","ret","rok","axios","get","then","response","results","r","values","v","z","Number","parseInt","year","val","setState","Object","assign","common","Zgony","podregion","zgony","dot","Panel","budzet","selected","indexOf","AttachMoney","fontSize","gospodarka_odpadami_komunalnymi","DeleteSharp","cytat","autor","liczbaDzialow","kod_gus","ludnosc","children","dzialy","COLORS","StylesProvider","injectFirst","renderBudzet","renderSmieci","Math","max","min","length","slice","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","map","entry","index","fill","layout","verticalAlign","align","SelektorWojewodztwa","wojewodztwoChangeFn","wojewodztwa","style","marginBottom","name","WyborModulow","moduly","zmianaModuluFn","options","handleOnChange","App","classes","componentRef","MODULY","createRef","handleChangeAutor","bind","handleChangeCytat","handleChangeMultiple","pobierzDaneGminy","pobierzListePowiatow","handleSubmit","select","event","preventDefault","ref","onSubmit","padding","handleChangeLiczbaDzialow","onClick","exportComponentAsPNG","podregion_eurostat","pobierzZgony","replaceAll","x","hasOwnProperty","y","set","p","pierwszaGmina","next","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAWaA,EAAb,kDACI,WAAYC,GAA4B,IAAD,8BACnC,cAAMA,IACDC,MAAQ,CAACC,QAAS,IAAIC,KAFQ,EAD3C,qDAMc,IAAD,EAC4BC,KAAKJ,MAA/BK,EADF,EACEA,cAAeH,EADjB,EACiBA,QACtB,OAAOA,EAAQ,wBACXI,GAAG,OAEHC,SAAU,SAAAC,GAAE,OAAIH,EAAcG,EAAGC,OAAOC,QAH7B,SAIVC,MAAMC,KAAKV,EAAQW,WAAW,mCAAEC,EAAF,KAAOJ,EAAP,YACvB,0BAAoBK,MAAOD,EAA3B,SACKH,MAAMC,KAAKF,EAAMM,MAAMH,WAAW,mCAAEI,EAAF,KAASC,EAAT,YAC3B,wBAAuBR,MAAOQ,EAA9B,SACKD,GADQC,OAFVJ,QAQjB,cAAC,IAAMK,SAAP,QArBlB,GAAmCC,IAAMC,W,oCCO5BC,EAAb,uKACc,IAAD,EACsBlB,KAAKJ,MAAMuB,KAA/BC,EADF,EACEA,QAASC,EADX,EACWA,QAChB,OAAO,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACH,eAACF,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAACC,EAAA,EAAD,CAAkBC,QAAQ,KAEtB,cAACJ,EAAA,EAAD,CAAKK,UAAU,eAAf,sBACA,cAACL,EAAA,EAAD,UAAMF,OAGd,eAACE,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAACI,EAAA,EAAD,CAAcF,QAAQ,KAElB,cAACJ,EAAA,EAAD,CAAKK,UAAU,eAAf,sBACA,cAACL,EAAA,EAAD,UAAMD,cAf1B,GAAgCL,IAAMC,W,oCCRzBY,EAAb,kDACI,WAAYjC,GAAwB,uCAC1BA,GAFd,qDAKc,IAAD,EACqEI,KAAKJ,MAAMkC,WAA9EjB,EADF,EACEA,MAAOkB,EADT,EACSA,SAAUC,EADnB,EACmBA,OAAQC,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,YAAaC,EADnD,EACmDA,eACxD,OAAO,eAACb,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACH,cAACF,EAAA,EAAD,mEACA,eAACA,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAACY,EAAA,EAAD,CAAcV,QAAQ,KACtB,cAACJ,EAAA,EAAD,CAAKK,UAAU,eAAf,qBAFJ,OAGI,eAACL,EAAA,EAAD,eAAOT,EAAP,KAAgBkB,EAAhB,6BAEJ,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAACa,EAAA,EAAD,CAAkBX,QAAQ,KAC1B,cAACJ,EAAA,EAAD,CAAKK,UAAU,eAAf,uBAFJ,OAGI,eAACL,EAAA,EAAD,WAAMU,EAAN,KAAgBC,EAAhB,6BAEJ,eAACX,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAACc,EAAA,EAAD,CAAsBZ,QAAQ,KAC9B,cAACJ,EAAA,EAAD,CAAKK,UAAU,eAAf,8BAFJ,OAGI,eAACL,EAAA,EAAD,WAAMY,EAAN,KAAqBC,EAArB,oCAtBhB,GAAmCnB,IAAMC,W,gCCY5BsB,EAAb,kDACI,WAAY3C,GAA0B,IAAD,8BACjC,cAAMA,IACDC,MAAQ,CAACsB,KAAM,GAAIqB,OAAQ,IAFC,EADzC,qDAMc,IACCrB,EAAQnB,KAAKH,MAAbsB,KAEP,OADAsB,QAAQC,IAAIvB,GACL,eAACG,EAAA,EAAD,WAAK,cAACA,EAAA,EAAD,2DACR,eAAC,IAAD,CAAWqB,OAAQ,cAAeC,MAAO,IAAKC,OAAQ,IAAKC,KAAM3B,EAC1D4B,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GADtD,UAEA,cAAC,IAAD,CAAeC,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,QACf,cAAC,IAAD,IAEA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,KAAK,WAAWD,QAAQ,aAAaE,OAAO,YAElD,cAAC,IAAD,CAAMD,KAAK,WAAWD,QAAQ,WAAWE,OAAO,YAEhD,cAAC,IAAD,CAAMD,KAAK,WAAWD,QAAQ,WAAWE,OAAO,YAEhD,cAAC,IAAD,CAAMD,KAAK,WAAWD,QAAQ,QAAQE,OAAO,oBAvBzD,+BA6Bc,IAAD,OACDC,EAAS,CACTC,OAAQ,aACRC,OAAQ,WACRC,OAAQ,WACRC,OAAQ,SAELpB,EAAUxC,KAAKJ,MAAf4C,OACP,GAAIxC,KAAKH,MAAM2C,SAAWA,EAAQ,CAC9B,IAAIqB,EAAS,+CAAiDrB,EAAS,WACvE,IAAK,IAAItC,KAAMsD,EACXK,GAAU,WAAa3D,EAE3B,IAAI4D,EAAsB,CAAC,CAACC,IAAK,MAAO,CAACA,IAAK,MAAO,CAACA,IAAK,MAAO,CAACA,IAAK,MAAO,CAACA,IAAK,OACrFC,IAAMC,IAAIJ,GAAQK,MAAK,SAACC,GAAc,IAAD,gBACnBA,EAASrB,KAAKsB,SADK,IACjC,2BAAqC,CAAC,IAAD,EAA5BC,EAA4B,sBACnBA,EAAEC,QADiB,IACjC,2BAAwB,CAAC,IAAD,EAAfC,EAAe,sBACNT,GADM,IACpB,2BAAmB,CAAC,IAAXU,EAAU,QACXA,EAAET,MAAQU,OAAOC,SAASH,EAAEI,QAE5BH,EAAEhB,EAAOa,EAAEnE,KAAOqE,EAAEK,MAJR,gCADS,gCADJ,8BAWjCnC,QAAQC,IAAIoB,GACZ,EAAKe,SAASC,OAAOC,OAAO,GAAI,EAAKlF,MAAO,CAACsB,KAAM2C,EAAKtB,OAAQ,EAAK5C,MAAM4C,gBAvD3F,0CA6DQxC,KAAKgF,WA7Db,2CAiEQhF,KAAKgF,aAjEb,GAAiChE,IAAMC,WCD1BgE,EAAb,kDACI,WAAYrF,GAAoB,uCACtBA,GAFd,qDAKc,IAAD,EACsBI,KAAKJ,MAAzBsF,EADF,EACEA,UAAWC,EADb,EACaA,MAElB,OADA1C,QAAQC,IAAIyC,GACL,eAAC7D,EAAA,EAAD,WAAK,eAACA,EAAA,EAAD,wBAAgB4D,EAAhB,qCACR,eAAC,IAAD,CAAWvC,OAAQ,QAASC,MAAO,IAAKC,OAAQ,IAAKC,KAAMqC,EACpDpC,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GADtD,UAEA,cAAC,IAAD,CAAeC,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,YACf,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,YAEtD,cAAC,IAAD,CAAMD,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,YAEtD,cAAC,IAAD,CAAMD,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,YAEtD,cAAC,IAAD,CAAMD,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,YAEtD,cAAC,IAAD,CAAMD,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,YAEtD,cAAC,IAAD,CAAMD,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,YAEtD,cAAC,IAAD,CAAMD,KAAK,SAAS8B,KAAK,EAAO/B,QAAQ,OAAOE,OAAO,sBA3BlE,GAA2BvC,IAAMC,WC8BpBoE,EAAb,kDACI,WAAYzF,GAAoB,uCACtBA,GAFd,yDAKiB0F,GAAkB,IAAD,EAE1B,OAAI,UAAAtF,KAAKJ,MAAM2F,gBAAX,eAAqBC,QAAQ,YAAa,GAAKF,EACxC,eAAC,IAAMvE,SAAP,WACH,eAACO,EAAA,EAAD,CAAKK,UAAU,QAAf,gCAAqC,6CACrC,eAACL,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UAEI,cAACiE,EAAA,EAAD,CAAaC,SAAS,QAAQ/D,UAAU,OAAOD,QAAQ,KACvD,cAAC,EAAD,CAAYP,KAAMmE,OAChB,0BAGH,KAjBnB,mCAqBiBK,GAA2C,IAAD,EAEnD,OAAI,UAAA3F,KAAKJ,MAAM2F,gBAAX,eAAqBC,QAAQ,YAAa,GAAKG,EACxC,eAAC,IAAM5E,SAAP,WACH,cAACO,EAAA,EAAD,CAAKK,UAAU,QAAf,6CACA,eAACL,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAACoE,EAAA,EAAD,CAAaF,SAAS,QAAQ/D,UAAU,OAAOD,QAAQ,KACvD,cAAC,EAAD,CAAYP,KAAMwE,OAChB,0BAGH,KAhCnB,+BAoCc,IAAD,EACkD3F,KAAKJ,MAArDiG,EADF,EACEA,MAAOC,EADT,EACSA,MAAOP,EADhB,EACgBA,SAAUQ,EAD1B,EAC0BA,cAAeZ,EADzC,EACyCA,MADzC,EAE4FnF,KAAKJ,MAAMuB,MAAQ,GAA7GN,EAFF,EAEEA,MAAOmF,EAFT,EAESA,QAASC,EAFlB,EAEkBA,QAASN,EAF3B,EAE2BA,gCAAiCL,EAF5D,EAE4DA,OAAQxD,EAFpE,EAEoEA,WAAYoE,EAFhF,EAEgFA,SACjFC,EAAkB1B,OAAOC,SAASqB,GAAiB,OAAS,GAE1DK,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAE5D,OACI,cAACC,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,qBAAKpG,GAAG,eAAR,SACI,eAACoB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACI,eAACF,EAAA,EAAD,CAAKK,UAAU,QAAf,UAAwBd,EAAxB,KAAiCoF,EAAjC,2BAA4D,uBACjD,KAAVJ,EAAe,cAACvE,EAAA,EAAD,CAAKK,UAAU,QAAf,SAAuB,4BAAIkE,MAAmB,GACnD,KAAVC,EACG,eAACxE,EAAA,EAAD,CAAKK,UAAU,QAAf,UAAwBmE,EAAxB,8BAA2E,GAC/E,uBACC9F,KAAKuG,aAAajB,GAClBtF,KAAKwG,aAAab,IAET,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUC,QAAQ,gBAAiB,GAAM1D,EACtC,cAAC,EAAD,CAAeA,WAAYA,IAC3B,cAAC,IAAMf,SAAP,KAEQ,OAARwE,QAAQ,IAARA,OAAA,EAAAA,EAAUC,QAAQ,YAAa,GAAMU,EACtC,eAAC,IAAD,CAAUtD,MAAO,IAAKC,OAAQ4D,KAAKC,IAA0C,GAArCD,KAAKE,IAAIR,EAAQD,EAASU,QAAe,KAAjF,UACI,cAAC,IAAD,CAAK9D,KAAMoD,EAASW,MAAM,EAAGV,GAAS9C,QAAQ,QAAQyD,QAAQ,OAAOC,GAAG,MAAMC,GAAG,MAAMC,YAAa,GAAIC,YAAa,GAAIvG,OAAO,EAAQwG,WAAY,IAAKC,SAAU,GAAnK,SAEQlB,EAASmB,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,IAAD,CAA4BC,KAAMpB,EAAOmB,EAAQnB,EAAOQ,SAAxD,eAAmBW,SAK/B,cAAC,IAAD,CAAQE,OAAO,WAAWC,cAAc,MAAMC,MAAM,aAExD,cAAC,IAAM5G,SAAP,KAES,OAARwE,QAAQ,IAARA,OAAA,EAAAA,EAAUC,QAAQ,iBAAkB,GAAMQ,EACvC,cAAC,EAAD,CAAaxD,OAAQwD,IAAW,cAAC,IAAMjF,SAAP,KAE3B,OAARwE,QAAQ,IAARA,OAAA,EAAAA,EAAUC,QAAQ,WAAY,GAAML,EACrC,cAAC,EAAD,CAAOA,MAAOA,EAAMA,MAAOD,UAAWC,EAAMD,YAAa,cAAC,IAAMnE,SAAP,eA7ErF,GAA2BC,IAAMC,WC5CpB2G,EAAb,kDACI,WAAYhI,GAAkC,uCACpCA,GAFd,qDAKc,IAAD,EACsCI,KAAKJ,MAAzCiI,EADF,EACEA,oBAAqBC,EADvB,EACuBA,YAC5B,OAAO,wBACH5H,GAAG,OACH6H,MAAO,CAACC,aAAc,IACtB7H,SAAU,SAAAC,GAAE,OAAIyH,EAAoBzH,EAAGC,OAAOC,QAH3C,SAIFwH,EAAYT,KAAI,SAACY,GAAD,OACb,wBAAmB3H,MAAO2H,EAA1B,SACKA,GADQA,YAZ7B,GAAyCjH,IAAMC,W,kBCElCiH,EAAb,kDACI,WAAYtI,GAA2B,uCAC7BA,GAFd,qDAKc,IAAD,EAC4BI,KAAKJ,MAA/BuI,EADF,EACEA,OAAQC,EADV,EACUA,eACf,OAAO,cAAC,IAAD,CAAqBC,QAASF,EAAQ5C,SAAU4C,EAAQG,eAAgB,SAAC/C,GAAD,OAAwB6C,EAAe7C,UAP9H,GAAkCvE,IAAMC,WC0KzBsH,E,kDA3HX,WAAY3I,GAAkB,IAAD,8BACzB,cAAMA,IAhCV4I,aA+B6B,IA9B7BC,kBA8B6B,IA5B7BX,YAAc,CACV,yBACA,qBACA,YACA,WACA,kBACA,mBACA,cACA,WACA,eACA,YACA,YACA,oBACA,2BACA,2BACA,gBACA,sBAYyB,EAT7BY,OAAS,CACL,SACA,SACA,aACA,SACA,cACA,SAKA,EAAKD,aAAezH,IAAM2H,YAE1B,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,qBAAuB,EAAKA,qBAAqBF,KAA1B,gBAE5B,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAC5B,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBAEpB,EAAKhJ,MAAQ,CACTgG,MAAO,2TACPC,MAAO,yDACPqD,OAAQ,EAAKT,OACb3C,cAAe,KACfZ,MAAO,CAACD,UAAW,GAAIC,MAAO,KAjBT,E,8DAqBXW,GACd9F,KAAK6E,SAASC,OAAOC,OAAO,GAAI/E,KAAKH,MAAO,CAACiG,MAAOA,O,wCAGtCD,GACd7F,KAAK6E,SAASC,OAAOC,OAAO,GAAI/E,KAAKH,MAAO,CAACgG,MAAOA,O,2CAGnCvB,GACjBtE,KAAK6E,SAASC,OAAOC,OAAO,GAAI/E,KAAKH,MAAO,CAACsJ,OAAQ7E,O,gDAG/ByB,GACtB/F,KAAK6E,SAASC,OAAOC,OAAO,GAAI/E,KAAKH,MAAO,CAACkG,cAAeA,O,mCAGnDqD,GACTA,EAAMC,mB,+BAIA,IAAD,SAC+DrJ,KAAKH,MAAlEgG,EADF,EACEA,MAAOC,EADT,EACSA,MAAOqD,EADhB,EACgBA,OAAQpD,EADxB,EACwBA,cAAe5E,EADvC,EACuCA,KAAMrB,EAD7C,EAC6CA,QAASqF,EADtD,EACsDA,MACrD2C,EAAc9H,KAAK8H,YACzB,OAGI,cADA,CACCxG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACI,cAAC,EAAD,CAAOL,KAAMA,EAAMmI,IAAKtJ,KAAKyI,aAAc5C,MAAOA,EAAOC,MAAOA,EAAOP,SAAU4D,EAAQpD,cAAeA,EAAeZ,MAAOA,IAC9H,sBAAMoE,SAAUvJ,KAAKkJ,aAArB,SACI,eAAC5H,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASuG,MAAO,CAACyB,QAAS,IAA5D,UACI,wEACA,cAAC,EAAD,CAAqB1B,YAAaA,EAAaD,oBAAqB7H,KAAKiJ,uBACzE,cAAC,EAAD,CAAenJ,QAASA,EAASG,cAAeD,KAAKgJ,mBACrD,uBACA,yDACI,0BAAUf,KAAK,QAAQ9H,SAAU,SAAAC,GAAE,OAAE,EAAK0I,kBAAkB1I,EAAGC,OAAOC,QAAQA,MAAOuF,EAAOkC,MAAO,CAACC,aAAc,MAClH,uBAAO1E,KAAK,OAAO2E,KAAK,QAAQ9H,SAAU,SAAAC,GAAE,OAAE,EAAKwI,kBAAkBxI,EAAGC,OAAOC,QAAQA,MAAOwF,IAC9F,uBACA,uDACA,cAAC,EAAD,CAAcqC,OAAQnI,KAAK0I,OAAQN,eAAgBpI,KAAK+I,uBAC5D,8EACA,uBAAOzF,KAAK,OAAO2E,KAAK,gBAAgB9H,SAAU,SAAAC,GAAE,OAAE,EAAKqJ,0BAA0BrJ,EAAGC,OAAOC,QAAQA,MAAOyF,EAAegC,MAAO,CAACC,aAAc,MACnJ,wBAAQ0B,QAAS,kBAAMC,+BAAqB,EAAKlB,eAAjD,kC,uCASH3H,GAAmB,IAAD,OACzB+C,EAAS,UAAY/C,EAAW,cACtCkD,IAAMC,IAAIJ,GAAQK,MAAK,SAACC,GACpB,IAAML,EAAYK,EAASrB,KAC3BL,QAAQC,IAAIoB,GACZ,EAAKe,SAASC,OAAOC,OAAO,GAAI,EAAKlF,MAAO,CAACsB,KAAM2C,KACnDrB,QAAQC,IAAIoB,EAAI8F,oBACZ9F,EAAI8F,oBACJ,EAAKC,aAAa/F,EAAI8F,yB,2CAKb1H,GAAsB,IAAD,OAEhC2B,EAAS,UADD3B,EAAY4H,WAAW,SAAK,KAAKA,WAAW,SAAK,KAAKA,WAAW,SAAK,KAAKA,WAAW,SAAK,KACpE,QACrC9F,IAAMC,IAAIJ,GAAQK,MAAK,SAACC,GACpB,IAAML,EAAM,IAAI/D,IAChB,IAAK,IAAMgK,KAAK5F,EAASrB,KACrB,GAAIqB,EAASrB,KAAKkH,eAAeD,GAAI,CACjC,IAAMnJ,EAAQ,IAAIb,IAClB,IAAK,IAAMkK,KAAK9F,EAASrB,KAAKiH,GACtB5F,EAASrB,KAAKiH,GAAGC,eAAeC,IAChCrJ,EAAMsJ,IAAID,EAAG9F,EAASrB,KAAKiH,GAAGE,IAGtC,IAAME,EAAe,CAACvJ,MAAOA,GAC7BkD,EAAIoG,IAAIH,EAAGI,GAGnB,EAAKtF,SAASC,OAAOC,OAAO,GAAI,EAAKlF,MAAO,CAACC,QAASgE,KACtD,IAAMsG,EAAgBtG,EAAIQ,SAAS+F,OAAO/J,MAAMM,MAAM0D,SAAS+F,OAAO/J,MACtE,EAAK0I,iBAAiBoB,Q,mCAIjBlF,GAAoB,IAAD,OACtBrB,EAAS,UAAYqB,EAAY,QACvClB,IAAMC,IAAIJ,GAAQK,MAAK,SAACC,GACpB,IAAI4F,EAAI5F,EAASrB,KACjBL,QAAQC,IAAIqH,GACZ,EAAKlF,SAASC,OAAOC,OAAO,GAAI,EAAKlF,MAAO,CAACsF,MAAO4E,U,0CAKxD/J,KAAKiJ,qBAAqB,8B,GAvJhBjI,IAAMC,WCVTqJ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtG,MAAK,YAAkD,IAA/CuG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACI,cAAC,EAAD,IADJ,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2eaf3b66.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface SelektorGminyProps {\n    gminaChangeFn: (kodGminy: string) => void;\n    powiaty?: Map<string, PowiatEls>;\n}\n\nexport interface PowiatEls {\n    gminy: Map<string, string>;\n}\n\nexport class SelektorGminy extends React.Component<SelektorGminyProps> {\n    constructor(props: SelektorGminyProps) {\n        super(props);\n        this.state = {powiaty: new Map<string, PowiatEls>()};\n    }\n\n    render() {\n        const {gminaChangeFn, powiaty} = this.props;\n        return powiaty?<select\n            id=\"demo\"\n            // value={selected}\n            onChange={ev => gminaChangeFn(ev.target.value)}>\n            {Array.from(powiaty.entries(), ([key, value]) => (\n                    <optgroup key={key} label={key}>\n                        {Array.from(value.gminy.entries(), ([gmina, kodGminy]) => (\n                                <option key={kodGminy} value={kodGminy}>\n                                    {gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>:<React.Fragment></React.Fragment>;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\">\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./Panel\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    constructor(props: DotacjeUEProps) {\n        super(props);\n    }\n\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\"></HomeOutlined>\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\"></BusinessOutlined>\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\"></LocationCityOutlined>\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface NauczycieleProps {\n    kodGus: string;\n}\n\ninterface Zatrudnienie {\n    rok: number;\n    podstawowe?: number,\n    zawodowe?: number,\n    gimnazja?: number,\n    licea?: number,\n}\n\ninterface NauczycieleState {\n    dane: Zatrudnienie[];\n    kodGus: string;\n}\n\nexport class Nauczyciele extends React.Component<NauczycieleProps, NauczycieleState> {\n    constructor(props: NauczycieleProps) {\n        super(props);\n        this.state = {dane: [], kodGus: ''};\n    }\n\n    render() {\n        const {dane} = this.state;\n        console.log(dane);\n        return <Box><Box>Etaty nauczycielskie wg rodzaju szkoły:</Box>\n            <LineChart syncId={\"nauczyciele\"} width={530} height={250} data={dane}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"rok\" />\n            <YAxis />\n            {/*<Tooltip />*/}\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"podstawowe\" stroke=\"#8884d8\">\n            </Line>\n            <Line type=\"monotone\" dataKey=\"gimnazja\" stroke=\"#0884d8\">\n            </Line>\n            <Line type=\"monotone\" dataKey=\"zawodowe\" stroke=\"#080408\">\n            </Line>\n            <Line type=\"monotone\" dataKey=\"licea\" stroke=\"#82ca9d\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n\n    common() {\n        let szkoly = {\n            377896: \"podstawowe\",\n            378306: \"zawodowe\",\n            378248: \"gimnazja\",\n            378626: \"licea\",\n        }\n        const {kodGus} = this.props;\n        if (this.state.kodGus !== kodGus) {\n            let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl';\n            for (let id in szkoly) {\n                apiUrl += \"&var-id=\" + id;\n            }\n            let ret: Zatrudnienie[] = [{rok: 2015}, {rok: 2016}, {rok: 2017}, {rok: 2018}, {rok: 2019}];\n            axios.get(apiUrl).then((response) => {\n                for (let r of response.data.results) {\n                    for (let v of r.values) {\n                        for (let z of ret) {\n                            if (z.rok === Number.parseInt(v.year)) {\n                                // @ts-ignore\n                                z[szkoly[r.id]] = v.val;\n                            }\n                        }\n                    }\n                }\n                console.log(ret);\n                this.setState(Object.assign({}, this.state, {dane: ret, kodGus: this.props.kodGus}));\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.common();\n    }\n\n    componentDidUpdate() {\n        this.common();\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface ZgonyWTygodniu {\n    podregion: string;\n    tydzien: string;\n    2014: number;\n    2015: number;\n    2016: number;\n    2017: number;\n    2018: number;\n    2019: number;\n    2020: number;\n}\n\nexport interface ZgonyProps {\n    podregion: string;\n    zgony: ZgonyWTygodniu[];\n}\n\nexport class Zgony extends React.Component<ZgonyProps> {\n    constructor(props: ZgonyProps) {\n        super(props);\n    }\n\n    render() {\n        const {podregion, zgony} = this.props;\n        console.log(zgony);\n        return <Box><Box>Podregion {podregion}: wszystkie zgony wg. tygodnia:</Box>\n            <LineChart syncId={\"zgony\"} width={530} height={250} data={zgony}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"tydzien\" />\n            <YAxis />\n            <Legend />\n            <Line type=\"linear\" dot={false} dataKey=\"2014\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2015\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2016\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2017\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2018\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2019\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2020\" stroke=\"#ff2222\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {PieChart, Pie, Cell, Legend} from \"recharts\";\nimport {Nauczyciele} from \"./Nauczyciele\";\nimport {Zgony, ZgonyProps} from \"./Zgony\";\n\nexport interface  DotacjeUE {\n    gmina: string;\n    gmina_pc: string;\n    powiat: string;\n    powiat_pc: string;\n    wojewodztwo: string;\n    wojewodztwo_pc: string;\n}\n\ninterface Dzial {\n    name: string;\n    value: number;\n}\n\nexport interface Dane {\n    gmina?: string;\n    kod_gus?: string;\n    podregion_eurostat?: string;\n    dochod_ue?: string;\n    dotacje_ue?: DotacjeUE;\n    budzet?: Budzet;\n    gospodarka_odpadami_komunalnymi?: Budzet;\n    ludnosc?: number;\n    wydatki_biezace_ue?: string;\n    wydatki_inwestycyjne_ue?: string;\n    // projekty_ue:\n    // janosik:\n    children?: Dzial[];\n}\n\nexport interface PanelProps {\n    cytat?: string;\n    autor?: string;\n    selected?: string[];\n    wojewodztwo?: string;\n    liczbaDzialow?: string;\n    dane?: Dane;\n    zgony: ZgonyProps;\n}\n\n// TODO: Po wyborze gminy tworzyc Panel z propsami\nexport class Panel extends React.Component<PanelProps> {\n    constructor(props: PanelProps) {\n        super(props);\n    }\n\n    renderBudzet(budzet?: Budzet) {\n        // @ts-ignore\n        if (this.props.selected?.indexOf('budzet') > -1 && budzet) {\n            return <React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>\n        } else {\n            return '';\n        }\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi?: Budzet) {\n        // @ts-ignore\n        if (this.props.selected?.indexOf('smieci') > -1 && gospodarka_odpadami_komunalnymi) {\n            return <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\"></DeleteSharp>\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>\n        } else {\n            return '';\n        }\n    }\n\n    render() {\n        const {cytat, autor, selected, liczbaDzialow, zgony} = this.props;\n        const {gmina, kod_gus, ludnosc, gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = this.props.dane || {};\n        let dzialy : number = Number.parseInt(liczbaDzialow || \"10\") || 10;\n\n        const COLORS = ['#0088FE', '#00C49F', '#778888', '#FF8042', \"#FFFF33\"];\n\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Box className=\"intro\">{gmina} ({ludnosc} mieszkańców)</Box><br/>\n                        {cytat !== '' ? <Box className=\"intro\"><i>{cytat}</i></Box> : ''}\n                        {autor !== '' ?\n                            <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                        <br/>\n                        {this.renderBudzet(budzet)}\n                        {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                        {// @ts-ignore\n                         (selected?.indexOf('dotacje_ue') > -1) && dotacje_ue?\n                             <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                             <React.Fragment></React.Fragment>}\n                        {// @ts-ignore\n                            (selected?.indexOf('dzialy') > -1) && children?\n                            <PieChart width={550} height={Math.max((Math.min(dzialy, children.length)) * 25, 200)}>\n                                <Pie data={children.slice(0, dzialy)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={20} outerRadius={86} label={false}  startAngle={450} endAngle={90}>\n                                    {\n                                        children.map((entry, index) => (\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                                        ))\n                                    }\n                                </Pie>\n                                {/*<Tooltip />*/}\n                                <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\n                            </PieChart>:\n                            <React.Fragment></React.Fragment>}\n                        {// @ts-ignore\n                            (selected?.indexOf('nauczyciele') > -1) && kod_gus?\n                                <Nauczyciele kodGus={kod_gus}/>:<React.Fragment></React.Fragment>}\n                        {// @ts-ignore\n                            (selected?.indexOf('zgony') > -1) && zgony?\n                            <Zgony zgony={zgony.zgony} podregion={zgony.podregion}/>:<React.Fragment></React.Fragment>}\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n                </div>\n            </StylesProvider>\n        );\n    }\n}","import React from \"react\";\n\ninterface SelektorWojewodztwaProps {\n    wojewodztwoChangeFn: (wojewodztwo: string) => void;\n    wojewodztwa: string[];\n}\n\nexport class SelektorWojewodztwa extends React.Component<SelektorWojewodztwaProps> {\n    constructor(props: SelektorWojewodztwaProps) {\n        super(props);\n    }\n\n    render() {\n        const {wojewodztwoChangeFn, wojewodztwa} = this.props;\n        return <select\n            id=\"demo\"\n            style={{marginBottom: 10}}\n            onChange={ev => wojewodztwoChangeFn(ev.target.value)}>\n            {wojewodztwa.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React from \"react\";\n// @ts-ignore\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\ninterface WyborModulowProps {\n    zmianaModuluFn: (moduly: string[]) => void;\n    moduly: string[];\n}\n\nexport class WyborModulow extends React.Component<WyborModulowProps> {\n    constructor(props: WyborModulowProps) {\n        super(props);\n    }\n\n    render() {\n        const {moduly, zmianaModuluFn} = this.props;\n        return <DropdownMultiselect options={moduly} selected={moduly} handleOnChange={(selected: string[]) => zmianaModuluFn(selected)}>\n        </DropdownMultiselect>\n    }\n}","import React, {FormEvent} from 'react';\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport {PowiatEls, SelektorGminy} from \"./SelektorGminy\";\nimport {Dane, Panel} from \"./Panel\";\nimport axios from \"axios\";\nimport {SelektorWojewodztwa} from \"./SelektorWojewodztwa\";\nimport {WyborModulow} from \"./WyborModulow\";\nimport { ZgonyProps } from './Zgony';\n\ninterface AppProps {\n}\n\ninterface AppState {\n    cytat: string;\n    autor: string;\n    select: string[];\n    liczbaDzialow: string;\n    dane?: Dane;\n    powiaty?: Map<string, PowiatEls>;\n    zgony: ZgonyProps;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    wojewodztwa = [\n        \"DOLNOŚLĄSKIE\",\n        \"KUJAWSKO-POMORSKIE\",\n        \"LUBELSKIE\",\n        \"LUBUSKIE\",\n        \"ŁÓDZKIE\",\n        \"MAŁOPOLSKIE\",\n        \"MAZOWIECKIE\",\n        \"OPOLSKIE\",\n        \"PODKARPACKIE\",\n        \"PODLASKIE\",\n        \"POMORSKIE\",\n        \"ŚLĄSKIE\",\n        \"ŚWIĘTOKRZYSKIE\",\n        \"WARMIŃSKO-MAZURSKIE\",\n        \"WIELKOPOLSKIE\",\n        \"ZACHODNIOPOMORSKIE\",\n    ]\n\n    MODULY = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"dzialy\",\n        \"nauczyciele\",\n        \"zgony\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeAutor = this.handleChangeAutor.bind(this);\n        this.handleChangeCytat = this.handleChangeCytat.bind(this);\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n\n        this.pobierzDaneGminy = this.pobierzDaneGminy.bind(this);\n        this.pobierzListePowiatow = this.pobierzListePowiatow.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            cytat: \"np: Kraków w 2019 realizował dobrą politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.\",\n            autor: \"np.: Maciej Pikor, Lider Polska 2050 w Małopolsce\",\n            select: this.MODULY,\n            liczbaDzialow: \"10\",\n            zgony: {podregion: '', zgony: []}\n        };\n    }\n\n    handleChangeAutor(autor: string) {\n        this.setState(Object.assign({}, this.state, {autor: autor}));\n    }\n\n    handleChangeCytat(cytat: string) {\n        this.setState(Object.assign({}, this.state, {cytat: cytat}));\n    }\n\n    handleChangeMultiple(values: string[]) {\n        this.setState(Object.assign({}, this.state, {select: values}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    //TODO: use redux\n    render() {\n        const {cytat, autor, select, liczbaDzialow, dane, powiaty, zgony} = this.state;\n        const wojewodztwa = this.wojewodztwa;\n        return (\n\n            // https://www.npmjs.com/package/react-component-export-image\n            <Box display=\"flex\" flexDirection=\"row\">\n                <Panel dane={dane} ref={this.componentRef} cytat={cytat} autor={autor} selected={select} liczbaDzialow={liczbaDzialow} zgony={zgony}/>\n                <form onSubmit={this.handleSubmit}>\n                    <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                        <strong>Wybór Jednostki Samorządu:</strong>\n                        <SelektorWojewodztwa wojewodztwa={wojewodztwa} wojewodztwoChangeFn={this.pobierzListePowiatow}/>\n                        <SelektorGminy powiaty={powiaty} gminaChangeFn={this.pobierzDaneGminy}/>\n                        <br/>\n                        <strong>Komentarz eksperta:</strong>\n                            <textarea name=\"cytat\" onChange={ev=>this.handleChangeCytat(ev.target.value)} value={cytat} style={{marginBottom: 10}}/>\n                            <input type=\"text\" name=\"autor\" onChange={ev=>this.handleChangeAutor(ev.target.value)} value={autor}/>\n                            <br/>\n                            <strong>Elementy grafiki:</strong>\n                            <WyborModulow moduly={this.MODULY} zmianaModuluFn={this.handleChangeMultiple}/>\n                        <strong>Max. liczba działów na wykresie:</strong>\n                        <input type=\"text\" name=\"liczbaDzialow\" onChange={ev=>this.handleChangeLiczbaDzialow(ev.target.value)} value={liczbaDzialow} style={{marginBottom: 10}}/>\n                        <button onClick={() => exportComponentAsPNG(this.componentRef)}>\n                            Export PNG\n                        </button>\n                    </Box>\n                </form>\n            </Box>\n        );\n    }\n\n    pobierzDaneGminy(kodGminy: string) {\n        const apiUrl = '/files/' + kodGminy + '-panel.json';\n        axios.get(apiUrl).then((response) => {\n            const ret: Dane = response.data;\n            console.log(ret);\n            this.setState(Object.assign({}, this.state, {dane: ret}));\n            console.log(ret.podregion_eurostat);\n            if (ret.podregion_eurostat) {\n                this.pobierzZgony(ret.podregion_eurostat)\n            }\n        });\n    }\n\n    pobierzListePowiatow(wojewodztwo: string) {\n        let wojName = wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\").replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\");\n        const apiUrl = '/files/' + wojName + '.json';\n        axios.get(apiUrl).then((response) => {\n            const ret = new Map<string, PowiatEls>();\n            for (const x in response.data) {\n                if (response.data.hasOwnProperty(x)) {\n                    const gminy = new Map<string, string>();\n                    for (const y in response.data[x]) {\n                        if (response.data[x].hasOwnProperty(y)) {\n                            gminy.set(y, response.data[x][y]);\n                        }\n                    }\n                    const p: PowiatEls = {gminy: gminy};\n                    ret.set(x, p);\n                }\n            }\n            this.setState(Object.assign({}, this.state, {powiaty: ret}));\n            const pierwszaGmina = ret.values().next().value.gminy.values().next().value;\n            this.pobierzDaneGminy(pierwszaGmina);\n        });\n    }\n\n    pobierzZgony(podregion: string) {\n        const apiUrl = '/files/' + podregion + '.json';\n        axios.get(apiUrl).then((response) => {\n            let x = response.data\n            console.log(x);\n            this.setState(Object.assign({}, this.state, {zgony: x}));\n        });\n    }\n\n    componentDidMount() {\n        this.pobierzListePowiatow(\"DOLNOŚLĄSKIE\");\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}