{"version":3,"sources":["action.ts","infografika/actions.ts","dane/actions.ts","SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Zgony.tsx","WykresXY.tsx","WykresKolowy.tsx","Naglowek.tsx","Panel.tsx","konfiguracja/actions.ts","SelektorWojewodztwa.tsx","WyborModulow.tsx","SelektorGrupy.tsx","Wykresy.tsx","App.tsx","reportWebVitals.ts","enhancers/monitorReducers.js","middleware/logger.js","dane/reducers.ts","infografika/reducers.ts","reducers.ts","konfiguracja/reducers.ts","index.tsx","configureStore.js"],"names":["CHANGE_LOGO_URL","CHANGE_AUTOR","CHANGE_CYTAT","CHANGE_DANE_GMINY","CHANGE_DANE_PODREGIONU","CHANGE_LISTA_POWIATOW","CHANGE_GRUPA_DZIAL","CHANGE_GRUPA_ROZDZIAL","ADD_WYKRES","DELETE_WYKRES","SET_WYKRES","MOVE_DOWN_WYKRES","MOVE_UP_WYKRES","setWykres","index","wykres","type","payload","pobierzDaneGminy","kodGminy","dispatch","getState","apiUrl","axios","get","then","response","changeDaneGminy","data","podregion_eurostat","pobierzZgony","kod_gus","wykresy","forEach","input","pobierzDaneGUS","gus_ids","opis","podregion","changeDanePodregionu","kodGus","ids_string","ids","split","map","x","parseInt","id","dane","label","results","r","i","length","values","v","z","year","val","dane_xy","dane_gminy","dane_podregionu","SelektorGminyInternal","this","props","lista_powiatow","defaultValue","onChange","ev","target","value","Array","from","powiat","gminy","gmina","kod_gminy","Fragment","React","Component","mapDispatchToProps","connector","connect","state","BudzetComp","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat_pc","wojewodztwo","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Zgony","zgony","syncId","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","axisLine","strokeWidth","ticks","iconSize","wrapperStyle","dot","stroke","WykresXY","typ_wykresu","jednostka","tekst","serie_string","serie","COLORS","commonChartProps","divider","indexOf","numberDivider","grid","tickSize","tickMargin","y1","yAxisId","orientation","position","offset","tickFormatter","y2","legend","name","replace","stackId","substr","undefined","fill","WykresKolowy","RADIAN","Math","PI","activeIndex","verticalOffset","onPieClick","midAngle","sin","setState","inside","legendRenderer","bind","entry","daneFinal","slice","push","reduce","a","b","reverse","dangerouslySetInnerHTML","__html","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","onClick","activeShape","percent","cos","osx","osy","omx","omy","oex","oey","isx","isy","imx","imy","outsideTextAnchor","procentCalosci","line1","round","line2","toFixed","d","y","textAnchor","dy","layout","verticalAlign","align","formatter","Naglowek","logo_url","typ_gminy","ludnosc","style","backgroundImage","PanelInternal","budzet","isShown","AttachMoney","fontSize","gospodarka_odpadami_komunalnymi","DeleteSharp","selected","dzial","kolowy_wlasne_dane","autor","cytat","grupa_dzial","grupa_rozdzial","children","wybranyDzial","caloscWydatkow","dzialCzescCalosci","grupyDzialyCzescCalosci","grupyDzialy","grupyRozdzialyCzescCalosci","grupyRozdzialy","dzialChildren","StylesProvider","injectFirst","renderBudzet","renderSmieci","budzet_wykres","forwardRef","pobierzListePowiatow","replaceAll","ret","hasOwnProperty","p","pierwszaGmina","next","WOJEWODZTWA","SelektorWojewodztwaInternal","marginBottom","WyborModulow","moduly","zmianaModuluFn","options","handleOnChange","GRUPY","SelektorGrupy","grupaChangeFn","WykresyInternal","csv","lines","result","line","d0","isNaN","Number","d1","d2","d3","d4","d5","dane0","dane1","dane2","dane3","dane4","dane5","json","nameValue","Equalizer","ShowChart","renderChartType","trim","debounceTimeout","element","forceNotifyByEnter","csvToWykresXYDaneArray","wykresXYDaneArrayToCsv","moveUpWykres","deleteWykres","moveDownWykres","addWykres","visibility","ArrowUpward","CancelRounded","ArrowDownward","renderWykres","App","classes","componentRef","MODULY","createRef","handleChangeMultiple","handleSubmit","select","Object","assign","liczbaDzialow","liczbaRozdzialow","daneObject","csvToNameValueArray","event","preventDefault","changeLogoUrl","changeAutor","changeCytat","Panel","ref","onSubmit","padding","SelektorWojewodztwa","SelektorGminy","handleChangeWlasnyOpis","handleChangeWlasnyDane","nameValueArrayToCsv","handleChangeWlasnyJednostka","handleChangeDzial","changeGrupaDzial","changeGrupaRozdzial","rel","href","color","Wykresy","exportComponentAsPNG","fileName","Date","toLocaleDateString","grupa","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","console","log","logger","store","group","info","groupEnd","initialDaneGminy","initialDanePodregionu","initial_wykresy","rootReducer","combineReducers","preloadedState","configureStore","middleware","loggerMiddleware","getDefaultMiddleware","enhancers","monitorReducersEnhancer","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb356f87.chunk.js","sourcesContent":["import {DaneGminy} from \"./dane/DaneGminy\";\nimport {DanePodregionu} from \"./dane/DanePodregionu\";\nimport {Wykres} from \"./infografika/Wykres\";\nimport {PowiatEls} from \"./konfiguracja/actions\";\n\nexport const CHANGE_LOGO_URL = \"CHANGE_LOGO_URL\";\nexport const CHANGE_AUTOR = \"CHANGE_AUTOR\";\nexport const CHANGE_CYTAT = \"CHANGE_CYTAT\";\nexport const CHANGE_DANE_GMINY = \"CHANGE_DANE_GMINY\";\nexport const CHANGE_DANE_PODREGIONU = \"CHANGE_DANE_PODREGIONU\";\nexport const CHANGE_LISTA_POWIATOW = \"CHANGE_LISTA_POWIATOW\";\nexport const CHANGE_GRUPA_DZIAL = \"CHANGE_GRUPA_DZIAL\";\nexport const CHANGE_GRUPA_ROZDZIAL = \"CHANGE_GRUPA_ROZDZIAL\";\n\nexport const ADD_WYKRES = \"ADD_WYKRES\";\nexport const DELETE_WYKRES = \"DELETE_WYKRES\";\nexport const SET_WYKRES = \"SET_WYKRES\";\nexport const MOVE_DOWN_WYKRES = \"MOVE_DOWN_WYKRES\";\nexport const MOVE_UP_WYKRES = \"MOVE_UP_WYKRES\";\n\nexport interface StringAction {\n    type: \"CHANGE_LOGO_URL\" | \"CHANGE_CYTAT\" | \"CHANGE_AUTOR\" | \"CHANGE_GRUPA_DZIAL\" | \"CHANGE_GRUPA_ROZDZIAL\";\n    payload: string;\n}\n\nexport interface DaneGminyAction {\n    type: \"CHANGE_DANE_GMINY\";\n    payload: DaneGminy;\n}\n\nexport interface DanePodregionuAction {\n    type: \"CHANGE_DANE_PODREGIONU\";\n    payload: DanePodregionu;\n}\n\nexport interface ListaPowiatowAction {\n    type: \"CHANGE_LISTA_POWIATOW\",\n    payload: PowiatEls[];\n}\n\nexport interface WykresAction {\n    type: \"ADD_WYKRES\" | \"DELETE_WYKRES\" | \"SET_WYKRES\" | \"MOVE_DOWN_WYKRES\" | \"MOVE_UP_WYKRES\",\n    payload: {wykres?: Wykres, index?: number}\n}\n\nexport interface addWykresAction extends WykresAction {\n    type: \"ADD_WYKRES\",\n}\n\nexport interface deleteWykresAction extends WykresAction {\n    type: \"DELETE_WYKRES\",\n}\n\nexport interface setWykresAction extends WykresAction {\n    type: \"SET_WYKRES\",\n}\n\nexport interface moveDownWykresAction extends WykresAction {\n    type: \"MOVE_DOWN_WYKRES\",\n}\n\nexport interface moveUpWykresAction extends WykresAction {\n    type: \"MOVE_UP_WYKRES\",\n}\n","import {ADD_WYKRES, CHANGE_GRUPA_DZIAL, DELETE_WYKRES, MOVE_DOWN_WYKRES, MOVE_UP_WYKRES, SET_WYKRES} from \"../action\";\nimport { CHANGE_GRUPA_ROZDZIAL } from \"../action\";\nimport {Wykres} from \"./Wykres\";\n\nexport const changeGrupaDzial = (grupa: string) => ({\n    type: CHANGE_GRUPA_DZIAL,\n    payload: grupa,\n});\n\nexport const changeGrupaRozdzial = (grupa: string) => ({\n    type: CHANGE_GRUPA_ROZDZIAL,\n    payload: grupa,\n});\n\nexport const addWykres = (wykres: Wykres) => ({\n    type: ADD_WYKRES,\n    payload: {wykres: wykres},\n})\n\nexport const deleteWykres = (index: number) => ({\n    type: DELETE_WYKRES,\n    payload: {index: index},\n})\n\nexport const setWykres = (index: number, wykres: Partial<Wykres>) => ({\n    type: SET_WYKRES,\n    payload: {wykres: wykres, index: index},\n})\n\nexport const moveUpWykres = (index: number) => ({\n    type: MOVE_UP_WYKRES,\n    payload: {index: index},\n})\n\nexport const moveDownWykres = (index: number) => ({\n    type: MOVE_DOWN_WYKRES,\n    payload: {index: index},\n})\n","import {DaneGminy} from \"./DaneGminy\";\nimport {CHANGE_DANE_GMINY, CHANGE_DANE_PODREGIONU} from \"../action\";\nimport axios from \"axios\";\nimport {Dispatch} from \"react\";\nimport {DanePodregionu} from \"./DanePodregionu\";\nimport {WykresXYDane} from \"../WykresXY\";\nimport {setWykres} from \"../infografika/actions\";\nimport {Wykres} from \"../infografika/Wykres\";\n\nexport const pobierzDaneGminy = (kodGminy: string) => {\n    return function (dispatch: Dispatch<any>, getState: any) {\n        const apiUrl = '/files/' + kodGminy + '-panel.json';\n        axios.get(apiUrl).then((response) => {\n            dispatch(changeDaneGminy(response.data));\n            if (response.data.podregion_eurostat) {\n                dispatch(pobierzZgony(response.data.podregion_eurostat));\n            }\n            if (response.data.kod_gus) {\n                getState().wykresy.forEach((input: Wykres, index: number) => {\n                    dispatch(pobierzDaneGUS(index, response.data.kod_gus || '', input.gus_ids || '', input.opis || ''));\n                });\n            }\n        });\n    }\n}\n\nexport const pobierzZgony = (podregion: string) => {\n    return function(dispatch: Dispatch<any>) {\n        const apiUrl = '/files/' + podregion + '.json';\n        axios.get(apiUrl).then((response) => {\n            dispatch(changeDanePodregionu(response.data));\n        });\n    }\n}\n\nexport const pobierzDaneGUS = (index: number, kodGus: string, ids_string: string, opis: string) => {\n    return function(dispatch: Dispatch<any>) {\n        let ids = ids_string.split(\",\").map(x => parseInt(x));\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        ids.forEach(id => {\n            apiUrl += \"&var-id=\" + id;\n        });\n        axios.get(apiUrl).then((response) => {\n            let dane: WykresXYDane[] = [{label: \"2015\"}, {label: \"2016\"}, {label: \"2017\"}, {label: \"2018\"}, {label: \"2019\"}];\n            for (let r of response.data.results) {\n                for (let i = 0; i < ids.length; i++) {\n                    // znajdzmy odpowiedni id do przypisania wartosci, aby byly w takiej kolejnosci jak na liscie\n                    if (ids[i] !== r.id) {\n                        continue;\n                    }\n                    for (let v of r.values) {\n                        for (let z of dane) {\n                            if (z.label === v.year) {\n                                // @ts-ignore\n                                z[\"dane\" + i] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            const wykres = {opis: opis, gus_ids: ids_string, dane_xy: dane};\n            dispatch(setWykres(index, wykres));\n        });\n    }\n}\n\nexport const changeDaneGminy = (dane_gminy: DaneGminy) => ({\n    type: CHANGE_DANE_GMINY,\n    payload: dane_gminy\n});\n\nexport const changeDanePodregionu = (dane_podregionu: DanePodregionu) => ({\n    type: CHANGE_DANE_PODREGIONU,\n    payload: dane_podregionu\n})","import React from \"react\";\nimport {pobierzDaneGminy} from \"./dane/actions\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {RootState} from \"./reducers\";\n\ninterface SelektorGminyProps extends PropsFromRedux {\n}\n\nclass SelektorGminyInternal extends React.Component<SelektorGminyProps> {\n    render() {\n        const {pobierzDaneGminy, lista_powiatow} = this.props;\n        return lista_powiatow?<select id=\"selektor-gminy\"\n                               defaultValue=\"1261011\"  // Tylko dla Małopolski\n                               onChange={ev => pobierzDaneGminy(ev.target.value)}>\n            {Array.from(lista_powiatow.values(), (value) => (\n                    <optgroup key={value.powiat} label={value.powiat}>\n                        {Array.from(value.gminy.values(), (gmina) => (\n                                <option key={gmina.gmina} value={gmina.kod_gminy}>\n                                    {gmina.gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>:<React.Fragment />;\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        lista_powiatow: state.lista_powiatow,\n    };\n};\n\nconst mapDispatchToProps = {\n    pobierzDaneGminy,\n}\n\nconst connector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(SelektorGminyInternal);","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\">\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./dane/DaneGminy\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\nimport {DanePodregionu} from \"./dane/DanePodregionu\";\n\nexport class Zgony extends React.Component<DanePodregionu> {\n    render() {\n        const {podregion, zgony} = this.props;\n        return <Box><br/><Box>Podregion {podregion}: wszystkie zgony wg. tygodnia:</Box>\n            <LineChart syncId={\"zgony\"} width={1060} height={500} data={zgony}\n                   margin={{ top: 10, right: 30, left: 20, bottom: 10 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"tydzien\" axisLine={{strokeWidth: 2}} ticks={[1,5,10,15,20,25,30,36,42,47,52]}/>\n            <YAxis axisLine={{strokeWidth: 2}}/>\n            <Legend iconSize={20} wrapperStyle={{bottom: -10}}/>\n            <Line type=\"monotone\" dot={false} dataKey=\"2014\" stroke=\"#92daad\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2015\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2016\" stroke=\"#72ba8d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2017\" stroke=\"#62aa7d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2018\" stroke=\"#529a6d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2019\" stroke=\"#428a5d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2020\" stroke=\"#ff2222\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {\n    Bar,\n    BarChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport {Wykres} from \"./infografika/Wykres\";\n\nexport interface WykresXYDane {\n    label: string;\n    dane0?: number;\n    dane1?: number;\n    dane2?: number;\n    dane3?: number;\n    dane4?: number;\n    dane5?: number;\n}\n\nexport class WykresXY extends React.Component<Wykres> {\n    render() {\n        const {dane_xy, opis, typ_wykresu = 'Liniowy (XY)', jednostka} = this.props;\n        if (opis === '') {\n            return null;\n        }\n        let [tekst, serie_string] = opis?opis.split('|'):[];\n        let serie = serie_string?serie_string.split(\",\"):[];\n        const COLORS = [\n            [],\n            [\"#003f5c\"],\n            [\"#003f5c\", \"#ffa600\"],\n            [\"#003f5c\", \"#bc5090\", \"#ffa600\"],\n            [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"],\n            [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\"],\n            [\"#003f5c\", \"#444e86\", \"#955196\", \"#dd5182\", \"#ff6e54\", \"#ffa600\"],\n            [\"#003f5c\", \"#374c80\", \"#7a5195\", \"#bc5090\", \"#ef5675\", \"#ff764a\", \"#ffa600\"],\n            [\"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"],\n        ];\n        const commonChartProps = {\n            syncId: opis,\n            width: 1200,\n            height: 500,\n            data: dane_xy,\n            margin: {top: 10, right: 40, left: 45, bottom: 10}\n        }\n        const divider = jednostka?(jednostka.indexOf('tys.') > -1?1000:\n            jednostka.indexOf('mln') > -1?1000000:1):1;\n\n        const numberDivider = (value: number) => {\n            return value / divider;\n        }\n        const grid = () => { return <CartesianGrid strokeDasharray=\"5 5\"/> }\n        const x = () => { return <XAxis dataKey=\"label\" tickSize={12} tickMargin={10}/>}\n        const y1 = () => { return <YAxis yAxisId=\"left\" orientation=\"left\" axisLine={{strokeWidth: 2}} tickSize={8} label={{value: jednostka, position: \"bottom\", offset: 20}} tickFormatter={numberDivider}/> }\n        const y2 = () => { return (opis && opis.indexOf(':R') > -1)?<YAxis yAxisId=\"right\" orientation=\"right\" axisLine={{strokeWidth: 2}} tickSize={18} label={jednostka} tickFormatter={numberDivider}/>:null }\n        const legend = () => { return <Legend iconSize={20} wrapperStyle={{bottom: -10}}/> }\n        return <Box><br/><Box>{tekst}</Box>\n            {typ_wykresu.indexOf(\"Kolumnowy\") > -1?\n                <BarChart {...commonChartProps}>\n                    {grid()} {x()} {y1()} {y2()} {legend()}\n                    {serie.map((value, index) => {\n                        return value !== ''?<Bar key={index}\n                                    name={value.replace(':R', ' (prawa oś)').replace(/:S:./, '')}\n                                    stackId={value.indexOf(':S:') > -1?value.substr(value.indexOf(':S:') + 3, 1):undefined}\n                                    dataKey={\"dane\" + index}\n                                    fill={COLORS[serie.length][index]}\n                                    yAxisId={value.indexOf(':R') > -1?'right':'left'}/>:null;\n                    })\n                    }\n                </BarChart>:\n                <LineChart {...commonChartProps}>\n                    {grid()} {x()} {y1()} {y2()} {legend()}\n                    {serie.map((value, index) => {\n                        return value !== ''?<Line key={index}\n                                    type=\"monotone\"\n                                    name={value.replace(':R', ' (prawa oś)')}\n                                    dataKey={\"dane\" + index}\n                                    stroke={COLORS[serie.length][index]}\n                                    fill={COLORS[serie.length][index]}\n                                    strokeWidth={2}\n                                    yAxisId={value.indexOf(':R') > -1?'right':'left'}/>:null;\n                    })\n                    }\n                </LineChart>}\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Cell, Legend, Pie, PieChart, PieLabelRenderProps, Sector} from \"recharts\";\nimport {Box} from \"@material-ui/core\";\n\nexport interface NameValue {\n    name: string;\n    value: number;\n}\n\nexport interface WykresKolowyProps {\n    dane: NameValue[];\n    opis?: string;\n    procentCalosci: number;\n    jednostka: string;\n    inside: boolean;\n}\n\nexport class WykresKolowy extends React.Component<WykresKolowyProps> {\n    constructor(props: WykresKolowyProps) {\n        super(props);\n\n        this.legendRenderer = this.legendRenderer.bind(this);\n    }\n\n    RADIAN = Math.PI / 180;\n    state = {\n        activeIndex: -1,\n        verticalOffset: 0,\n    };\n\n    onPieClick = (data: PieLabelRenderProps, index: number) => {\n        const {midAngle} = data;\n        const sin = Math.sin(-this.RADIAN * (midAngle || 0));\n        this.setState({\n            verticalOffset: (!this.props.inside && sin < 0 && this.state.activeIndex !== index ? 80 : 0),\n            activeIndex: (this.state.activeIndex === index? -1 : index),\n        });\n    };\n\n    // @ts-ignore\n    legendRenderer(value, entry, index) {\n        if (index === this.state.activeIndex) {\n            return <span><b>{value}</b></span>;\n        } else {\n            return <span>{value}</span>;\n        }\n    }\n\n    render() {\n        const {dane, opis = 'bla', inside} = this.props;\n        // @ts-ignore\n        const renderActiveShape = (props) => {\n            const {\n                cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n                percent, value,\n            } = props;\n            const fill = '#f9c00c';\n            const sin = Math.sin(-this.RADIAN * midAngle);\n            const cos = Math.cos(-this.RADIAN * midAngle);\n            const osx = cx + (outerRadius + 20) * cos;\n            const osy = cy + (outerRadius + 20) * sin;\n            const omx = cx + (outerRadius + 60) * cos;\n            const omy = cy + (outerRadius + 60) * sin;\n            const oex = omx;\n            const oey = cy + ((outerRadius / 0.86 + 36) * (sin >= 0 ? 1 : -1)) - 10;\n            const isx = cx + (innerRadius + 9) * cos;\n            const isy = cy + (innerRadius + 9) * sin;\n            const imx = cx + (innerRadius / 2) * cos;\n            const imy = cy + (innerRadius / 2) * sin;\n            const outsideTextAnchor = cos < 0 ? 'start' : 'end';\n            const procentCalosci = this.props.procentCalosci;\n            const v = this.props.jednostka.indexOf('tys.') > -1?Math.round(value/1000):\n                (this.props.jednostka.indexOf('mln') > -1?Math.round(value/1000000):value);\n            const line1 = v + ' ' + this.props.jednostka;\n            const line2 = (percent * 100).toFixed(2) + '%' + (procentCalosci === 100 ?'':' / ' + (1.0 * procentCalosci * percent).toFixed(2) + '%');\n            return (\n                <g>\n                    <Sector\n                        cx={cx + 12 * cos}\n                        cy={cy + 12 * sin}\n                        innerRadius={innerRadius}\n                        outerRadius={outerRadius + 5}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        fill={fill}\n                        stroke=\"black\"\n                        strokeWidth={2}\n                    />\n                    {inside?\n                        <React.Fragment>\n                            <path d={`M${isx},${isy}L${imx},${imy}`} stroke={fill} strokeWidth={2} fill=\"none\"/>\n                            <circle cx={imx} cy={imy} r={4} fill={fill} stroke=\"none\" />\n                            <text x={cx} y={cy} textAnchor=\"middle\" fill=\"#333\">{line1}</text>\n                            <text x={cx} y={cy} dy={36} textAnchor=\"middle\" fill=\"#999\">{line2}</text>\n                        </React.Fragment>:\n                        <React.Fragment>\n                            <path d={`M${osx},${osy}L${omx},${omy}L${oex},${oey}`} stroke={fill} strokeWidth={2} fill=\"none\" />\n                            <circle cx={oex} cy={oey} r={4} fill={fill} stroke=\"none\" />\n                            <text x={oex + (cos < 0 ? 1 : -1) * 24} y={oey} textAnchor={outsideTextAnchor} fill=\"#333\">{line1}</text>\n                            <text x={oex + (cos < 0 ? 1 : -1) * 24} y={oey} dy={36} textAnchor={outsideTextAnchor} fill=\"#999\">{line2}</text>\n                        </React.Fragment>}\n                </g>\n            );\n        };\n\n        let daneFinal: any[] = dane.slice(0, 8);\n        if (dane.length > 8) {\n            daneFinal.push({name: \"Pozostałe\", value: dane.slice(8).reduce((a, b) => a + b.value, 0)});\n        }\n        // https://learnui.design/tools/data-color-picker.html#palette\n        const COLORS = [\"grey\", \"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"].reverse();\n        // const HUE = [\n        //     [\"#003f5c\", \"#255571\", \"#406b88\", \"#59829e\", \"#739bb6\", \"#8db3ce\", \"#a7cde6\", \"#c2e7ff\"],\n        //     [\"#2f4b7c\", \"#475f8e\", \"#5f73a0\", \"#7688b2\", \"#8d9ec5\", \"#a5b4d8\", \"#bdcbeb\", \"#d6e2ff\"],\n        // ];\n        return <React.Fragment>\n            {opis?<React.Fragment><br/><Box className=\"intro\" dangerouslySetInnerHTML={{__html: opis}} /></React.Fragment>:<React.Fragment/>}\n            <PieChart width={1200} height={inside?520:400 + (this.state.activeIndex >= 0 ? 80:0)}>\n            <Pie data={daneFinal} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy={inside?254:200+this.state.verticalOffset}\n                 innerRadius={inside?160:40} outerRadius={inside?240:172} label={false} startAngle={450} endAngle={90} activeIndex={this.state.activeIndex}\n                 onClick={this.onPieClick}\n                 activeShape={renderActiveShape}>\n                {\n                    // @ts-ignore\n                    daneFinal.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={index === this.state.activeIndex?\"#f9c00c\":COLORS[index]}/>\n                    ))\n                }\n            </Pie>\n            <Legend layout=\"vertical\" verticalAlign=\"bottom\" align=\"right\" formatter={this.legendRenderer}/>\n            </PieChart>\n        </React.Fragment>;\n    }\n}","import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport {RootState} from \"./reducers\";\nimport {connect, ConnectedProps} from \"react-redux\";\n\ninterface NaglowekProps extends PropsFromRedux {\n}\n\nclass Naglowek extends React.Component<NaglowekProps> {\n    render() {\n        const { logo_url, dane_gminy } = this.props\n        const { gmina, typ_gminy, ludnosc } = dane_gminy;\n        return <Box className=\"wstep\" style={{backgroundImage: \"url(\" + logo_url + \")\"}}>\n            <Box className=\"prawa\">\n                <Box>&nbsp;</Box>\n                <Box className=\"nazwa_gminy\"><strong>{gmina}</strong></Box>\n                <Box>{typ_gminy?.replace(gmina || 'ble', '')}</Box>\n                <Box><strong>{ludnosc}</strong> mieszkańców</Box>\n                <Box>&nbsp;</Box>\n                <Box>&nbsp;</Box>\n            </Box>\n        </Box>\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        dane_gminy: state.dane_gminy,\n        logo_url: state.logo_url,\n    };\n};\n\nconst connector = connect(\n    mapStateToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(Naglowek);","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {Zgony} from \"./Zgony\";\nimport {WykresXY} from \"./WykresXY\";\nimport {WykresKolowy, WykresKolowyProps} from \"./WykresKolowy\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {RootState} from \"./reducers\";\nimport Naglowek from \"./Naglowek\";\nimport {Wykres} from \"./infografika/Wykres\";\n\n\ninterface PanelProps extends PropsFromRedux {\n    selected: string[];\n    dzial?: string;\n    kolowy_wlasne_dane: WykresKolowyProps[];\n}\n\nclass PanelInternal extends React.Component<PanelProps> {\n    renderBudzet(budzet?: Budzet) {\n        return this.isShown('budzet') && budzet?<React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi?: Budzet) {\n        return this.isShown('smieci') && gospodarka_odpadami_komunalnymi?\n            <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\" />\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    isShown(name: string) {\n        return (this.props.selected?.indexOf(name) > -1)\n    }\n\n    render() {\n        // LEGACY PROPS\n        const {dzial, wykresy, kolowy_wlasne_dane} = this.props;\n\n        const {autor, cytat, dane_gminy, dane_podregionu, grupa_dzial, grupa_rozdzial} = this.props;\n        const {podregion, zgony} = dane_podregionu;\n        const {gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = dane_gminy || {};\n        const wybranyDzial = children ? children[parseInt(dzial || '0')] : null;\n        const caloscWydatkow = children?.reduce((a, b) => a + b.value, 0) || 1;\n        const dzialCzescCalosci = ((wybranyDzial?.value || 0) * 100) / caloscWydatkow;\n        const grupyDzialyCzescCalosci = dane_gminy && dane_gminy.grupyDzialy && grupa_dzial && dane_gminy.grupyDzialy[grupa_dzial]?\n            // @ts-ignore\n            ((dane_gminy.grupyDzialy[grupa_dzial].reduce((a, b) => a + b.value, 0)) * 100 / caloscWydatkow):0;\n        const grupyRozdzialyCzescCalosci = dane_gminy && dane_gminy.grupyRozdzialy && grupa_rozdzial && dane_gminy.grupyRozdzialy[grupa_rozdzial]?\n            // @ts-ignore\n            ((dane_gminy.grupyRozdzialy[grupa_rozdzial].reduce((a, b) => a + b.value, 0)) * 100 / caloscWydatkow):0;\n        const dzialChildren = wybranyDzial ? wybranyDzial.children : [];\n\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Naglowek />\n                        <Box className=\"tlo\">\n                            {cytat !== '' ? <Box><i>{cytat}</i></Box> : ''}\n                            {autor !== '' ?\n                                <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                            <Box>&nbsp;</Box>\n                            {this.renderBudzet(budzet)}\n                            {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                            {this.isShown('dotacje_ue') && dotacje_ue?\n                                 <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                                 <React.Fragment />}\n                            {this.isShown('budzet-wykres') && dane_gminy && dane_gminy.budzet_wykres?\n                                <WykresXY dane_xy={dane_gminy.budzet_wykres} typ_wykresu=\"Kolumnowy (XY)\"\n                                          opis=\"Historia budżetu gminy:|dochody,wydatki\" jednostka=\"mln zł\"/> :null}\n                            {this.isShown('budzet-bilans') && dane_gminy && dane_gminy.budzet_wykres?\n                                <WykresXY dane_xy={dane_gminy.budzet_wykres} typ_wykresu=\"Kolumnowy (XY)\"\n                                          opis=\"Bilans budżetu gminy:|,,budżet:S:A,nadwyżka:S:A,deficyt:S:A\" jednostka=\"mln zł\"/> :null}\n                            {this.isShown('kolowy-wlasny') && kolowy_wlasne_dane?\n                                kolowy_wlasne_dane.map((entry, index) =>\n                                    (<WykresKolowy dane={kolowy_wlasne_dane[index].dane} opis={kolowy_wlasne_dane[index].opis}\n                                                   procentCalosci={100} jednostka={kolowy_wlasne_dane[index].jednostka} inside={false}/>)):<React.Fragment />}\n                            {this.isShown('dzialy') && children?\n                                    <WykresKolowy dane={children} opis=\"Wydatki wg. działów budżetu:\" procentCalosci={100} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('rozdzialy') && dzialChildren && wybranyDzial?\n                                    <WykresKolowy dane={dzialChildren} opis={\"Rozdział wydatków z <b>\" + wybranyDzial.name + \"</b>:\"} procentCalosci={dzialCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />\n                            }\n                            {this.isShown('grupy-dzialy') && dane_gminy && grupa_dzial && dane_gminy.grupyDzialy && dane_gminy.grupyDzialy[grupa_dzial]?\n                                    <WykresKolowy dane={dane_gminy.grupyDzialy[grupa_dzial]} opis={\"Wydatki z grupy <b>\" + grupa_dzial + \"</b> wg działu:\"} procentCalosci={grupyDzialyCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('grupy-rozdzialy') && dane_gminy && grupa_rozdzial && dane_gminy.grupyRozdzialy && dane_gminy.grupyRozdzialy[grupa_rozdzial]?\n                                    <WykresKolowy dane={dane_gminy.grupyRozdzialy[grupa_rozdzial]} opis={\"Wydatki z grupy <b>\" + grupa_rozdzial + \"</b> wg rozdziału:\"} procentCalosci={grupyRozdzialyCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {wykresy.map((entry: Wykres, index: number) =>\n                                <WykresXY key={index} {...entry}/>)}\n                            {this.isShown('zgony') && zgony?\n                                <Zgony zgony={zgony} podregion={podregion}/>:<React.Fragment />}\n                        </Box>\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n                </div>\n            </StylesProvider>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        autor: state.autor,\n        cytat: state.cytat,\n        dane_gminy: state.dane_gminy,\n        dane_podregionu: state.dane_podregionu,\n        grupa_dzial: state.grupa_dzial,\n        grupa_rozdzial: state.grupa_rozdzial,\n        wykresy: state.wykresy,\n    };\n};\n\n// forwardRef jest potrzebne, aby móc pobrać referencje na właściwy komponent Panel z App.tsx do screenshot'a\nconst connector = connect(mapStateToProps, null, null, { forwardRef: true });\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(PanelInternal);","import { CHANGE_LOGO_URL, CHANGE_CYTAT, CHANGE_AUTOR, CHANGE_LISTA_POWIATOW } from \"../action\";\nimport axios from \"axios\";\nimport {pobierzDaneGminy} from \"../dane/actions\";\nimport {Dispatch} from \"react\";\n\nexport const changeLogoUrl = (logo_url: string) => ({\n    type: CHANGE_LOGO_URL,\n    payload: logo_url\n});\n\nexport const changeCytat = (cytat: string) => ({\n    type: CHANGE_CYTAT,\n    payload: cytat\n});\n\nexport const changeAutor = (autor: string) => ({\n    type: CHANGE_AUTOR,\n    payload: autor\n});\n\nexport interface PowiatEls {\n    powiat: string,\n    gminy: Gmina[];\n}\n\nexport interface Gmina {\n    gmina: string,\n    kod_gminy: string;\n}\n\nexport const changeListaPowiatow = (listaPowiatow: PowiatEls[]) => ({\n    type: CHANGE_LISTA_POWIATOW,\n    payload: listaPowiatow\n})\n\nexport const pobierzListePowiatow = (wojewodztwo: string) => {\n    return function(dispatch: Dispatch<any>) {\n        let wojName = wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\")\n            .replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\")\n            .replaceAll(\"Ó\", \"O\").replaceAll(\"Ę\", \"E\");\n        const apiUrl = '/files/' + wojName + '.json';\n        axios.get(apiUrl).then((response) => {\n            const ret: PowiatEls[] = [];\n            for (const x in response.data) {\n                if (response.data.hasOwnProperty(x)) {\n                    let gminy: Gmina[] = [];\n                    for (const y in response.data[x]) {\n                        if (response.data[x].hasOwnProperty(y)) {\n                            gminy.push({gmina: y, kod_gminy: response.data[x][y]});\n                        }\n                    }\n                    const p: PowiatEls = {powiat: x, gminy: gminy};\n                    ret.push(p);\n                }\n            }\n            dispatch(changeListaPowiatow(ret));\n            const pierwszaGmina = (wojewodztwo === \"MAŁOPOLSKIE\"?\"1261011\":ret.values().next().value.gminy.values().next().value.kod_gminy);\n            dispatch(pobierzDaneGminy(pierwszaGmina));\n        });\n    }\n}","import React from \"react\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {pobierzListePowiatow} from \"./konfiguracja/actions\";\n\ninterface SelektorWojewodztwaProps extends PropsFromRedux{\n}\n\nconst WOJEWODZTWA = [\n    \"DOLNOŚLĄSKIE\",\n    \"KUJAWSKO-POMORSKIE\",\n    \"LUBELSKIE\",\n    \"LUBUSKIE\",\n    \"ŁÓDZKIE\",\n    \"MAŁOPOLSKIE\",\n    \"MAZOWIECKIE\",\n    \"OPOLSKIE\",\n    \"PODKARPACKIE\",\n    \"PODLASKIE\",\n    \"POMORSKIE\",\n    \"ŚLĄSKIE\",\n    \"ŚWIĘTOKRZYSKIE\",\n    \"WARMIŃSKO-MAZURSKIE\",\n    \"WIELKOPOLSKIE\",\n    \"ZACHODNIOPOMORSKIE\",\n]\n\nclass SelektorWojewodztwaInternal extends React.Component<SelektorWojewodztwaProps> {\n    render() {\n        const {pobierzListePowiatow} = this.props;\n        return <select defaultValue=\"MAŁOPOLSKIE\"\n            id=\"selektor-wojewodztwa\"\n            style={{marginBottom: 10}}\n            onChange={ev => pobierzListePowiatow(ev.target.value)}>\n            {WOJEWODZTWA.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n\nconst mapDispatchToProps = {\n    pobierzListePowiatow,\n}\n\nconst connector = connect(\n    null,\n    mapDispatchToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(SelektorWojewodztwaInternal);\n","import React from \"react\";\n// @ts-ignore\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\ninterface WyborModulowProps {\n    zmianaModuluFn: (moduly: string[]) => void;\n    moduly: string[];\n}\n\nexport class WyborModulow extends React.Component<WyborModulowProps> {\n    render() {\n        const {moduly, zmianaModuluFn} = this.props;\n        return <div style={{width: \"520px\"}}>\n            <DropdownMultiselect options={moduly} selected={moduly.slice(3)} handleOnChange={(selected: string[]) => zmianaModuluFn(selected)}>\n        </DropdownMultiselect></div>\n    }\n}","import React from \"react\";\n\ninterface SelektorGrupyProps {\n    grupaChangeFn: (grupa: string) => void;\n}\n\nconst GRUPY = [\n    \"Wynagrodzenia i składki\",\n    \"Wydatki na zadania statutowe\",\n    \"Dotacje na zadania bieżące\",\n    \"Świadczenia na rzecz osób fizycznych\",\n    \"Wynagrodzenia finansowane programami UE\",\n    \"Współfinansowanie wynagrodzeń programów UE\",\n    \"Wynagrodzenia dla innych programów zagranicznych\",\n    \"Wydatki finansowane programami UE\",\n    \"Współfinansowanie wydatków programów UE\",\n    \"Wydatki dla innych programów zagranicznych\",\n    \"Dotacje bieżące z programów UE\",\n    \"Współfinansowanie dotacji bieżących z programów UE\",\n    \"Dotacje bieżące z innych programów zagranicznych\",\n    \"Świadczenia dla osób fizycznych finansowane z UE\",\n    \"Współfinansowane świadczeń dla osób fizycznych z UE\",\n    \"Świadczenia dla osób fizycznych z innych programów zagranicznych\",\n    \"Wypłaty z poręczeń i gwarancji udzielonych przez gminę\",\n    \"Obsługa długu\",\n    \"Inwestycje ze środków gminy\",\n    \"Inwestycje ze środków UE\",\n    \"Współfinansowanie inwestycji ze środków UE\",\n    \"Dotacje do inwestycji ze środków gminy\",\n    \"Dotacje do inwestycji ze środków UE\",\n    \"Współfinansowanie dotacji do inwestycji ze środków UE\",\n    \"Zakup i objęcie akcji i udziałów\",\n    \"Wniesienie wkładów do spółek prawa handlowego\",\n]\n\nexport class SelektorGrupy extends React.Component<SelektorGrupyProps> {\n    render() {\n        return <select\n            id=\"SelektorGrupy\"\n            style={{marginBottom: 10}}\n            onChange={ev => this.props.grupaChangeFn(ev.target.value)}>\n            {GRUPY.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import {Wykres} from \"./infografika/Wykres\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, ArrowDownward, ArrowUpward, CancelRounded, Equalizer, ShowChart} from \"@material-ui/icons\";\nimport {DebounceInput} from \"react-debounce-input\";\nimport {RootState} from \"./reducers\";\nimport {\n    addWykres,\n    deleteWykres,\n    moveDownWykres,\n    moveUpWykres,\n    setWykres\n} from \"./infografika/actions\";\nimport {pobierzDaneGUS} from \"./dane/actions\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {WykresXYDane} from \"./WykresXY\";\n\ninterface WykresyProps extends PropsFromRedux {\n}\n\nclass WykresyInternal extends React.Component<WykresyProps> {\n    csvToWykresXYDaneArray(csv: string) {\n        let lines = csv.split('\\n');\n        let result = [];\n        for(let i = 0;i < lines.length;i++) {\n            if (lines[i].length === 0) {\n                continue;\n            }\n            let line = lines[i].split(\",\");\n            let d0 = isNaN(Number(line[1]))?undefined:Number(line[1]);\n            let d1 = isNaN(Number(line[2]))?undefined:Number(line[2]);\n            let d2 = isNaN(Number(line[3]))?undefined:Number(line[3]);\n            let d3 = isNaN(Number(line[4]))?undefined:Number(line[4]);\n            let d4 = isNaN(Number(line[5]))?undefined:Number(line[5]);\n            let d5 = isNaN(Number(line[6]))?undefined:Number(line[6]);\n            result.push({label: line[0],\n                dane0: d0,\n                dane1: d1,\n                dane2: d2,\n                dane3: d3,\n                dane4: d4,\n                dane5: d5,\n            });\n        }\n        return result;\n    }\n\n    wykresXYDaneArrayToCsv(json: WykresXYDane[]) {\n        let ret = '';\n        json.forEach((nameValue) => {ret += nameValue.label + ',' + (nameValue.dane0?nameValue.dane0:'') + ',' + (nameValue.dane1?nameValue.dane1:'') + ',' + (nameValue.dane2?nameValue.dane2:'') + ',' + (nameValue.dane3?nameValue.dane3:'') + ',' + (nameValue.dane4?nameValue.dane4:'') + ',' + (nameValue.dane5?nameValue.dane5:'') + '\\n'});\n        return ret;\n    }\n\n    renderChartType(index: number, wykres: Wykres) {\n        const {setWykres} = this.props;\n        switch (wykres.typ_wykresu) {\n            case \"Liniowy (XY)\":\n                return <button className=\"ikonaWykresu\" onClick={ev=>setWykres(index, {typ_wykresu: \"Kolumnowy (XY)\"})}><Equalizer/></button>\n            case \"Kolumnowy (XY)\":\n                return <button className=\"ikonaWykresu\" onClick={ev=>setWykres(index, {typ_wykresu: \"Liniowy (XY)\"})}><ShowChart/></button>\n            case \"GUS: Liniowy\":\n                return <button className=\"ikonaWykresu\" onClick={ev=>setWykres(index, {typ_wykresu: \"GUS: Kolumnowy\"})}><Equalizer/></button>\n            case \"GUS: Kolumnowy\":\n                return <button className=\"ikonaWykresu\" onClick={ev=>setWykres(index, {typ_wykresu: \"GUS: Kolumnowy\"})}><ShowChart/></button>\n        }\n    }\n\n    renderWykres(index: number, wykres: Wykres, kod_gus: string) {\n        const {pobierzDaneGUS, setWykres} = this.props;\n        switch (wykres.typ_wykresu) {\n            case \"GUS: Liniowy\":\n            case \"GUS: Kolumnowy\":\n                return <React.Fragment>\n                    <Box display=\"flex\" flexDirection=\"row\">\n                        {this.renderChartType(index, wykres)}\n                        <Box display=\"flex\" flexDirection=\"column\">\n                            <span className=\"hint\"> <b>Wykres {index}</b></span>\n                            <span className=\"hint\">Format: NAGŁÓWEK|SERIA1,SERIA2:R (\":R\" przypisuje serię do prawej osi Y)</span>\n                        </Box>\n                    </Box>\n                    <DebounceInput type=\"text\" name=\"opis\" value={wykres.opis}\n                                   onChange={ev=>setWykres(index, {opis: ev.target.value.trim()})}\n                                   debounceTimeout={2000}/>\n                    <span className=\"hint\">Identyfikatory danych z GUS. Dane muszą być dostępne na poziomie gminy.</span>\n                    <DebounceInput type=\"text\" name=\"gus_ids\" value={wykres.gus_ids}\n                                   onChange={ev=>pobierzDaneGUS(index, kod_gus, ev.target.value.trim(), wykres.opis)}\n                                   debounceTimeout={2000}/>\n                </React.Fragment>\n            case \"Kolumnowy (XY)\":\n            case \"Liniowy (XY)\":\n                return <React.Fragment>\n                    <Box display=\"flex\" flexDirection=\"row\">\n                        {this.renderChartType(index, wykres)}\n                        <Box display=\"flex\" flexDirection=\"column\">\n                            <span className=\"hint\"> <b>Wykres {index}</b></span>\n                            <span className=\"hint\">Nagłówek wykresu na bazie własnych danych:</span>\n                        </Box>\n                    </Box>\n                    <DebounceInput type=\"text\" name=\"opis\" value={wykres.opis}\n                                   onChange={ev=>setWykres(index, {opis: ev.target.value.trim()})}\n                                   debounceTimeout={2000}/>\n                    <DebounceInput element=\"textarea\" forceNotifyByEnter={false} debounceTimeout={2000} className=\"json\" name=\"wlasny_liniowy.dane\"\n                                   onChange={ev=>setWykres(index, {dane_xy: this.csvToWykresXYDaneArray(ev.target.value)})}\n                                   value={this.wykresXYDaneArrayToCsv(wykres.dane_xy || [])}/>\n                    <span className=\"hint\">Jednostka osi Y. Jeśli zawiera 'tys.' lub 'mln' to zostanie odpowiednio przeliczona:</span>\n                    <DebounceInput type=\"text\" name=\"wlasny_liniowy.jednostka\" onChange={ev=>setWykres(index, {jednostka: ev.target.value})}\n                           value={wykres.jednostka} debounceTimeout={2000}/>\n                </React.Fragment>\n        }\n        return null;\n    }\n\n    render() {\n        const {dane_gminy, wykresy} = this.props;\n        const {moveUpWykres, deleteWykres, moveDownWykres, addWykres, setWykres} = this.props;\n\n        return (<React.Fragment>\n            {wykresy.map((input: Wykres, index: number) => {\n                return <React.Fragment key={index}>\n                    <Box display=\"flex\" flexDirection=\"row\" className={index%2===0?\"odd\":\"even\"}>\n                        <Box display=\"flex\" flexDirection=\"column\" className=\"panelIkon\">\n                            <button className=\"ikonaWykresu\" onClick={ev=>moveUpWykres(index)} style={{visibility: index > 0?\"visible\":\"hidden\"}}><ArrowUpward/></button>\n                            <button className=\"ikonaWykresu\" onClick={ev=>deleteWykres(index)}><CancelRounded/></button>\n                            <button className=\"ikonaWykresu\" onClick={ev=>moveDownWykres(index)} style={{visibility: index < wykresy.length - 1?\"visible\":\"hidden\"}}><ArrowDownward/></button>\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"column\">\n                            {this.renderWykres(index, input, dane_gminy.kod_gus || '')}\n                        </Box>\n                    </Box>\n                </React.Fragment>})}\n                <Box display=\"flex\" flexDirection=\"row\" className={\"panelDodania \" + ((wykresy.length)%2===0?\"odd\":\"even\")}>\n                    <button className=\"ikonaWykresu\" onClick={ev=>addWykres({opis: \"Nowy Wykres\"})}><AddCircleOutline/></button>\n                </Box>\n            </React.Fragment>);\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        wykresy: state.wykresy,\n        dane_gminy: state.dane_gminy,\n    };\n};\n\nconst mapDispatchToProps = {\n    pobierzDaneGUS,\n    moveUpWykres,\n    deleteWykres,\n    moveDownWykres,\n    setWykres,\n    addWykres,\n}\n\nconst connector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(WykresyInternal);","import {connect, ConnectedProps} from 'react-redux'\nimport React, {FormEvent} from 'react';\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport SelektorGminy from \"./SelektorGminy\";\nimport Panel from \"./Panel\";\nimport SelektorWojewodztwa from \"./SelektorWojewodztwa\";\nimport {WyborModulow} from \"./WyborModulow\";\nimport {SelektorGrupy} from \"./SelektorGrupy\";\nimport {DebounceInput} from \"react-debounce-input\";\nimport {NameValue, WykresKolowyProps} from \"./WykresKolowy\";\nimport {changeAutor, changeCytat, changeLogoUrl, pobierzListePowiatow} from \"./konfiguracja/actions\";\nimport {RootState} from \"./reducers\";\nimport {\n    changeGrupaDzial,\n    changeGrupaRozdzial,\n} from \"./infografika/actions\";\nimport Wykresy from \"./Wykresy\";\n\ninterface AppProps extends PropsFromRedux {\n}\n\ninterface AppState {\n    select: string[];\n    dzial: string;\n    kolowy_wlasne_dane: WykresKolowyProps[];\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    MODULY = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"budzet-wykres\",\n        \"budzet-bilans\",\n        \"kolowy-wlasny\",\n        \"xy-wlasny\",\n        \"dzialy\",\n        \"rozdzialy\",\n        \"grupy-dzialy\",\n        \"grupy-rozdzialy\",\n        \"zgony\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            select: this.MODULY.slice(3),\n            dzial: \"0\",\n            kolowy_wlasne_dane: [\n                {\n                    dane: [{\"name\": \"Pierwsza wartość\", \"value\": 321000},\n                        {\"name\": \"Druga wartość\", \"value\": 227000},\n                        {\"name\": \"Trzecia wartość\", \"value\": 146000},\n                        {\"name\": \"Czwarta wartość\", \"value\": 110000},\n                        {\"name\": \"Piąta wartość\", \"value\": 109000},\n                        {\"name\": \"Szósta wartość\", \"value\": 87000},\n                        {\"name\": \"Siódma wartość\", \"value\": 77000},\n                        {\"name\": \"Ósma wartość\", \"value\": 66000},\n                        {\"name\": \"Pozostałe\", \"value\": 88000}],\n                    opis: 'Wykres dla dowolnych danych - zmień wartości w panelu po prawej i zobacz efekt',\n                    procentCalosci: 100,\n                    jednostka: 'tys. zł',\n                    inside: true,\n                }\n            ],\n        };\n    }\n\n    handleChangeMultiple(values: string[]) {\n        this.setState(Object.assign({}, this.state, {select: values}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleChangeLiczbaRozdzialow(liczbaRozdzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaRozdzialow: liczbaRozdzialow}));\n    }\n\n    handleChangeDzial(dzial: string) {\n        this.setState(Object.assign({}, this.state, {dzial: dzial}));\n    }\n\n    handleChangeWlasnyOpis(opis: string) {\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {opis: opis})\n                ]}));\n    }\n\n    handleChangeWlasnyDane(dane: string) {\n        let daneObject = this.csvToNameValueArray(dane);\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {dane: daneObject})\n                ]}));\n    }\n\n    handleChangeWlasnyJednostka(jednostka: string) {\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {jednostka: jednostka})\n                ]}));\n    }\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    isShown(name: string) {\n        return (this.state.select.indexOf(name) > -1)\n    }\n\n    csvToNameValueArray(csv: string) {\n        let lines = csv.split('\\n');\n        let result = [];\n        for(let i = 0;i < lines.length;i++) {\n            let line = lines[i].split(\",\");\n            if (line.length === 2) {\n                let v = isNaN(Number(line[1]))?0:Number(line[1]);\n                result.push({name: line[0], value: v});\n            }\n        }\n        return result;\n    }\n\n    nameValueArrayToCsv(json: NameValue[]) {\n        let x = '';\n        json.forEach((nameValue) => {x += nameValue.name + ',' + nameValue.value + '\\n'});\n        return x;\n    }\n\n    render() {\n        const {select, dzial, kolowy_wlasne_dane} = this.state;\n\n        const {autor, cytat, logo_url, dane_gminy} = this.props;\n        const {changeLogoUrl, changeAutor, changeCytat} = this.props;\n        return (\n            <Box display=\"flex\" flexDirection=\"row\">\n                <Panel ref={this.componentRef} selected={select} dzial={dzial}\n                       kolowy_wlasne_dane={kolowy_wlasne_dane}/>\n                <form onSubmit={this.handleSubmit}>\n                    <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                        <span className=\"hint\">URL logo w nagłówku:</span>\n                        <input type=\"text\" name=\"logo_url\" onChange={ev=>changeLogoUrl(ev.target.value)} value={logo_url}/>\n                        <strong>Wybór Jednostki Samorządu:</strong>\n                        <span className=\"hint\">Województwo:</span>\n                        <SelektorWojewodztwa />\n                        <span className=\"hint\">Gmina:</span>\n                        <SelektorGminy />\n                        <hr/>\n                        <strong>Komentarz eksperta:</strong>\n                        <span className=\"hint\">Tekst:</span>\n                        <textarea name=\"cytat\" onChange={ev=>changeCytat(ev.target.value)} value={cytat}/>\n                        <span className=\"hint\">Autor:</span>\n                        <input type=\"text\" name=\"autor\" onChange={ev=>changeAutor(ev.target.value)} value={autor}/>\n                        <hr/>\n                        <strong>Elementy grafiki:</strong>\n                        <WyborModulow moduly={this.MODULY} zmianaModuluFn={this.handleChangeMultiple}/>\n                        <hr/>\n                        {this.isShown('kolowy-wlasny')?<React.Fragment>\n                            <strong>Wykres kołowy na bazie własnych danych:</strong>\n                            <span className=\"hint\">Nagłówek wykresu:</span>\n                            <input type=\"text\" name=\"wlasny_kolowy.opis\" onChange={ev=>this.handleChangeWlasnyOpis(ev.target.value)}\n                                   value={kolowy_wlasne_dane[0].opis} />\n                            <span className=\"hint\">Dane do wykresu:</span>\n                            <DebounceInput element=\"textarea\" forceNotifyByEnter={false} debounceTimeout={2000} className=\"json\" name=\"wlasny.dane\" onChange={ev=>this.handleChangeWlasnyDane(ev.target.value)} value={this.nameValueArrayToCsv(kolowy_wlasne_dane[0].dane)}/>\n                            <span className=\"hint\">Jednostka do dodania do nazw. Jeśli zawiera 'tys.' lub 'mln' to zostanie odpowiednio przeliczona:</span>\n                            <input type=\"text\" name=\"wlasny_kolowy.jednostka\" onChange={ev=>this.handleChangeWlasnyJednostka(ev.target.value)}\n                                   value={kolowy_wlasne_dane[0].jednostka} />\n                            <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('rozdzialy')?<React.Fragment>\n                                <strong>Number działu do szczegółowego wyświetlenia:</strong>\n                                <input type=\"text\" name=\"dzial\" value={dzial}\n                                       onChange={ev=>this.handleChangeDzial(ev.target.value)}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-dzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na działy:</strong>\n                                <SelektorGrupy grupaChangeFn={this.props.changeGrupaDzial}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-rozdzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na rozdziały:</strong>\n                                <SelektorGrupy grupaChangeFn={this.props.changeGrupaRozdzial}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        <Box><strong>Wykresy z :</strong>(<a target=\"_blank\" rel=\"noreferrer\"  href=\"https://bdl.stat.gov.pl/BDL/metadane/cechy/2398#\">źródło</a>)</Box>\n                        <Box style={{color: \"red\"}}>(Puste wykresy GUS to zwykle awaria ich serwera - ostatnio 3.I.21)</Box>\n                        <Wykresy/>\n                        <button onClick={() => exportComponentAsPNG(this.componentRef, {fileName: dane_gminy.gmina + \"-\" + new Date().toLocaleDateString(\"pl-PL\") + \".png\"})}>\n                            Pobierz plik PNG\n                        </button>\n                    </Box>\n                </form>\n            </Box>\n        );\n    }\n\n    componentDidMount() {\n        this.props.pobierzListePowiatow(\"MAŁOPOLSKIE\");\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        autor: state.autor,\n        cytat: state.cytat,\n        logo_url: state.logo_url,\n        dane_gminy: state.dane_gminy,\n        lista_powiatow: state.lista_powiatow,\n    };\n};\n\nconst mapDispatchToProps = {\n    changeAutor,\n    changeCytat,\n    changeGrupaDzial,\n    changeGrupaRozdzial,\n    changeLogoUrl,\n    pobierzListePowiatow,\n}\n\nconst connector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(App);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer\n","const logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nexport default logger\n","import {CHANGE_DANE_GMINY, CHANGE_DANE_PODREGIONU, DaneGminyAction, DanePodregionuAction} from \"../action\";\nimport {DaneGminy} from \"./DaneGminy\";\nimport {DanePodregionu} from \"./DanePodregionu\";\n\nconst initialDaneGminy: DaneGminy = {\n    gmina: \"\",\n    typ_gminy: \"\",\n    grupyDzialy: [],\n    grupyRozdzialy: [],\n};\n\nexport const dane_gminy = (state: DaneGminy = initialDaneGminy, action: DaneGminyAction) => {\n    switch (action.type) {\n        case CHANGE_DANE_GMINY:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst initialDanePodregionu: DanePodregionu = {\n    podregion: \"\",\n    zgony: []\n}\n\nexport const dane_podregionu = (state: DanePodregionu = initialDanePodregionu, action: DanePodregionuAction) => {\n    switch (action.type) {\n        case CHANGE_DANE_PODREGIONU:\n            return action.payload;\n        default:\n            return state;\n    }\n};","import {\n    ADD_WYKRES,\n    CHANGE_GRUPA_DZIAL,\n    CHANGE_GRUPA_ROZDZIAL, DELETE_WYKRES, WykresAction,\n    MOVE_DOWN_WYKRES, MOVE_UP_WYKRES, SET_WYKRES,\n    StringAction,\n} from \"../action\";\nimport {Wykres} from \"./Wykres\";\n\nexport const grupa_dzial = (state = 'Wynagrodzenia i składki', action: StringAction) => {\n    switch (action.type) {\n        case CHANGE_GRUPA_DZIAL:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const grupa_rozdzial = (state = 'Wynagrodzenia i składki', action: StringAction) => {\n    switch (action.type) {\n        case CHANGE_GRUPA_ROZDZIAL:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst initial_wykresy: Wykres[] = [{\n    typ_wykresu: \"Kolumnowy (XY)\",\n    opis: \"Wykres XY dla dowolnych danych - zmień wartości i zobacz efekt|seria1:S:A, seria2:S:A, seria3:R\",\n    dane_xy: [\n        {label: \"2015\", dane0: 24, dane1: 65, dane2: 1034},\n        {label: \"2016\", dane0: 34, dane1: 55, dane2: 1234},\n        {label: \"2017\", dane0: 54, dane1: 35, dane2: 1634},\n        {label: \"2018\", dane0: 74, dane1: 15, dane2: 2234},\n        {label: \"2019\", dane0: 104, dane1: 3, dane2: 2234},\n    ],\n    },{\n    typ_wykresu: \"GUS: Liniowy\",\n    opis: \"Procent mieszkańców podłączonych do kanalizacji|miasto,ogółem,wieś\",\n    gus_ids: \"60308,60309,60310\"},{\n    typ_wykresu: \"GUS: Liniowy\",\n    opis: \"Emisja zanieczyszczeń|gazowych bez CO2,pyłowych:R\",\n    gus_ids: \"1509,1508\"},{\n    typ_wykresu: \"GUS: Liniowy\",\n    opis: \"Tereny zieleni|parki,zieleńce,zieleń uliczna,zieleń lokalna,zieleń osiedlowa\",\n    gus_ids: \"73847,73848,73849,73850,73852\"},{\n    typ_wykresu: \"GUS: Liniowy\",\n    opis: \"Dzieci, młodzież i dorośli wg rodzaju placówki:|żłobki,przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n    gus_ids: \"377227,151864,151867,455415,2394,455392\"},{\n    typ_wykresu: \"GUS: Liniowy\",\n    opis: \"Uczniowie przypadający na 1 oddział w szkołach:|podstawowych,liceach,zawodowych\",\n    gus_ids: \"454078,454099,454088\"},{\n    typ_wykresu: \"GUS: Liniowy\",\n    opis: \"Etaty nauczycielskie wg rodzaju szkoły:|przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n    gus_ids: \"288152,377896,378306,378248,378626\"}]\n\n\nexport const wykresy = (state = initial_wykresy, action: WykresAction) => {\n    switch (action.type) {\n        case ADD_WYKRES:\n            if (action.payload.wykres === undefined) {\n                console.log(\"Brak wartosci dla ADD_WYKRES\");\n                return state;\n            }\n            return [...state, action.payload.wykres];\n        case DELETE_WYKRES:\n            if (action.payload.index === undefined) {\n                console.log(\"Brak indexu dla DELETE_WYKRES\");\n                return state;\n            }\n            return [\n                ...state.slice(0, action.payload.index),\n                ...state.slice(action.payload.index + 1)\n            ];\n        case SET_WYKRES:\n            if (action.payload.index === undefined || action.payload.wykres === undefined) {\n                console.log(\"Brak indexu lub gus_input dla SET_WYKRES\");\n                return state;\n            }\n            return [\n                ...state.slice(0, action.payload.index),\n                {...(state[action.payload.index]), ...action.payload.wykres},\n                ...state.slice(action.payload.index + 1)\n        ];\n        case MOVE_UP_WYKRES:\n            if (action.payload.index === undefined || action.payload.index < 1) {\n                console.log(\"Brak lub zly indeks dla MOVE_UP_WYKRES\");\n                return state;\n            }\n            return [\n                ...state.slice(0, action.payload.index - 1),\n                ...state.slice(action.payload.index, action.payload.index + 1),\n                ...state.slice(action.payload.index -1, action.payload.index),\n                ...state.slice(action.payload.index + 1)\n            ]\n\n        case MOVE_DOWN_WYKRES:\n            if (action.payload.index === undefined || action.payload.index > state.length -2) {\n                console.log(\"Brak lub zly indeks dla MOVE_DOWN_WYKRES\");\n                return state;\n            }\n            return [\n                ...state.slice(0, action.payload.index),\n                ...state.slice(action.payload.index + 1, action.payload.index + 2),\n                ...state.slice(action.payload.index, action.payload.index + 1),\n                ...state.slice(action.payload.index + 2)\n            ]\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport {autor, cytat, logo_url, lista_powiatow} from \"./konfiguracja/reducers\";\nimport {dane_gminy, dane_podregionu} from \"./dane/reducers\";\nimport {grupa_dzial, grupa_rozdzial, wykresy} from \"./infografika/reducers\";\n\n\nconst rootReducer = combineReducers({\n    autor,\n    cytat,\n    dane_gminy,\n    logo_url,\n    dane_podregionu,\n    lista_powiatow,\n    grupa_dzial,\n    grupa_rozdzial,\n    wykresy,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>","import {\n    CHANGE_LOGO_URL,\n    CHANGE_CYTAT,\n    CHANGE_AUTOR,\n    StringAction,\n    ListaPowiatowAction,\n    CHANGE_LISTA_POWIATOW\n} from \"../action\";\nimport {PowiatEls} from \"./actions\";\n\nexport const logo_url = (state = 'header_logo.png', action: StringAction) => {\n    switch (action.type) {\n        case CHANGE_LOGO_URL:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const cytat = (state = 'np: Kraków w 2019 realizował zrównoważoną politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.', action: StringAction) => {\n    switch (action.type) {\n        case CHANGE_CYTAT:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const autor = (state = 'np: Jan Kowalski, Prezydent Miasta Krakowa', action: StringAction) => {\n    switch (action.type) {\n        case CHANGE_AUTOR:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const lista_powiatow = (state: PowiatEls[] = [], action: ListaPowiatowAction) => {\n    switch (action.type) {\n        case CHANGE_LISTA_POWIATOW:\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport configureStore from './configureStore'\n\nconst store = configureStore()\n\nconst renderApp = () => ReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ndocument.title = \"Generator Infografik\";\n\n// @ts-ignore\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n    // @ts-ignore\n    module.hot.accept('./App', renderApp)\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\nimport loggerMiddleware from './middleware/logger'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [loggerMiddleware, ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}\n"],"sourceRoot":""}