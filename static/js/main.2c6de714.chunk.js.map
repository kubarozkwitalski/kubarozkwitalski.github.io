{"version":3,"sources":["SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Nauczyciele.tsx","Zgony.tsx","Uczniowie.tsx","GUSComp.tsx","Panel.tsx","SelektorWojewodztwa.tsx","WyborModulow.tsx","SelektorGrupy.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelektorGminy","this","props","gminaChangeFn","powiaty","id","onChange","ev","target","value","Array","from","entries","key","label","gminy","gmina","kodGminy","Fragment","React","Component","BudzetComp","dane","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat","powiat_pc","wojewodztwo","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Nauczyciele","console","log","syncId","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","Zgony","podregion","zgony","dot","UczniowieComp","GUSComp","opis","split","tekst","serie_string","serie","COLORS","map","index","name","Panel","budzet","selected","indexOf","AttachMoney","fontSize","gospodarka_odpadami_komunalnymi","DeleteSharp","cytat","autor","dzial","liczbaDzialow","liczbaRozdzialow","grupaDzial","grupaRozdzial","nauczyciele","uczniowie","gus_comps","ludnosc","children","wybranyDzial","parseInt","dzialChildren","dzialy","Number","rozdzialy","StylesProvider","injectFirst","renderBudzet","renderSmieci","Math","max","min","length","slice","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","entry","fill","layout","verticalAlign","align","grupyDzialy","grupyRozdzialy","SelektorWojewodztwa","wojewodztwoChangeFn","wojewodztwa","style","marginBottom","WyborModulow","moduly","zmianaModuluFn","options","handleOnChange","SelektorGrupy","grupaChangeFn","grupy","App","classes","componentRef","MODULY","GRUPY","createRef","handleChangeAutor","bind","handleChangeCytat","handleChangeMultiple","pobierzDaneGminy","pobierzListePowiatow","handleChangeGrupyDzialy","handleChangeGrupyRozdzialy","handleSubmit","state","select","gus_opis","gus_id","setState","Object","assign","values","grupa","event","preventDefault","ref","onSubmit","padding","handleChangeLiczbaDzialow","handleChangeDzial","handleChangeLiczbaRozdzialow","href","pobierzGUSComps","kod_gus","onClick","exportComponentAsPNG","apiUrl","axios","get","then","response","ret","podregion_eurostat","pobierzZgony","pobierzNauczycieli","pobierzUczniowie","replaceAll","Map","x","hasOwnProperty","y","set","p","pierwszaGmina","next","kodGus","szkoly","288152","288154","288155","288156","377896","377897","377895","378306","378248","378626","378627","378628","378629","378630","378631","rok","results","r","v","z","year","undefined","val","377227","151864","151867","46733","46726","455415","2394","455392","ids_string","ids","forEach","i","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c6de714.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface SelektorGminyProps {\n    gminaChangeFn: (kodGminy: string) => void;\n    powiaty?: Map<string, PowiatEls>;\n}\n\nexport interface PowiatEls {\n    gminy: Map<string, string>;\n}\n\nexport class SelektorGminy extends React.Component<SelektorGminyProps> {\n    render() {\n        const {gminaChangeFn, powiaty} = this.props;\n        return powiaty?<select\n            id=\"demo\"\n            // value={selected}\n            onChange={ev => gminaChangeFn(ev.target.value)}>\n            {Array.from(powiaty.entries(), ([key, value]) => (\n                    <optgroup key={key} label={key}>\n                        {Array.from(value.gminy.entries(), ([gmina, kodGminy]) => (\n                                <option key={kodGminy} value={kodGminy}>\n                                    {gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>:<React.Fragment />;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\">\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./Panel\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\nexport interface Zatrudnienie {\n    rok: number;\n    przedszkola?: number,\n    podstawowe?: number,\n    zawodowe?: number,\n    gimnazja?: number,\n    licea?: number,\n}\n\ninterface NauczycieleProps {\n    dane: Zatrudnienie[];\n}\n\nexport class Nauczyciele extends React.Component<NauczycieleProps> {\n    render() {\n        const {dane} = this.props;\n        console.log(dane);\n        return <Box><Box>Etaty nauczycielskie wg rodzaju szkoły:</Box>\n            <LineChart syncId={\"nauczyciele\"} width={530} height={250} data={dane}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"rok\" />\n            <YAxis />\n            {/*<Tooltip />*/}\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"przedszkola\" stroke=\"#0884d8\">\n                {/*<LabelList dataKey=\"podstawowe\" position=\"bottom\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"podstawowe\" stroke=\"#8884d8\">\n                {/*<LabelList dataKey=\"podstawowe\" position=\"bottom\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"gimnazja\" stroke=\"#0884d8\">\n                {/*<LabelList dataKey=\"gimnazja\" position=\"top\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"zawodowe\" stroke=\"#080408\">\n                {/*<LabelList dataKey=\"zawodowe\" position=\"top\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"licea\" stroke=\"#82ca9d\">\n                {/*<LabelList dataKey=\"licea\" position=\"top\" />*/}\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface ZgonyWTygodniu {\n    podregion: string;\n    tydzien: string;\n    2014: number;\n    2015: number;\n    2016: number;\n    2017: number;\n    2018: number;\n    2019: number;\n    2020: number;\n}\n\nexport interface ZgonyProps {\n    podregion: string;\n    zgony: ZgonyWTygodniu[];\n}\n\nexport class Zgony extends React.Component<ZgonyProps> {\n    render() {\n        const {podregion, zgony} = this.props;\n        console.log(zgony);\n        return <Box><Box>Podregion {podregion}: wszystkie zgony wg. tygodnia:</Box>\n            <LineChart syncId={\"zgony\"} width={530} height={250} data={zgony}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"tydzien\" />\n            <YAxis />\n            <Legend />\n            <Line type=\"linear\" dot={false} dataKey=\"2014\" stroke=\"#92daad\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2015\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2016\" stroke=\"#72ba8d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2017\" stroke=\"#62aa7d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2018\" stroke=\"#529a6d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2019\" stroke=\"#428a5d\">\n            </Line>\n            <Line type=\"linear\" dot={false} dataKey=\"2020\" stroke=\"#ff2222\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\nexport interface Uczniowie {\n    rok: number;\n    zlobki?: number,\n    przedszkola?: number,\n    podstawowe?: number,\n    zawodowe?: number,\n    gimnazja?: number,\n    licea?: number,\n}\n\ninterface UczniowieProps {\n    dane: Uczniowie[];\n}\n\nexport class UczniowieComp extends React.Component<UczniowieProps> {\n    render() {\n        const {dane} = this.props;\n        console.log(dane);\n        return <Box><Box>Dzieci, młodzież i dorośli wg rodzaju placówki:</Box>\n            <LineChart syncId={\"uczniowie\"} width={530} height={250} data={dane}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"rok\" />\n            <YAxis />\n            {/*<Tooltip />*/}\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"zlobki\" stroke=\"#880408\">\n                {/*<LabelList dataKey=\"zlobki\" position=\"bottom\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"przedszkola\" stroke=\"#0884d8\">\n                {/*<LabelList dataKey=\"przedszkola\" position=\"bottom\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"podstawowe\" stroke=\"#8884d8\">\n                {/*<LabelList dataKey=\"podstawowe\" position=\"bottom\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"gimnazja\" stroke=\"#0884d8\">\n                {/*<LabelList dataKey=\"gimnazja\" position=\"top\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"zawodowe\" stroke=\"#080408\">\n                {/*<LabelList dataKey=\"zawodowe\" position=\"top\" />*/}\n            </Line>\n            <Line type=\"monotone\" dataKey=\"licea\" stroke=\"#82ca9d\">\n                {/*<LabelList dataKey=\"licea\" position=\"top\" />*/}\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\nexport interface GUS {\n    rok: number;\n}\n\nexport interface GUSProps {\n    opis: string;\n    dane: GUS[];\n}\n\nexport class GUSComp extends React.Component<GUSProps> {\n    render() {\n        const {dane, opis} = this.props;\n        let [tekst, serie_string] = opis.split('|');\n        let serie = serie_string?serie_string.split(\",\"):[];\n        const COLORS = ['#0088FE', '#00C49F', '#778888', '#FF8042', \"#FFFF33\"];\n        return <Box><Box>{tekst}</Box>\n            <LineChart syncId={opis} width={530} height={250} data={dane}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"rok\" />\n            <YAxis />\n            <Legend />\n                {serie.map((value, index) => {\n                    return <Line type=\"monotone\" name={value} dataKey={\"dane\" + index} stroke={COLORS[index]} />;\n                })\n                }\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {PieChart, Pie, Cell, Legend} from \"recharts\";\nimport {Nauczyciele, Zatrudnienie} from \"./Nauczyciele\";\nimport {Zgony, ZgonyProps} from \"./Zgony\";\nimport {Uczniowie, UczniowieComp} from \"./Uczniowie\";\nimport {GUSComp, GUSProps} from \"./GUSComp\";\n\nexport interface DotacjeUE {\n    gmina: string;\n    gmina_pc: string;\n    powiat: string;\n    powiat_pc: string;\n    wojewodztwo: string;\n    wojewodztwo_pc: string;\n}\n\ninterface Rozdzial {\n    name: string;\n    value: number;\n}\n\ninterface Dzial {\n    name: string;\n    value: number;\n    children: Rozdzial[];\n}\n\nexport interface Dane {\n    gmina?: string;\n    kod_gus?: string;\n    podregion_eurostat?: string;\n    dochod_ue?: string;\n    dotacje_ue?: DotacjeUE;\n    budzet?: Budzet;\n    gospodarka_odpadami_komunalnymi?: Budzet;\n    ludnosc?: number;\n    wydatki_biezace_ue?: string;\n    wydatki_inwestycyjne_ue?: string;\n    // projekty_ue:\n    // janosik:\n    grupyRozdzialy: any;\n    grupyDzialy: any;\n    children?: Dzial[];\n}\n\nexport interface PanelProps {\n    cytat?: string;\n    autor?: string;\n    selected?: string[];\n    wojewodztwo?: string;\n    liczbaDzialow?: string;\n    dzial?: string;\n    liczbaRozdzialow?: string;\n    grupaDzial?: string;\n    grupaRozdzial?: string;\n    dane?: Dane;\n    zgony: ZgonyProps;\n    nauczyciele: Zatrudnienie[];\n    uczniowie: Uczniowie[];\n    gus_comps: GUSProps[];\n}\n\nexport class Panel extends React.Component<PanelProps> {\n    renderBudzet(budzet?: Budzet) {\n        // @ts-ignore\n        if (this.props.selected?.indexOf('budzet') > -1 && budzet) {\n            return <React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>\n        } else {\n            return '';\n        }\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi?: Budzet) {\n        // @ts-ignore\n        if (this.props.selected?.indexOf('smieci') > -1 && gospodarka_odpadami_komunalnymi) {\n            return <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\" />\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>\n        } else {\n            return '';\n        }\n    }\n\n    render() {\n        const {cytat, autor, selected, dane, dzial, liczbaDzialow, liczbaRozdzialow, grupaDzial, grupaRozdzial, zgony,\n            nauczyciele, uczniowie, gus_comps} = this.props;\n        console.log(this.props);\n        const {gmina, ludnosc, gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = dane || {};\n        const wybranyDzial = children ? children[parseInt(dzial || '0')] : null;\n        const dzialChildren = wybranyDzial ? wybranyDzial.children : [];\n        let dzialy : number = Number.parseInt(liczbaDzialow || \"10\") || 10;\n        let rozdzialy : number = Number.parseInt(liczbaRozdzialow || \"10\") || 10;\n        const COLORS = ['#0088FE', '#00C49F', '#778888', '#FF8042', \"#FFFF33\"];\n\n        // @ts-ignore\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Box className=\"intro\">{gmina} ({ludnosc} mieszkańców)</Box><br/>\n                        {cytat !== '' ? <Box className=\"intro\"><i>{cytat}</i></Box> : ''}\n                        {autor !== '' ?\n                            <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                        <br/>\n                        {this.renderBudzet(budzet)}\n                        {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                        {// @ts-ignore\n                         (selected?.indexOf('dotacje_ue') > -1) && dotacje_ue?\n                             <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                             <React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('dzialy') > -1) && children?\n                            <PieChart width={600} height={Math.max((Math.min(dzialy, children.length)) * 25, 200)}>\n                                <Pie data={children.slice(0, dzialy)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={20} outerRadius={86} label={false}  startAngle={450} endAngle={90}>\n                                    {\n                                        children.map((entry, index) => (\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                                        ))\n                                    }\n                                </Pie>\n                                {/*<Tooltip />*/}\n                                <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\n                            </PieChart>:\n                            <React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('rozdzialy') > -1) && dzialChildren?\n                                <React.Fragment>\n                                    <Box className=\"intro\">Wydatki w ramach działu: {wybranyDzial?.name || ''}</Box>\n                                    <PieChart width={600} height={Math.max((Math.min(rozdzialy, dzialChildren.length)) * 25, 175)}>\n                                        <Pie data={dzialChildren.slice(0, rozdzialy)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={20} outerRadius={86} label={false}  startAngle={450} endAngle={90}>\n                                            {\n                                                dzialChildren.map((entry, index) => (\n                                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                                                ))\n                                            }\n                                        </Pie>\n                                        {/*<Tooltip />*/}\n                                        <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\n                                    </PieChart>\n                                </React.Fragment>:\n                                <React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('grupy-dzialy') > -1) && dane && grupaDzial && dane.grupyDzialy && dane.grupyDzialy[grupaDzial]?\n                                <React.Fragment>\n                                    <Box className=\"intro\">Wydatki na {grupaDzial} wg działu</Box>\n                                    <PieChart width={600} height={Math.max((Math.min(rozdzialy, dane.grupyDzialy[grupaDzial].length)) * 25, 175)}>\n                                        <Pie data={dane.grupyDzialy[grupaDzial].slice(0, rozdzialy)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={20} outerRadius={86} label={false}  startAngle={450} endAngle={90}>\n                                            {\n                                                // @ts-ignore\n                                                dane.grupyDzialy[grupaDzial].map((entry, index) => (\n                                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                                                ))\n                                            }\n                                        </Pie>\n                                        {/*<Tooltip />*/}\n                                        <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\n                                    </PieChart>\n                                </React.Fragment>:\n                                <React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('grupy-rozdzialy') > -1) && dane && grupaRozdzial && dane.grupyRozdzialy && dane.grupyRozdzialy[grupaRozdzial]?\n                                <React.Fragment>\n                                    <Box className=\"intro\">Wydatki na {grupaRozdzial} wg rozdziału</Box>\n                                    <PieChart width={600} height={Math.max((Math.min(rozdzialy, dane.grupyRozdzialy[grupaRozdzial].length)) * 25, 175)}>\n                                        <Pie data={dane.grupyRozdzialy[grupaRozdzial].slice(0, rozdzialy)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={20} outerRadius={86} label={false}  startAngle={450} endAngle={90}>\n                                            {\n                                                // @ts-ignore\n                                                dane.grupyRozdzialy[grupaRozdzial].map((entry, index) => (\n                                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                                                ))\n                                            }\n                                        </Pie>\n                                        {/*<Tooltip />*/}\n                                        <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\n                                    </PieChart>\n                                </React.Fragment>:\n                                <React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('nauczyciele') > -1) && nauczyciele?\n                                <Nauczyciele dane={nauczyciele}/>:<React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('uczniowie') > -1) && uczniowie?\n                                <UczniowieComp dane={uczniowie}/>:<React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('zgony') > -1) && zgony?\n                            <Zgony zgony={zgony.zgony} podregion={zgony.podregion}/>:<React.Fragment />}\n                        {// @ts-ignore\n                            (selected?.indexOf('gus') > -1)?\n                            gus_comps.map((entry, index) =>\n                                (<GUSComp dane={entry.dane} opis={entry.opis} />)):<React.Fragment />}\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n                </div>\n            </StylesProvider>\n        );\n    }\n}","import React from \"react\";\n\ninterface SelektorWojewodztwaProps {\n    wojewodztwoChangeFn: (wojewodztwo: string) => void;\n    wojewodztwa: string[];\n}\n\nexport class SelektorWojewodztwa extends React.Component<SelektorWojewodztwaProps> {\n    render() {\n        const {wojewodztwoChangeFn, wojewodztwa} = this.props;\n        return <select\n            id=\"demo\"\n            style={{marginBottom: 10}}\n            onChange={ev => wojewodztwoChangeFn(ev.target.value)}>\n            {wojewodztwa.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React from \"react\";\n// @ts-ignore\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\ninterface WyborModulowProps {\n    zmianaModuluFn: (moduly: string[]) => void;\n    moduly: string[];\n}\n\nexport class WyborModulow extends React.Component<WyborModulowProps> {\n    render() {\n        const {moduly, zmianaModuluFn} = this.props;\n        return <DropdownMultiselect options={moduly} selected={moduly} handleOnChange={(selected: string[]) => zmianaModuluFn(selected)}>\n        </DropdownMultiselect>\n    }\n}","import React from \"react\";\n\ninterface SelektorGrupyProps {\n    grupaChangeFn: (grupa: string) => void;\n    grupy: string[];\n}\n\nexport class SelektorGrupy extends React.Component<SelektorGrupyProps> {\n    render() {\n        const {grupaChangeFn, grupy} = this.props;\n        return <select\n            id=\"SelektorGrupy\"\n            style={{marginBottom: 10}}\n            onChange={ev => grupaChangeFn(ev.target.value)}>\n            {grupy.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React, {FormEvent} from 'react';\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport {PowiatEls, SelektorGminy} from \"./SelektorGminy\";\nimport {Dane, Panel} from \"./Panel\";\nimport axios from \"axios\";\nimport {SelektorWojewodztwa} from \"./SelektorWojewodztwa\";\nimport {WyborModulow} from \"./WyborModulow\";\nimport { ZgonyProps } from './Zgony';\nimport {Zatrudnienie} from \"./Nauczyciele\";\nimport {Uczniowie} from \"./Uczniowie\";\nimport {GUS, GUSProps} from \"./GUSComp\";\nimport {SelektorGrupy} from \"./SelektorGrupy\";\n\ninterface AppProps {\n}\n\ninterface AppState {\n    cytat: string;\n    autor: string;\n    select: string[];\n    liczbaDzialow: string;\n    dzial: string;\n    liczbaRozdzialow: string;\n    grupaDzial: string;\n    grupaRozdzial: string;\n    gus_opis: string;\n    gus_id: string;\n    gus_comps: GUSProps[];\n    dane?: Dane;\n    powiaty?: Map<string, PowiatEls>;\n    zgony: ZgonyProps;\n    nauczyciele: Zatrudnienie[];\n    uczniowie: Uczniowie[];\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    wojewodztwa = [\n        \"DOLNOŚLĄSKIE\",\n        \"KUJAWSKO-POMORSKIE\",\n        \"LUBELSKIE\",\n        \"LUBUSKIE\",\n        \"ŁÓDZKIE\",\n        \"MAŁOPOLSKIE\",\n        \"MAZOWIECKIE\",\n        \"OPOLSKIE\",\n        \"PODKARPACKIE\",\n        \"PODLASKIE\",\n        \"POMORSKIE\",\n        \"ŚLĄSKIE\",\n        \"ŚWIĘTOKRZYSKIE\",\n        \"WARMIŃSKO-MAZURSKIE\",\n        \"WIELKOPOLSKIE\",\n        \"ZACHODNIOPOMORSKIE\",\n    ]\n\n    MODULY = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"dzialy\",\n        \"rozdzialy\",\n        \"grupy-rozdzialy\",\n        \"grupy-dzialy\",\n        \"nauczyciele\",\n        \"uczniowie\",\n        \"zgony\",\n        \"gus\",\n    ]\n\n    GRUPY = [\n        \"Wynagrodzenia i składki\",\n        \"Wydatki na zadania statutowe\",\n        \"Dotacje na zadania bieżące\",\n        \"Świadczenia na rzecz osób fizycznych\",\n        \"Wynagrodzenia finansowane programami UE\",\n        \"Współfinansowanie wynagrodzeń programów UE\",\n        \"Wynagrodzenia dla innych programów zagranicznych\",\n        \"Wydatki finansowane programami UE\",\n        \"Współfinansowanie wydatków programów UE\",\n        \"Wydatki dla innych programów zagranicznych\",\n        \"Dotacje bieżące z programów UE\",\n        \"Współfinansowanie dotacji bieżących z programów UE\",\n        \"Dotacje bieżące z innych programów zagranicznych\",\n        \"Świadczenia dla osób fizycznych finansowane z UE\",\n        \"Współfinansowane świadczeń dla osób fizycznych z UE\",\n        \"Świadczenia dla osób fizycznych z innych programów zagranicznych\",\n        \"Wypłaty z poręczeń i gwarancji udzielonych przez gminę\",\n        \"Obsługa długu\",\n        \"Inwestycje ze środków gminy\",\n        \"Inwestycje ze środków UE\",\n        \"Współfinansowanie inwestycji ze środków UE\",\n        \"Dotacje do inwestycji ze środków gminy\",\n        \"Dotacje do inwestycji ze środków UE\",\n        \"Współfinansowanie dotacji do inwestycji ze środków UE\",\n        \"Zakup i objęcie akcji i udziałów\",\n        \"Wniesienie wkładów do spółek prawa handlowego\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeAutor = this.handleChangeAutor.bind(this);\n        this.handleChangeCytat = this.handleChangeCytat.bind(this);\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n\n        this.pobierzDaneGminy = this.pobierzDaneGminy.bind(this);\n        this.pobierzListePowiatow = this.pobierzListePowiatow.bind(this);\n        this.handleChangeGrupyDzialy = this.handleChangeGrupyDzialy.bind(this);\n        this.handleChangeGrupyRozdzialy = this.handleChangeGrupyRozdzialy.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            cytat: \"np: Kraków w 2019 realizował dobrą politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.\",\n            autor: \"np.: Maciej Pikor, Lider Polska 2050 w Małopolsce\",\n            select: this.MODULY,\n            liczbaDzialow: \"10\",\n            dzial: \"0\",\n            liczbaRozdzialow: \"10\",\n            grupaDzial: \"Wynagrodzenia i składki\",\n            grupaRozdzial: \"Wynagrodzenia i składki\",\n            gus_opis: \"Procent mieszkańców podłączonych do kanalizacji|miasto,ogółem,wieś\",\n            gus_id: \"60308,60309,60310\",\n            gus_comps: [],\n            zgony: {podregion: '', zgony: []},\n            nauczyciele: [],\n            uczniowie: [],\n        };\n    }\n\n    handleChangeAutor(autor: string) {\n        this.setState(Object.assign({}, this.state, {autor: autor}));\n    }\n\n    handleChangeCytat(cytat: string) {\n        this.setState(Object.assign({}, this.state, {cytat: cytat}));\n    }\n\n    handleChangeMultiple(values: string[]) {\n        this.setState(Object.assign({}, this.state, {select: values}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleChangeLiczbaRozdzialow(liczbaRozdzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaRozdzialow: liczbaRozdzialow}));\n    }\n\n    handleChangeDzial(dzial: string) {\n        this.setState(Object.assign({}, this.state, {dzial: dzial}));\n    }\n\n    handleChangeGrupyDzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaDzial: grupa}));\n    }\n\n    handleChangeGrupyRozdzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaRozdzial: grupa}));\n    }\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    //TODO: use redux\n    render() {\n        const {cytat, autor, select, dzial, liczbaDzialow, liczbaRozdzialow, grupaDzial, grupaRozdzial, gus_opis,\n            gus_id, dane, powiaty, zgony, nauczyciele, uczniowie, gus_comps} = this.state;\n        const wojewodztwa = this.wojewodztwa;\n        return (\n\n            // https://www.npmjs.com/package/react-component-export-image\n            <Box display=\"flex\" flexDirection=\"row\">\n                <Panel dane={dane} ref={this.componentRef} cytat={cytat} autor={autor} selected={select} dzial={dzial}\n                       liczbaDzialow={liczbaDzialow} liczbaRozdzialow={liczbaRozdzialow} grupaDzial={grupaDzial}\n                       grupaRozdzial={grupaRozdzial} zgony={zgony} nauczyciele={nauczyciele} uczniowie={uczniowie}\n                       gus_comps={gus_comps}/>\n                <form onSubmit={this.handleSubmit}>\n                    <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                        <strong>Wybór Jednostki Samorządu:</strong>\n                        <SelektorWojewodztwa wojewodztwa={wojewodztwa} wojewodztwoChangeFn={this.pobierzListePowiatow}/>\n                        <SelektorGminy powiaty={powiaty} gminaChangeFn={this.pobierzDaneGminy}/>\n                        <hr/>\n                    <strong>Komentarz eksperta:</strong>\n                        <textarea name=\"cytat\" onChange={ev=>this.handleChangeCytat(ev.target.value)} value={cytat}\n                                  style={{marginBottom: 10}}/>\n                        <input type=\"text\" name=\"autor\" onChange={ev=>this.handleChangeAutor(ev.target.value)}\n                               value={autor}/>\n                        <hr/>\n                        <strong>Elementy grafiki:</strong>\n                        <WyborModulow moduly={this.MODULY} zmianaModuluFn={this.handleChangeMultiple}/>\n                        <hr/>\n                        {// @ts-ignore\n                            (select?.indexOf('dzialy') > -1)?\n                                <React.Fragment>\n                                <strong>Max. liczba działów na wykresie:</strong>\n                                <input type=\"text\" name=\"liczbaDzialow\" value={liczbaDzialow} style={{marginBottom: 10}}\n                                       onChange={ev=>this.handleChangeLiczbaDzialow(ev.target.value)}/></React.Fragment>:<React.Fragment/>}\n\n                        {// @ts-ignore\n                            (select?.indexOf('rozdzialy') > -1)?<React.Fragment>\n                                <strong>Dział do szczegółowego wyświetlenia</strong>\n                                <input type=\"text\" name=\"dzial\" value={dzial} style={{marginBottom: 10}}\n                                       onChange={ev=>this.handleChangeDzial(ev.target.value)}/>\n                                <strong>Max. liczba rozdziałów na wykresie:</strong>\n                                <input type=\"text\" name=\"liczbaRozdzialow\" value={liczbaRozdzialow} style={{marginBottom: 10}}\n                                       onChange={ev=>this.handleChangeLiczbaRozdzialow(ev.target.value)}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {// @ts-ignore\n                            (select?.indexOf('grupy-dzialy') > -1)?<React.Fragment>\n                                <strong>Podział wydatków z grupy na działy:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyDzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {// @ts-ignore\n                            (select?.indexOf('grupy-rozdzialy') > -1)?<React.Fragment>\n                                <strong>Podział wydatków z grupy na rozdziały:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyRozdzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {// @ts-ignore\n                            (select?.indexOf('gus') > -1)?<React.Fragment><strong>Dodatkowy wykres z danych GUS: (<a target=\"_blank\" href=\"https://bdl.stat.gov.pl/BDL/metadane/cechy/2398#\">źródło</a>)</strong>\n                                <input type=\"text\" name=\"gus_opis\" value={gus_opis} style={{marginBottom: 10}}\n                                       onChange={ev=>this.pobierzGUSComps(dane?.kod_gus || '', gus_id, ev.target.value)}/>\n                                <input type=\"text\" name=\"gus_id\" value={gus_id} style={{marginBottom: 10}}\n                                       onChange={ev=>this.pobierzGUSComps(dane?.kod_gus || '', ev.target.value, gus_opis)}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n\n                        <button onClick={() => exportComponentAsPNG(this.componentRef)}>\n                            Export PNG\n                        </button>\n                    </Box>\n                </form>\n            </Box>\n        );\n    }\n\n    pobierzDaneGminy(kodGminy: string) {\n        const apiUrl = '/files/' + kodGminy + '-panel.json';\n        axios.get(apiUrl).then((response) => {\n            const ret: Dane = response.data;\n            console.log(ret);\n            this.setState(Object.assign({}, this.state, {dane: ret}));\n            if (ret.podregion_eurostat) {\n                this.pobierzZgony(ret.podregion_eurostat)\n            }\n            if (ret.kod_gus) {\n                this.pobierzNauczycieli(ret.kod_gus);\n                this.pobierzUczniowie(ret.kod_gus);\n                this.pobierzGUSComps(ret.kod_gus, this.state.gus_id, this.state.gus_opis)\n            }\n        });\n    }\n\n    pobierzListePowiatow(wojewodztwo: string) {\n        let wojName = wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\").replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\");\n        const apiUrl = '/files/' + wojName + '.json';\n        axios.get(apiUrl).then((response) => {\n            const ret = new Map<string, PowiatEls>();\n            for (const x in response.data) {\n                if (response.data.hasOwnProperty(x)) {\n                    const gminy = new Map<string, string>();\n                    for (const y in response.data[x]) {\n                        if (response.data[x].hasOwnProperty(y)) {\n                            gminy.set(y, response.data[x][y]);\n                        }\n                    }\n                    const p: PowiatEls = {gminy: gminy};\n                    ret.set(x, p);\n                }\n            }\n            this.setState(Object.assign({}, this.state, {powiaty: ret}));\n            const pierwszaGmina = ret.values().next().value.gminy.values().next().value;\n            this.pobierzDaneGminy(pierwszaGmina);\n        });\n    }\n\n    pobierzZgony(podregion: string) {\n        const apiUrl = '/files/' + podregion + '.json';\n        axios.get(apiUrl).then((response) => {\n            let x = response.data\n            this.setState(Object.assign({}, this.state, {zgony: x}));\n        });\n    }\n\n    pobierzNauczycieli(kodGus: string) {\n        let szkoly = {\n            288152: \"przedszkola\",\n            288154: \"przedszkola\",  // oddziały przy SP\n            288155: \"przedszkola\",  // zespoły\n            288156: \"przedszkola\",  // punkty\n            377896: \"podstawowe\",   // bez specjalnych\n            377897: \"podstawowe\",   // specjalne\n            377895: \"podstawowe\",   // dla dorosłych\n            378306: \"zawodowe\",\n            378248: \"gimnazja\",\n            378626: \"licea\",\n            378627: \"licea\",        // specjalne\n            378628: \"licea\",        // dla dorosłych\n            378629: \"licea\",        // uzupełniające\n            378630: \"licea\",        // uzupełniające specjalne\n            378631: \"licea\",        // uzupełniające dla dorosłych\n        }\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        for (let id in szkoly) {\n            apiUrl += \"&var-id=\" + id;\n        }\n        let ret: Zatrudnienie[] = [{rok: 2015}, {rok: 2016}, {rok: 2017}, {rok: 2018}, {rok: 2019}];\n        axios.get(apiUrl).then((response) => {\n            for (let r of response.data.results) {\n                for (let v of r.values) {\n                    for (let z of ret) {\n                        if (z.rok === Number.parseInt(v.year)) {\n                            // @ts-ignore\n                            if (z[szkoly[r.id]] !== undefined) {\n                                // @ts-ignore\n                                z[szkoly[r.id]] += v.val;\n                            } else {\n                                // @ts-ignore\n                                z[szkoly[r.id]] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            this.setState(Object.assign({}, this.state, {nauczyciele: ret}));\n        });\n    }\n\n    pobierzUczniowie(kodGus: string) {\n        let szkoly = {\n            377227: \"zlobki\",\n            151864: \"przedszkola\",\n            151867: \"podstawowe\",   // bez specjalnych\n            46733:  \"podstawowe\",   // oddziały specjalne przy SP\n            46726:  \"podstawowe\",   // SP dla niepełnosprawnych\n            455415: \"zawodowe\",\n            2394:   \"gimnazja\",\n            455392: \"licea\",        // razem\n        }\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        for (let id in szkoly) {\n            apiUrl += \"&var-id=\" + id;\n        }\n        let ret: Uczniowie[] = [{rok: 2015}, {rok: 2016}, {rok: 2017}, {rok: 2018}, {rok: 2019}];\n        axios.get(apiUrl).then((response) => {\n            for (let r of response.data.results) {\n                for (let v of r.values) {\n                    for (let z of ret) {\n                        if (z.rok === Number.parseInt(v.year)) {\n                            // @ts-ignore\n                            if (z[szkoly[r.id]] !== undefined) {\n                                // @ts-ignore\n                                z[szkoly[r.id]] += v.val;\n                            } else {\n                                // @ts-ignore\n                                z[szkoly[r.id]] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            this.setState(Object.assign({}, this.state, {uczniowie: ret}));\n        });\n    }\n\n    pobierzGUSComps(kodGus: string, ids_string: string, opis: string) {\n        this.setState(Object.assign({}, this.state, {gus_opis: opis, gus_id: ids_string}));\n        let ids = ids_string.split(\",\").map(x => parseInt(x));\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        ids.forEach(id => {\n            apiUrl += \"&var-id=\" + id;\n        });\n        let ret: GUSProps[] = [];\n        axios.get(apiUrl).then((response) => {\n            let dane: GUS[] = [{rok: 2015}, {rok: 2016}, {rok: 2017}, {rok: 2018}, {rok: 2019}];\n            for (let r of response.data.results) {\n                for (let i = 0; i < ids.length; i++) {\n                    // znajdzmy odpowiedni id do przypisania wartosci, aby byly w takiej kolejnosci jak na liscie\n                    if (ids[i] !== r.id) {\n                        continue;\n                    }\n                    for (let v of r.values) {\n                        for (let z of dane) {\n                            if (z.rok === Number.parseInt(v.year)) {\n                                // @ts-ignore\n                                z[\"dane\" + i] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            let props = {opis: opis, dane: dane}\n            ret.push(props);\n            this.setState(Object.assign({}, this.state, {gus_comps: ret}));\n        });\n    }\n\n    componentDidMount() {\n        this.pobierzListePowiatow(\"DOLNOŚLĄSKIE\");\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}