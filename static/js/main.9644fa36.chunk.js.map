{"version":3,"sources":["SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Zgony.tsx","GUSComp.tsx","WykresKolowy.tsx","Panel.tsx","SelektorWojewodztwa.tsx","WyborModulow.tsx","SelektorGrupy.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelektorGminy","this","props","gminaChangeFn","powiaty","id","onChange","ev","target","value","Array","from","entries","key","label","gminy","gmina","kodGminy","Fragment","React","Component","BudzetComp","dane","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat","powiat_pc","wojewodztwo","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Zgony","podregion","zgony","console","log","syncId","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","axisLine","strokeWidth","ticks","iconSize","wrapperStyle","type","dot","stroke","GUSComp","opis","split","tekst","serie_string","serie","COLORS","tickSize","tickMargin","yAxisId","orientation","map","index","indexOf","name","replace","length","WykresKolowy","RADIAN","Math","PI","state","activeIndex","verticalOffset","onPieClick","midAngle","sin","setState","legendRenderer","bind","entry","daneFinal","slice","push","reduce","a","b","reverse","dangerouslySetInnerHTML","__html","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","onClick","activeShape","percent","fill","cos","sx","sy","mx","my","ex","ey","textAnchor","procentCalosci","v","jednostka","round","d","r","x","y","dy","toFixed","layout","verticalAlign","align","formatter","Panel","budzet","isShown","AttachMoney","fontSize","gospodarka_odpadami_komunalnymi","DeleteSharp","selected","cytat","autor","dzial","grupaDzial","grupaRozdzial","gus_comps","wlasne_dane","typ_gminy","ludnosc","children","wybranyDzial","parseInt","caloscWydatkow","dzialCzescCalosci","grupyRozdzialyCzescCalosci","grupyRozdzialy","dzialChildren","StylesProvider","injectFirst","renderBudzet","renderSmieci","grupyDzialy","SelektorWojewodztwa","wojewodztwoChangeFn","wojewodztwa","style","marginBottom","WyborModulow","moduly","zmianaModuluFn","options","handleOnChange","SelektorGrupy","grupaChangeFn","grupy","http","axios","create","baseURL","adapter","defaults","cacheAdapterEnhancer","undefined","App","classes","componentRef","WOJEWODZTWA","MODULY","GRUPY","createRef","handleChangeAutor","handleChangeCytat","handleChangeMultiple","pobierzDaneGminy","pobierzListePowiatow","handleChangeGrupyDzialy","handleChangeGrupyRozdzialy","handleSubmit","select","gus_input","gus_opis","gus_id","Object","assign","values","liczbaDzialow","liczbaRozdzialow","grupa","daneJson","JSON","parse","event","preventDefault","ref","onSubmit","padding","handleChangeWlasny","stringify","handleChangeDzial","href","input","pobierzGUSComps","kod_gus","trim","debounceTimeout","exportComponentAsPNG","apiUrl","replaceAll","get","then","response","ret","Map","hasOwnProperty","set","p","pierwszaGmina","next","podregion_eurostat","pobierzZgony","forEach","kodGus","ids_string","ids","rok","results","i","z","Number","year","val","arr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9644fa36.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface SelektorGminyProps {\n    gminaChangeFn: (kodGminy: string) => void;\n    powiaty?: Map<string, PowiatEls>;\n}\n\nexport interface PowiatEls {\n    gminy: Map<string, string>;\n}\n\nexport class SelektorGminy extends React.Component<SelektorGminyProps> {\n    render() {\n        const {gminaChangeFn, powiaty} = this.props;\n        return powiaty?<select\n            id=\"demo\"\n            // value={selected}\n            onChange={ev => gminaChangeFn(ev.target.value)}>\n            {Array.from(powiaty.entries(), ([key, value]) => (\n                    <optgroup key={key} label={key}>\n                        {Array.from(value.gminy.entries(), ([gmina, kodGminy]) => (\n                                <option key={kodGminy} value={kodGminy}>\n                                    {gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>:<React.Fragment />;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\">\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./Panel\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface ZgonyWTygodniu {\n    podregion: string;\n    tydzien: string;\n    2014: number;\n    2015: number;\n    2016: number;\n    2017: number;\n    2018: number;\n    2019: number;\n    2020: number;\n}\n\nexport interface ZgonyProps {\n    podregion: string;\n    zgony: ZgonyWTygodniu[];\n}\n\nexport class Zgony extends React.Component<ZgonyProps> {\n    render() {\n        const {podregion, zgony} = this.props;\n        console.log(zgony);\n        return <Box><br/><Box>Podregion {podregion}: wszystkie zgony wg. tygodnia:</Box>\n            <LineChart syncId={\"zgony\"} width={1060} height={500} data={zgony}\n                   margin={{ top: 10, right: 30, left: 20, bottom: 10 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"tydzien\" axisLine={{strokeWidth: 2}} ticks={[1,5,10,15,20,25,30,36,42,47,52]}/>\n            <YAxis axisLine={{strokeWidth: 2}}/>\n            <Legend iconSize={20} wrapperStyle={{bottom: -10}}/>\n            <Line type=\"monotone\" dot={false} dataKey=\"2014\" stroke=\"#92daad\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2015\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2016\" stroke=\"#72ba8d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2017\" stroke=\"#62aa7d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2018\" stroke=\"#529a6d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2019\" stroke=\"#428a5d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2020\" stroke=\"#ff2222\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\nexport interface GUS {\n    rok: number;\n}\n\nexport interface GUSProps {\n    opis?: string;\n    dane?: GUS[];\n}\n\nexport class GUSComp extends React.Component<GUSProps> {\n    render() {\n        const {dane, opis} = this.props;\n        if (opis === '') {\n            return <React.Fragment/>;\n        }\n        let [tekst, serie_string] = opis?opis.split('|'):[];\n        let serie = serie_string?serie_string.split(\",\"):[];\n        const COLORS = [\n            [],\n            [\"#003f5c\"],\n            [\"#003f5c\", \"#ffa600\"],\n            [\"#003f5c\", \"#bc5090\", \"#ffa600\"],\n            [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"],\n            [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\"],\n            [\"#003f5c\", \"#444e86\", \"#955196\", \"#dd5182\", \"#ff6e54\", \"#ffa600\"],\n            [\"#003f5c\", \"#374c80\", \"#7a5195\", \"#bc5090\", \"#ef5675\", \"#ff764a\", \"#ffa600\"],\n            [\"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"],\n        ];\n        return <Box><br/><Box>{tekst}</Box>\n            <LineChart syncId={opis} width={1060} height={500} data={dane}\n                   margin={{ top: 10, right: 30, left: 30, bottom: 10 }}>\n            <CartesianGrid strokeDasharray=\"5 5\"/>\n            <XAxis dataKey=\"rok\" tickSize={12} tickMargin={10}/>\n            <YAxis yAxisId=\"left\" orientation=\"left\" axisLine={{strokeWidth: 2}} tickSize={8}/>\n            <YAxis yAxisId=\"right\" orientation=\"right\" axisLine={{strokeWidth: 2}} tickSize={18}/>\n                {serie.map((value, index) => {\n                    console.log(value.indexOf('R:'));\n                    return <Line key={index} type=\"monotone\" name={value.replace(':R', ' (prawa oś)')}\n                                 dataKey={\"dane\" + index} stroke={COLORS[serie.length][index]} strokeWidth={2}\n                                 yAxisId={value.indexOf(':R') > -1?'right':'left'}/>;\n                })\n                }\n            <Legend iconSize={20} wrapperStyle={{bottom: -10}}/>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Cell, Legend, Pie, PieChart, PieLabelRenderProps, Sector} from \"recharts\";\nimport {Box} from \"@material-ui/core\";\n\ninterface NameValue {\n    name: string;\n    value: number;\n}\n\nexport interface WykresKolowyProps {\n    dane: NameValue[];\n    opis?: string;\n    procentCalosci: number;\n    jednostka: string;\n}\n\nexport class WykresKolowy extends React.Component<WykresKolowyProps> {\n    constructor(props: WykresKolowyProps) {\n        super(props);\n\n        this.legendRenderer = this.legendRenderer.bind(this);\n    }\n\n    RADIAN = Math.PI / 180;\n    state = {\n        activeIndex: -1,\n        verticalOffset: 0,\n    };\n\n    onPieClick = (data: PieLabelRenderProps, index: number) => {\n        const {midAngle} = data;\n        const sin = Math.sin(-this.RADIAN * (midAngle || 0));\n        this.setState({\n            verticalOffset: (sin < 0 && this.state.activeIndex !== index ? 80 : 0),\n            activeIndex: (this.state.activeIndex === index? -1 : index),\n        });\n    };\n\n    // @ts-ignore\n    legendRenderer(value, entry, index) {\n        if (index === this.state.activeIndex) {\n            return <span><b>{value}</b></span>;\n        } else {\n            return <span>{value}</span>;\n        }\n    }\n\n    render() {\n        // @ts-ignore\n        const renderActiveShape = (props) => {\n            const {\n                cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n                percent, value,\n            } = props;\n            const fill = '#f9c00c';\n            const sin = Math.sin(-this.RADIAN * midAngle);\n            const cos = Math.cos(-this.RADIAN * midAngle);\n            const sx = cx + (outerRadius + 20) * cos;\n            const sy = cy + (outerRadius + 20) * sin;\n            const mx = cx + (outerRadius + 60) * cos;\n            const my = cy + (outerRadius + 60) * sin;\n            const ex = mx;\n            const ey = cy + ((outerRadius/0.86 + 36) * (sin >= 0 ? 1 : -1)) - 10;\n            const textAnchor = cos < 0 ? 'start' : 'end';\n            const procentCalosci = this.props.procentCalosci;\n            const v = this.props.jednostka.indexOf('tys.') > -1?Math.round(value/1000):\n                (this.props.jednostka.indexOf('mln.') > -1?Math.round(value/1000000):value);\n            return (\n                <g>\n                    <Sector\n                        cx={cx + 14 * cos}\n                        cy={cy + 14 * sin}\n                        innerRadius={innerRadius}\n                        outerRadius={outerRadius + 6}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        fill={fill}\n                        stroke=\"black\"\n                    />\n                    <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n                    <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n                    <text x={ex + (cos < 0 ? 1 : -1) * 24} y={ey} textAnchor={textAnchor} fill=\"#333\">{v + ' ' + this.props.jednostka}</text>\n                    <text x={ex + (cos < 0 ? 1 : -1) * 24} y={ey} dy={36} textAnchor={textAnchor} fill=\"#999\">\n                        {`(${(percent * 100).toFixed(2)}%${procentCalosci === 100 ?'':' / ' + (1.0 * procentCalosci * percent).toFixed(2) + '%'})`}\n                    </text>\n                </g>\n            );\n        };\n\n        const {dane, opis = 'bla'} = this.props;\n        let daneFinal: any[] = dane.slice(0, 8);\n        if (dane.length > 8) {\n            daneFinal.push({name: \"Pozostałe\", value: dane.slice(8).reduce((a, b) => a + b.value, 0)});\n        }\n        // https://learnui.design/tools/data-color-picker.html#palette\n        const COLORS = [\"grey\", \"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"].reverse();\n        // const HUE = [\n        //     [\"#003f5c\", \"#255571\", \"#406b88\", \"#59829e\", \"#739bb6\", \"#8db3ce\", \"#a7cde6\", \"#c2e7ff\"],\n        //     [\"#2f4b7c\", \"#475f8e\", \"#5f73a0\", \"#7688b2\", \"#8d9ec5\", \"#a5b4d8\", \"#bdcbeb\", \"#d6e2ff\"],\n        // ];\n        return <React.Fragment>\n            {opis?<React.Fragment><br/><Box className=\"intro\" dangerouslySetInnerHTML={{__html: opis}} /></React.Fragment>:<React.Fragment/>}\n            <PieChart width={1200} height={400 + (this.state.activeIndex >= 0 ? 80:0)}>\n            <Pie data={daneFinal} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy={200+this.state.verticalOffset}\n                 innerRadius={40} outerRadius={172} label={false} startAngle={450} endAngle={90} activeIndex={this.state.activeIndex}\n                 onClick={this.onPieClick}\n                 activeShape={renderActiveShape}>\n                {\n                    // @ts-ignore\n                    daneFinal.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={index === this.state.activeIndex?\"#f9c00c\":COLORS[index]}/>\n                    ))\n                }\n            </Pie>\n            <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" formatter={this.legendRenderer}/>\n            </PieChart>\n        </React.Fragment>;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {Zgony, ZgonyProps} from \"./Zgony\";\nimport {GUSComp, GUSProps} from \"./GUSComp\";\nimport {WykresKolowy, WykresKolowyProps} from \"./WykresKolowy\";\n\nexport interface DotacjeUE {\n    gmina: string;\n    gmina_pc: string;\n    powiat: string;\n    powiat_pc: string;\n    wojewodztwo: string;\n    wojewodztwo_pc: string;\n}\n\ninterface Rozdzial {\n    name: string;\n    value: number;\n}\n\ninterface Dzial {\n    name: string;\n    value: number;\n    children: Rozdzial[];\n}\n\nexport interface Dane {\n    gmina?: string;\n    typ_gminy: string;\n    kod_gus?: string;\n    podregion_eurostat?: string;\n    dochod_ue?: string;\n    dotacje_ue?: DotacjeUE;\n    budzet?: Budzet;\n    gospodarka_odpadami_komunalnymi?: Budzet;\n    ludnosc?: string;\n    wydatki_biezace_ue?: string;\n    wydatki_inwestycyjne_ue?: string;\n    // projekty_ue:\n    // janosik:\n    grupyRozdzialy: any;\n    grupyDzialy: any;\n    children?: Dzial[];\n}\n\nexport interface PanelProps {\n    cytat?: string;\n    autor?: string;\n    selected: string[];\n    wojewodztwo?: string;\n    dzial?: string;\n    grupaDzial?: string;\n    grupaRozdzial?: string;\n    dane?: Dane;\n    zgony: ZgonyProps;\n    gus_comps: GUSProps[];\n    wlasne_dane: WykresKolowyProps[];\n}\n\nexport class Panel extends React.Component<PanelProps> {\n    renderBudzet(budzet?: Budzet) {\n        return this.isShown('budzet') && budzet?<React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi?: Budzet) {\n        return this.isShown('smieci') && gospodarka_odpadami_komunalnymi?\n            <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\" />\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    isShown(name: string) {\n        return (this.props.selected?.indexOf(name) > -1)\n    }\n\n    render() {\n        const {cytat, autor, dane, dzial, grupaDzial, grupaRozdzial, zgony, gus_comps, wlasne_dane} = this.props;\n        console.log(this.props);\n        const {gmina, typ_gminy, ludnosc, gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = dane || {};\n        const wybranyDzial = children ? children[parseInt(dzial || '0')] : null;\n        const caloscWydatkow = children?.reduce((a, b) => a + b.value, 0) || 1;\n        const dzialCzescCalosci = ((wybranyDzial?.value || 0) * 100) / caloscWydatkow;\n        const grupyRozdzialyCzescCalosci = dane && dane.grupyRozdzialy && grupaRozdzial && dane.grupyRozdzialy[grupaRozdzial]?\n            // @ts-ignore\n            ((dane.grupyRozdzialy[grupaRozdzial].reduce((a, b) => a + b.value, 0)) * 100 / caloscWydatkow):0;\n        const dzialChildren = wybranyDzial ? wybranyDzial.children : [];\n\n        // @ts-ignore\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Box className=\"wstep\">\n                            <Box className=\"prawa\">\n                                <Box>&nbsp;</Box>\n                                <Box className=\"nazwa_gminy\"><strong>{gmina}</strong></Box>\n                                <Box>{typ_gminy?.replace(gmina || 'ble', '')}</Box>\n                                <Box><strong>{ludnosc}</strong> mieszkańców</Box>\n                                <Box>&nbsp;</Box>\n                                <Box>&nbsp;</Box>\n                            </Box>\n                        </Box>\n                        <Box className=\"tlo\">\n                            {cytat !== '' ? <Box><i>{cytat}</i></Box> : ''}\n                            {autor !== '' ?\n                                <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                            <Box>&nbsp;</Box>\n                            {this.renderBudzet(budzet)}\n                            {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                            {this.isShown('dotacje_ue') && dotacje_ue?\n                                 <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                                 <React.Fragment />}\n                            {this.isShown('wlasny') && wlasne_dane?\n                                wlasne_dane.map((entry, index) =>\n                                    (<WykresKolowy dane={wlasne_dane[index].dane} opis={wlasne_dane[index].opis}\n                                                   procentCalosci={100} jednostka={wlasne_dane[index].jednostka}/>)):<React.Fragment />}\n                            {this.isShown('dzialy') && children?\n                                    <WykresKolowy dane={children} opis=\"Wydatki wg. działów budżetu:\" procentCalosci={100} jednostka=\"tys. zł\"/>:<React.Fragment />}\n                            {this.isShown('rozdzialy') && dzialChildren?\n                                // @ts-ignore\n                                    <WykresKolowy dane={dzialChildren} opis={\"Rozdział wydatków z <b>\" + dane?.children[dzial].name + \"</b>:\"} procentCalosci={dzialCzescCalosci} jednostka=\"tys. zł\"/>:<React.Fragment />}\n                            {this.isShown('grupy-dzialy') && dane && grupaDzial && dane.grupyDzialy && dane.grupyDzialy[grupaDzial]?\n                                    <WykresKolowy dane={dane.grupyDzialy[grupaDzial]} opis={\"Wydatki z grupy <b>\" + grupaDzial + \"</b> wg działu:\"} procentCalosci={100} jednostka=\"tys. zł\"/>:<React.Fragment />}\n                            {this.isShown('grupy-rozdzialy') && dane && grupaRozdzial && dane.grupyRozdzialy && dane.grupyRozdzialy[grupaRozdzial]?\n                                    <WykresKolowy dane={dane.grupyRozdzialy[grupaRozdzial]} opis={\"Wydatki z grupy <b>\" + grupaRozdzial + \"</b> wg rozdziału:\"} procentCalosci={grupyRozdzialyCzescCalosci} jednostka=\"tys. zł\"/>:<React.Fragment />}\n                            {this.isShown('gus')?\n                                gus_comps.map((entry, index) =>\n                                    (<GUSComp key={index} dane={entry.dane} opis={entry.opis} />)):<React.Fragment />}\n                            {this.isShown('zgony') && zgony?\n                                <Zgony zgony={zgony.zgony} podregion={zgony.podregion}/>:<React.Fragment />}\n                        </Box>\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n                </div>\n            </StylesProvider>\n        );\n    }\n}","import React from \"react\";\n\ninterface SelektorWojewodztwaProps {\n    wojewodztwoChangeFn: (wojewodztwo: string) => void;\n    wojewodztwa: string[];\n}\n\nexport class SelektorWojewodztwa extends React.Component<SelektorWojewodztwaProps> {\n    render() {\n        const {wojewodztwoChangeFn, wojewodztwa} = this.props;\n        return <select\n            id=\"demo\"\n            style={{marginBottom: 10}}\n            onChange={ev => wojewodztwoChangeFn(ev.target.value)}>\n            {wojewodztwa.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React from \"react\";\n// @ts-ignore\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\ninterface WyborModulowProps {\n    zmianaModuluFn: (moduly: string[]) => void;\n    moduly: string[];\n}\n\nexport class WyborModulow extends React.Component<WyborModulowProps> {\n    render() {\n        const {moduly, zmianaModuluFn} = this.props;\n        return <div style={{width: \"520px\"}}>\n            <DropdownMultiselect options={moduly} selected={moduly.slice(3)} handleOnChange={(selected: string[]) => zmianaModuluFn(selected)}>\n        </DropdownMultiselect></div>\n    }\n}","import React from \"react\";\n\ninterface SelektorGrupyProps {\n    grupaChangeFn: (grupa: string) => void;\n    grupy: string[];\n}\n\nexport class SelektorGrupy extends React.Component<SelektorGrupyProps> {\n    render() {\n        const {grupaChangeFn, grupy} = this.props;\n        return <select\n            id=\"SelektorGrupy\"\n            style={{marginBottom: 10}}\n            onChange={ev => grupaChangeFn(ev.target.value)}>\n            {grupy.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React, {FormEvent} from 'react';\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport {PowiatEls, SelektorGminy} from \"./SelektorGminy\";\nimport {Dane, Panel} from \"./Panel\";\nimport axios from \"axios\";\nimport { cacheAdapterEnhancer } from 'axios-extensions';\nimport {SelektorWojewodztwa} from \"./SelektorWojewodztwa\";\nimport {WyborModulow} from \"./WyborModulow\";\nimport { ZgonyProps } from './Zgony';\nimport {GUS, GUSProps} from \"./GUSComp\";\nimport {SelektorGrupy} from \"./SelektorGrupy\";\nimport {DebounceInput} from \"react-debounce-input\";\nimport {WykresKolowyProps} from \"./WykresKolowy\";\n\nconst http = axios.create({\n    baseURL: '/',\n    // headers: { 'Cache-Control': 'no-cache' },\n    // cache will be enabled by default\n    adapter: axios.defaults.adapter?cacheAdapterEnhancer(axios.defaults.adapter):undefined\n});\n\ninterface AppProps {\n}\n\ninterface GUSInput {\n    gus_opis: string;\n    gus_id: string;\n}\n\ninterface AppState {\n    cytat: string;\n    autor: string;\n    select: string[];\n    dzial: string;\n    grupaDzial: string;\n    grupaRozdzial: string;\n    gus_input: GUSInput[];\n    gus_comps: GUSProps[];\n    wlasne_dane: WykresKolowyProps[];\n    dane?: Dane;\n    powiaty?: Map<string, PowiatEls>;\n    zgony: ZgonyProps;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    WOJEWODZTWA = [\n        \"DOLNOŚLĄSKIE\",\n        \"KUJAWSKO-POMORSKIE\",\n        \"LUBELSKIE\",\n        \"LUBUSKIE\",\n        \"ŁÓDZKIE\",\n        \"MAŁOPOLSKIE\",\n        \"MAZOWIECKIE\",\n        \"OPOLSKIE\",\n        \"PODKARPACKIE\",\n        \"PODLASKIE\",\n        \"POMORSKIE\",\n        \"ŚLĄSKIE\",\n        \"ŚWIĘTOKRZYSKIE\",\n        \"WARMIŃSKO-MAZURSKIE\",\n        \"WIELKOPOLSKIE\",\n        \"ZACHODNIOPOMORSKIE\",\n    ]\n\n    MODULY = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"wlasny\",\n        \"dzialy\",\n        \"rozdzialy\",\n        \"grupy-dzialy\",\n        \"grupy-rozdzialy\",\n        \"zgony\",\n        \"gus\",\n    ]\n\n    GRUPY = [\n        \"Wynagrodzenia i składki\",\n        \"Wydatki na zadania statutowe\",\n        \"Dotacje na zadania bieżące\",\n        \"Świadczenia na rzecz osób fizycznych\",\n        \"Wynagrodzenia finansowane programami UE\",\n        \"Współfinansowanie wynagrodzeń programów UE\",\n        \"Wynagrodzenia dla innych programów zagranicznych\",\n        \"Wydatki finansowane programami UE\",\n        \"Współfinansowanie wydatków programów UE\",\n        \"Wydatki dla innych programów zagranicznych\",\n        \"Dotacje bieżące z programów UE\",\n        \"Współfinansowanie dotacji bieżących z programów UE\",\n        \"Dotacje bieżące z innych programów zagranicznych\",\n        \"Świadczenia dla osób fizycznych finansowane z UE\",\n        \"Współfinansowane świadczeń dla osób fizycznych z UE\",\n        \"Świadczenia dla osób fizycznych z innych programów zagranicznych\",\n        \"Wypłaty z poręczeń i gwarancji udzielonych przez gminę\",\n        \"Obsługa długu\",\n        \"Inwestycje ze środków gminy\",\n        \"Inwestycje ze środków UE\",\n        \"Współfinansowanie inwestycji ze środków UE\",\n        \"Dotacje do inwestycji ze środków gminy\",\n        \"Dotacje do inwestycji ze środków UE\",\n        \"Współfinansowanie dotacji do inwestycji ze środków UE\",\n        \"Zakup i objęcie akcji i udziałów\",\n        \"Wniesienie wkładów do spółek prawa handlowego\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeAutor = this.handleChangeAutor.bind(this);\n        this.handleChangeCytat = this.handleChangeCytat.bind(this);\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n\n        this.pobierzDaneGminy = this.pobierzDaneGminy.bind(this);\n        this.pobierzListePowiatow = this.pobierzListePowiatow.bind(this);\n        this.handleChangeGrupyDzialy = this.handleChangeGrupyDzialy.bind(this);\n        this.handleChangeGrupyRozdzialy = this.handleChangeGrupyRozdzialy.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            cytat: \"np: Kraków w 2019 realizował dobrą politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.\",\n            autor: \"np.: Maciej Pikor, Lider Polska 2050 w Małopolsce\",\n            select: this.MODULY.slice(3),\n            dzial: \"0\",\n            grupaDzial: \"Wynagrodzenia i składki\",\n            grupaRozdzial: \"Wynagrodzenia i składki\",\n            gus_input: [{\n                gus_opis: \"Procent mieszkańców podłączonych do kanalizacji|miasto,ogółem,wieś\",\n                gus_id: \"60308,60309,60310\"},{\n                gus_opis: \"Emisja zanieczyszczeń|gazowych bez CO2,pyłowych:R\",\n                gus_id: \"1509,1508\"},{\n                gus_opis: \"Tereny zieleni|parki,zieleńce,zieleń uliczna,zieleń lokalna,zieleń osiedlowa\",\n                gus_id: \"73847,73848,73849,73850,73852\"},{\n                gus_opis: \"Dzieci, młodzież i dorośli wg rodzaju placówki:|żłobki,przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n                gus_id: \"377227,151864,151867,455415,2394,455392\"},{\n                gus_opis: \"Uczniowie przypadający na 1 oddział w szkołach:|podstawowych,liceach,zawodowych\",\n                gus_id: \"454078,454099,454088\"},{\n                gus_opis: \"Etaty nauczycielskie wg rodzaju szkoły:|przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n                gus_id: \"288152,377896,378306,378248,378626\"}],\n            gus_comps: [{},{},{},{},{},{}],\n            wlasne_dane: [\n                {\n                    dane: [{\"name\": \"Pierwsza wartość\", \"value\": 321000},\n                        {\"name\": \"Druga wartość\", \"value\": 227000},\n                        {\"name\": \"Trzecia wartość\", \"value\": 146000},\n                        {\"name\": \"Czwarta wartość\", \"value\": 110000},\n                        {\"name\": \"Piąta wartość\", \"value\": 109000},\n                        {\"name\": \"Szósta wartość\", \"value\": 87000},\n                        {\"name\": \"Siódma wartość\", \"value\": 77000},\n                        {\"name\": \"Ósma wartość\", \"value\": 66000},\n                        {\"name\": \"Pozostałe\", \"value\": 88000}],\n                    opis: 'Wykres dla dowolnych danych - zmień wartości w panelu po prawej i zobacz efekt',\n                    procentCalosci: 100,\n                    jednostka: 'tys. zł',\n                }\n            ],\n            zgony: {podregion: '', zgony: []},\n        };\n    }\n\n    handleChangeAutor(autor: string) {\n        this.setState(Object.assign({}, this.state, {autor: autor}));\n    }\n\n    handleChangeCytat(cytat: string) {\n        this.setState(Object.assign({}, this.state, {cytat: cytat}));\n    }\n\n    handleChangeMultiple(values: string[]) {\n        this.setState(Object.assign({}, this.state, {select: values}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleChangeLiczbaRozdzialow(liczbaRozdzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaRozdzialow: liczbaRozdzialow}));\n    }\n\n    handleChangeDzial(dzial: string) {\n        this.setState(Object.assign({}, this.state, {dzial: dzial}));\n    }\n\n    handleChangeGrupyDzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaDzial: grupa}));\n    }\n\n    handleChangeGrupyRozdzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaRozdzial: grupa}));\n    }\n\n    handleChangeWlasny(opis: string, dane: string, jednostka: string) {\n        let daneJson = JSON.parse(dane);\n        this.setState(Object.assign({}, this.state,\n            {wlasne_dane: [{opis: opis, dane: daneJson, procentCalosci: 100, jednostka: jednostka}]}));\n    }\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    isShown(name: string) {\n        return (this.state.select.indexOf(name) > -1)\n    }\n\n    //TODO: use redux\n    render() {\n        const {cytat, autor, select, dzial, grupaDzial, grupaRozdzial, gus_input, dane, powiaty, zgony, gus_comps, wlasne_dane} = this.state;\n        return (\n            <Box display=\"flex\" flexDirection=\"row\">\n                <Panel dane={dane} ref={this.componentRef} cytat={cytat} autor={autor} selected={select} dzial={dzial}\n                       grupaDzial={grupaDzial} grupaRozdzial={grupaRozdzial} zgony={zgony} gus_comps={gus_comps} wlasne_dane={wlasne_dane}/>\n                <form onSubmit={this.handleSubmit}>\n                    <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                        <strong>Wybór Jednostki Samorządu:</strong>\n                        <SelektorWojewodztwa wojewodztwa={this.WOJEWODZTWA} wojewodztwoChangeFn={this.pobierzListePowiatow}/>\n                        <SelektorGminy powiaty={powiaty} gminaChangeFn={this.pobierzDaneGminy}/>\n                        <hr/>\n                        <strong>Komentarz eksperta:</strong>\n                        <textarea name=\"cytat\" onChange={ev=>this.handleChangeCytat(ev.target.value)} value={cytat}\n                                  style={{marginBottom: 10}}/>\n                        <input type=\"text\" name=\"autor\" onChange={ev=>this.handleChangeAutor(ev.target.value)}\n                               value={autor}/>\n                        <hr/>\n                        <strong>Elementy grafiki:</strong>\n                        <WyborModulow moduly={this.MODULY} zmianaModuluFn={this.handleChangeMultiple}/>\n                        <hr/>\n                        {this.isShown('wlasny')?<React.Fragment>\n                            <input type=\"text\" name=\"wlasny.opis\" onChange={ev=>this.handleChangeWlasny(ev.target.value, JSON.stringify(wlasne_dane[0].dane), wlasne_dane[0].jednostka)}\n                                   value={wlasne_dane[0].opis} />\n                            <textarea className=\"json\" name=\"wlasny.dane\" onChange={ev=>this.handleChangeWlasny(wlasne_dane[0].opis || '', ev.target.value, wlasne_dane[0].jednostka)} value={JSON.stringify(wlasne_dane[0].dane, null, 4)}\n                                      style={{marginBottom: 10}}/>\n                            <input type=\"text\" name=\"wlasny.jednostka\" onChange={ev=>this.handleChangeWlasny(wlasne_dane[0].opis || '', JSON.stringify(wlasne_dane[0].dane), ev.target.value)}\n                                   value={wlasne_dane[0].jednostka} />\n\n                            <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('rozdzialy')?<React.Fragment>\n                                <strong>Dział do szczegółowego wyświetlenia</strong>\n                                <input type=\"text\" name=\"dzial\" value={dzial} style={{marginBottom: 10}}\n                                       onChange={ev=>this.handleChangeDzial(ev.target.value)}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-dzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na działy:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyDzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-rozdzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na rozdziały:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyRozdzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        <Box><strong>Wykresy z danych GUS:</strong>(<a target=\"_blank\" href=\"https://bdl.stat.gov.pl/BDL/metadane/cechy/2398#\">źródło</a>)</Box>\n                        {this.isShown('gus')?gus_input.map((input, index) => {\n                                return <React.Fragment key={index}>\n                                    <DebounceInput type=\"text\" name=\"gus_opis\" value={input.gus_opis} style={{marginBottom: 10}}\n                                           onChange={ev=>this.pobierzGUSComps(index, dane?.kod_gus || '', input.gus_id, ev.target.value.trim())}\n                                                   debounceTimeout={2000}/>\n                                    <DebounceInput type=\"text\" name=\"gus_id\" value={input.gus_id} style={{marginBottom: 10}}\n                                           onChange={ev=>this.pobierzGUSComps(index, dane?.kod_gus || '', ev.target.value.trim(), input.gus_opis)}\n                                                   debounceTimeout={2000}/>\n                                <hr/></React.Fragment>}):<React.Fragment/>}\n                        <button onClick={() => exportComponentAsPNG(this.componentRef)}>\n                            Export PNG\n                        </button>\n                    </Box>\n                </form>\n            </Box>\n        );\n    }\n\n    componentDidMount() {\n        this.pobierzListePowiatow(\"DOLNOŚLĄSKIE\");\n    }\n\n    pobierzListePowiatow(wojewodztwo: string) {\n        let wojName = wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\").replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\");\n        const apiUrl = '/files/' + wojName + '.json';\n        http.get(apiUrl).then((response) => {\n            const ret = new Map<string, PowiatEls>();\n            for (const x in response.data) {\n                if (response.data.hasOwnProperty(x)) {\n                    const gminy = new Map<string, string>();\n                    for (const y in response.data[x]) {\n                        if (response.data[x].hasOwnProperty(y)) {\n                            gminy.set(y, response.data[x][y]);\n                        }\n                    }\n                    const p: PowiatEls = {gminy: gminy};\n                    ret.set(x, p);\n                }\n            }\n            this.setState(Object.assign({}, this.state, {powiaty: ret}));\n            const pierwszaGmina = ret.values().next().value.gminy.values().next().value;\n            this.pobierzDaneGminy(pierwszaGmina);\n        });\n    }\n\n    pobierzDaneGminy(kodGminy: string) {\n        const apiUrl = '/files/' + kodGminy + '-panel.json';\n        http.get(apiUrl).then((response) => {\n            const ret: Dane = response.data;\n            console.log(ret);\n            this.setState(Object.assign({}, this.state, {dane: ret}));\n            if (ret.podregion_eurostat) {\n                this.pobierzZgony(ret.podregion_eurostat)\n            }\n            if (ret.kod_gus) {\n                this.state.gus_input.forEach((input, index) => {\n                    this.pobierzGUSComps(index, ret.kod_gus || '', input.gus_id, input.gus_opis)\n                });\n            }\n        });\n    }\n\n    pobierzGUSComps(index: number, kodGus: string, ids_string: string, opis: string) {\n        this.setState(Object.assign({}, this.state, {gus_opis: opis, gus_id: ids_string}));\n        let ids = ids_string.split(\",\").map(x => parseInt(x));\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        ids.forEach(id => {\n            apiUrl += \"&var-id=\" + id;\n        });\n        http.get(apiUrl).then((response) => {\n            let dane: GUS[] = [{rok: 2015}, {rok: 2016}, {rok: 2017}, {rok: 2018}, {rok: 2019}];\n            for (let r of response.data.results) {\n                for (let i = 0; i < ids.length; i++) {\n                    // znajdzmy odpowiedni id do przypisania wartosci, aby byly w takiej kolejnosci jak na liscie\n                    if (ids[i] !== r.id) {\n                        continue;\n                    }\n                    for (let v of r.values) {\n                        for (let z of dane) {\n                            if (z.rok === Number.parseInt(v.year)) {\n                                // @ts-ignore\n                                z[\"dane\" + i] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            let props = {opis: opis, dane: dane}\n            let arr = this.state.gus_comps;\n            arr[index] = props;\n            this.setState(Object.assign({}, this.state, {gus_comps: arr}));\n        });\n    }\n\n    pobierzZgony(podregion: string) {\n        const apiUrl = '/files/' + podregion + '.json';\n        http.get(apiUrl).then((response) => {\n            let x = response.data\n            this.setState(Object.assign({}, this.state, {zgony: x}));\n        });\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}