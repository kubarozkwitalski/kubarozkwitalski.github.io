{"version":3,"sources":["SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Zgony.tsx","WykresXY.tsx","WykresKolowy.tsx","Panel.tsx","SelektorWojewodztwa.tsx","WyborModulow.tsx","SelektorGrupy.tsx","konfiguracja/actionTypes.ts","App.tsx","konfiguracja/actions.ts","reportWebVitals.ts","enhancers/monitorReducers.js","middleware/logger.js","reducers.ts","konfiguracja/reducers.ts","index.tsx","configureStore.js"],"names":["SelektorGminy","this","props","gminaChangeFn","powiaty","id","defaultValue","onChange","ev","target","value","Array","from","entries","key","label","gminy","gmina","kodGminy","Fragment","React","Component","BudzetComp","dane","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat","powiat_pc","wojewodztwo","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Zgony","podregion","zgony","syncId","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","axisLine","strokeWidth","ticks","iconSize","wrapperStyle","type","dot","stroke","WykresXY","opis","chart_type","jednostka","split","tekst","serie_string","serie","COLORS","commonChartProps","divider","indexOf","numberDivider","grid","x","tickSize","tickMargin","y1","yAxisId","orientation","position","offset","tickFormatter","y2","legend","map","index","console","log","name","replace","stackId","substr","undefined","fill","length","WykresKolowy","RADIAN","Math","PI","state","activeIndex","verticalOffset","onPieClick","midAngle","sin","setState","inside","legendRenderer","bind","entry","daneFinal","slice","push","reduce","a","b","reverse","dangerouslySetInnerHTML","__html","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","onClick","activeShape","percent","cos","osx","osy","omx","omy","oex","oey","isx","isy","imx","imy","outsideTextAnchor","procentCalosci","line1","round","line2","toFixed","d","r","y","textAnchor","dy","layout","verticalAlign","align","formatter","PanelInternal","budzet","isShown","AttachMoney","fontSize","gospodarka_odpadami_komunalnymi","DeleteSharp","selected","cytat","autor","dzial","grupaDzial","grupaRozdzial","gus_comps","kolowy_wlasne_dane","xy_wlasne_dane","logo_url","typ_gminy","ludnosc","children","wybranyDzial","parseInt","caloscWydatkow","dzialCzescCalosci","grupyRozdzialyCzescCalosci","grupyRozdzialy","dzialChildren","StylesProvider","injectFirst","style","backgroundImage","renderBudzet","renderSmieci","budzet_wykres","grupyDzialy","connector","connect","SelektorWojewodztwa","wojewodztwoChangeFn","wojewodztwa","marginBottom","WyborModulow","moduly","zmianaModuluFn","options","handleOnChange","SelektorGrupy","grupaChangeFn","grupy","CHANGE_LOGO_URL","http","axios","create","baseURL","adapter","defaults","cacheAdapterEnhancer","App","classes","componentRef","WOJEWODZTWA","MODULY","GRUPY","createRef","handleChangeAutor","handleChangeCytat","handleChangeMultiple","pobierzDaneGminy","pobierzListePowiatow","handleChangeGrupyDzialy","handleChangeGrupyRozdzialy","handleSubmit","select","gus_input","gus_opis","gus_id","dane0","dane1","dane2","Object","assign","values","liczbaDzialow","liczbaRozdzialow","grupa","daneObject","csvToNameValueArray","csvToWykresXYDaneArray","event","preventDefault","csv","lines","result","i","line","v","isNaN","Number","d0","d1","d2","d3","d4","d5","dane3","dane4","dane5","json","forEach","nameValue","ret","changeLogoUrl","Panel","ref","onSubmit","padding","handleChangeWlasnyOpis","element","forceNotifyByEnter","debounceTimeout","handleChangeWlasnyDane","nameValueArrayToCsv","handleChangeWlasnyJednostka","handleChangeWlasnyXYOpis","handleChangeWlasnyXYDane","wykresXYDaneArrayToCsv","handleChangeWlasnyXYJednostka","handleChangeDzial","rel","href","color","input","pobierzGUSComps","kod_gus","trim","exportComponentAsPNG","apiUrl","replaceAll","get","then","response","Map","hasOwnProperty","set","p","podregion_eurostat","pobierzZgony","kodGus","ids_string","ids","results","z","year","val","arr","mapDispatchToProps","payload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","logger","store","next","group","info","getState","groupEnd","rootReducer","combineReducers","preloadedState","configureStore","middleware","loggerMiddleware","getDefaultMiddleware","enhancers","monitorReducersEnhancer","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca94bcdd.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface SelektorGminyProps {\n    gminaChangeFn: (kodGminy: string) => void;\n    powiaty?: Map<string, PowiatEls>;\n}\n\nexport interface PowiatEls {\n    gminy: Map<string, string>;\n}\n\nexport class SelektorGminy extends React.Component<SelektorGminyProps> {\n    render() {\n        const {gminaChangeFn, powiaty} = this.props;\n        return powiaty?<select id=\"selektor-gminy\"\n                               defaultValue=\"1261011\"\n                               onChange={ev => gminaChangeFn(ev.target.value)}>\n            {Array.from(powiaty.entries(), ([key, value]) => (\n                    <optgroup key={key} label={key}>\n                        {Array.from(value.gminy.entries(), ([gmina, kodGminy]) => (\n                                <option key={kodGminy} value={kodGminy}>\n                                    {gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>:<React.Fragment />;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\">\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./Panel\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface ZgonyWTygodniu {\n    podregion: string;\n    tydzien: string;\n    2014: number;\n    2015: number;\n    2016: number;\n    2017: number;\n    2018: number;\n    2019: number;\n    2020: number;\n}\n\nexport interface ZgonyProps {\n    podregion: string;\n    zgony: ZgonyWTygodniu[];\n}\n\nexport class Zgony extends React.Component<ZgonyProps> {\n    render() {\n        const {podregion, zgony} = this.props;\n        return <Box><br/><Box>Podregion {podregion}: wszystkie zgony wg. tygodnia:</Box>\n            <LineChart syncId={\"zgony\"} width={1060} height={500} data={zgony}\n                   margin={{ top: 10, right: 30, left: 20, bottom: 10 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"tydzien\" axisLine={{strokeWidth: 2}} ticks={[1,5,10,15,20,25,30,36,42,47,52]}/>\n            <YAxis axisLine={{strokeWidth: 2}}/>\n            <Legend iconSize={20} wrapperStyle={{bottom: -10}}/>\n            <Line type=\"monotone\" dot={false} dataKey=\"2014\" stroke=\"#92daad\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2015\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2016\" stroke=\"#72ba8d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2017\" stroke=\"#62aa7d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2018\" stroke=\"#529a6d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2019\" stroke=\"#428a5d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2020\" stroke=\"#ff2222\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {\n    Bar,\n    BarChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    XAxis,\n    YAxis\n} from \"recharts\";\n\nexport interface WykresXYDane {\n    label: string;\n    dane0?: number;\n    dane1?: number;\n    dane2?: number;\n    dane3?: number;\n    dane4?: number;\n    dane5?: number;\n}\n\nexport interface WykresXYProps {\n    opis?: string;\n    dane?: WykresXYDane[];\n    jednostka?: string;\n    chart_type?: 'Line' | 'Bar';\n}\n\nexport class WykresXY extends React.Component<WykresXYProps> {\n\n\n    render() {\n        const {dane, opis, chart_type = 'Line', jednostka} = this.props;\n        if (opis === '') {\n            return <React.Fragment/>;\n        }\n        let [tekst, serie_string] = opis?opis.split('|'):[];\n        let serie = serie_string?serie_string.split(\",\"):[];\n        const COLORS = [\n            [],\n            [\"#003f5c\"],\n            [\"#003f5c\", \"#ffa600\"],\n            [\"#003f5c\", \"#bc5090\", \"#ffa600\"],\n            [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"],\n            [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\"],\n            [\"#003f5c\", \"#444e86\", \"#955196\", \"#dd5182\", \"#ff6e54\", \"#ffa600\"],\n            [\"#003f5c\", \"#374c80\", \"#7a5195\", \"#bc5090\", \"#ef5675\", \"#ff764a\", \"#ffa600\"],\n            [\"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"],\n        ];\n        const commonChartProps = {\n            syncId: opis,\n            width: 1200,\n            height: 500,\n            data: dane,\n            margin: {top: 10, right: 40, left: 45, bottom: 10}\n        }\n        const divider = jednostka?(jednostka.indexOf('tys.') > -1?1000:\n            jednostka.indexOf('mln') > -1?1000000:1):1;\n\n        const numberDivider = (value: number) => {\n            return value / divider;\n        }\n        const grid = () => { return <CartesianGrid strokeDasharray=\"5 5\"/> }\n        const x = () => { return <XAxis dataKey=\"label\" tickSize={12} tickMargin={10}/>}\n        const y1 = () => { return <YAxis yAxisId=\"left\" orientation=\"left\" axisLine={{strokeWidth: 2}} tickSize={8} label={{value: jednostka, position: \"bottom\", offset: 20}} tickFormatter={numberDivider}/> }\n        const y2 = () => { return (opis && opis.indexOf(':R') > -1)?<YAxis yAxisId=\"right\" orientation=\"right\" axisLine={{strokeWidth: 2}} tickSize={18} label={jednostka} tickFormatter={numberDivider}/>:null }\n        const legend = () => { return <Legend iconSize={20} wrapperStyle={{bottom: -10}}/> }\n        return <Box><br/><Box>{tekst}</Box>\n            {chart_type === \"Bar\"?\n                <BarChart {...commonChartProps}>\n                    {grid()} {x()} {y1()} {y2()} {legend()}\n                    {serie.map((value, index) => {\n                        console.log(value);\n                        return value !== ''?<Bar key={index}\n                                    name={value.replace(':R', ' (prawa oś)').replace(/:S:./, '')}\n                                    stackId={value.indexOf(':S:') > -1?value.substr(value.indexOf(':S:') + 3, 1):undefined}\n                                    dataKey={\"dane\" + index}\n                                    fill={COLORS[serie.length][index]}\n                                    yAxisId={value.indexOf(':R') > -1?'right':'left'}/>:null;\n                    })\n                    }\n                </BarChart>:\n                <LineChart {...commonChartProps}>\n                    {grid()} {x()} {y1()} {y2()} {legend()}\n                    {serie.map((value, index) => {\n                        console.log(value);\n                        return value !== ''?<Line key={index}\n                                    type=\"monotone\"\n                                    name={value.replace(':R', ' (prawa oś)')}\n                                    dataKey={\"dane\" + index}\n                                    stroke={COLORS[serie.length][index]}\n                                    fill={COLORS[serie.length][index]}\n                                    strokeWidth={2}\n                                    yAxisId={value.indexOf(':R') > -1?'right':'left'}/>:null;\n                    })\n                    }\n                </LineChart>}\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Cell, Legend, Pie, PieChart, PieLabelRenderProps, Sector} from \"recharts\";\nimport {Box} from \"@material-ui/core\";\n\nexport interface NameValue {\n    name: string;\n    value: number;\n}\n\nexport interface WykresKolowyProps {\n    dane: NameValue[];\n    opis?: string;\n    procentCalosci: number;\n    jednostka: string;\n    inside: boolean;\n}\n\nexport class WykresKolowy extends React.Component<WykresKolowyProps> {\n    constructor(props: WykresKolowyProps) {\n        super(props);\n\n        this.legendRenderer = this.legendRenderer.bind(this);\n    }\n\n    RADIAN = Math.PI / 180;\n    state = {\n        activeIndex: -1,\n        verticalOffset: 0,\n    };\n\n    onPieClick = (data: PieLabelRenderProps, index: number) => {\n        const {midAngle} = data;\n        const sin = Math.sin(-this.RADIAN * (midAngle || 0));\n        this.setState({\n            verticalOffset: (!this.props.inside && sin < 0 && this.state.activeIndex !== index ? 80 : 0),\n            activeIndex: (this.state.activeIndex === index? -1 : index),\n        });\n    };\n\n    // @ts-ignore\n    legendRenderer(value, entry, index) {\n        if (index === this.state.activeIndex) {\n            return <span><b>{value}</b></span>;\n        } else {\n            return <span>{value}</span>;\n        }\n    }\n\n    render() {\n        const {dane, opis = 'bla', inside} = this.props;\n        // @ts-ignore\n        const renderActiveShape = (props) => {\n            const {\n                cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n                percent, value,\n            } = props;\n            const fill = '#f9c00c';\n            const sin = Math.sin(-this.RADIAN * midAngle);\n            const cos = Math.cos(-this.RADIAN * midAngle);\n            const osx = cx + (outerRadius + 20) * cos;\n            const osy = cy + (outerRadius + 20) * sin;\n            const omx = cx + (outerRadius + 60) * cos;\n            const omy = cy + (outerRadius + 60) * sin;\n            const oex = omx;\n            const oey = cy + ((outerRadius / 0.86 + 36) * (sin >= 0 ? 1 : -1)) - 10;\n            const isx = cx + (innerRadius + 9) * cos;\n            const isy = cy + (innerRadius + 9) * sin;\n            const imx = cx + (innerRadius / 2) * cos;\n            const imy = cy + (innerRadius / 2) * sin;\n            const outsideTextAnchor = cos < 0 ? 'start' : 'end';\n            const procentCalosci = this.props.procentCalosci;\n            const v = this.props.jednostka.indexOf('tys.') > -1?Math.round(value/1000):\n                (this.props.jednostka.indexOf('mln') > -1?Math.round(value/1000000):value);\n            const line1 = v + ' ' + this.props.jednostka;\n            const line2 = (percent * 100).toFixed(2) + '%' + (procentCalosci === 100 ?'':' / ' + (1.0 * procentCalosci * percent).toFixed(2) + '%');\n            return (\n                <g>\n                    <Sector\n                        cx={cx + 12 * cos}\n                        cy={cy + 12 * sin}\n                        innerRadius={innerRadius}\n                        outerRadius={outerRadius + 5}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        fill={fill}\n                        stroke=\"black\"\n                        strokeWidth={2}\n                    />\n                    {inside?\n                        <React.Fragment>\n                            <path d={`M${isx},${isy}L${imx},${imy}`} stroke={fill} strokeWidth={2} fill=\"none\"/>\n                            <circle cx={imx} cy={imy} r={4} fill={fill} stroke=\"none\" />\n                            <text x={cx} y={cy} textAnchor=\"middle\" fill=\"#333\">{line1}</text>\n                            <text x={cx} y={cy} dy={36} textAnchor=\"middle\" fill=\"#999\">{line2}</text>\n                        </React.Fragment>:\n                        <React.Fragment>\n                            <path d={`M${osx},${osy}L${omx},${omy}L${oex},${oey}`} stroke={fill} strokeWidth={2} fill=\"none\" />\n                            <circle cx={oex} cy={oey} r={4} fill={fill} stroke=\"none\" />\n                            <text x={oex + (cos < 0 ? 1 : -1) * 24} y={oey} textAnchor={outsideTextAnchor} fill=\"#333\">{line1}</text>\n                            <text x={oex + (cos < 0 ? 1 : -1) * 24} y={oey} dy={36} textAnchor={outsideTextAnchor} fill=\"#999\">{line2}</text>\n                        </React.Fragment>}\n                </g>\n            );\n        };\n\n        let daneFinal: any[] = dane.slice(0, 8);\n        if (dane.length > 8) {\n            daneFinal.push({name: \"Pozostałe\", value: dane.slice(8).reduce((a, b) => a + b.value, 0)});\n        }\n        // https://learnui.design/tools/data-color-picker.html#palette\n        const COLORS = [\"grey\", \"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"].reverse();\n        // const HUE = [\n        //     [\"#003f5c\", \"#255571\", \"#406b88\", \"#59829e\", \"#739bb6\", \"#8db3ce\", \"#a7cde6\", \"#c2e7ff\"],\n        //     [\"#2f4b7c\", \"#475f8e\", \"#5f73a0\", \"#7688b2\", \"#8d9ec5\", \"#a5b4d8\", \"#bdcbeb\", \"#d6e2ff\"],\n        // ];\n        return <React.Fragment>\n            {opis?<React.Fragment><br/><Box className=\"intro\" dangerouslySetInnerHTML={{__html: opis}} /></React.Fragment>:<React.Fragment/>}\n            <PieChart width={1200} height={inside?520:400 + (this.state.activeIndex >= 0 ? 80:0)}>\n            <Pie data={daneFinal} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy={inside?254:200+this.state.verticalOffset}\n                 innerRadius={inside?160:40} outerRadius={inside?240:172} label={false} startAngle={450} endAngle={90} activeIndex={this.state.activeIndex}\n                 onClick={this.onPieClick}\n                 activeShape={renderActiveShape}>\n                {\n                    // @ts-ignore\n                    daneFinal.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={index === this.state.activeIndex?\"#f9c00c\":COLORS[index]}/>\n                    ))\n                }\n            </Pie>\n            <Legend layout=\"vertical\" verticalAlign=\"bottom\" align=\"right\" formatter={this.legendRenderer}/>\n            </PieChart>\n        </React.Fragment>;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {Zgony, ZgonyProps} from \"./Zgony\";\nimport {WykresXY, WykresXYDane, WykresXYProps} from \"./WykresXY\";\nimport {WykresKolowy, WykresKolowyProps} from \"./WykresKolowy\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {RootState} from \"./reducers\";\n\nexport interface DotacjeUE {\n    gmina: string;\n    gmina_pc: string;\n    powiat: string;\n    powiat_pc: string;\n    wojewodztwo: string;\n    wojewodztwo_pc: string;\n}\n\ninterface Rozdzial {\n    name: string;\n    value: number;\n}\n\ninterface Dzial {\n    name: string;\n    value: number;\n    children: Rozdzial[];\n}\n\nexport interface Dane {\n    gmina?: string;\n    typ_gminy: string;\n    kod_gus?: string;\n    podregion_eurostat?: string;\n    dochod_ue?: string;\n    dotacje_ue?: DotacjeUE;\n    budzet?: Budzet;\n    budzet_wykres?: WykresXYDane[];\n    gospodarka_odpadami_komunalnymi?: Budzet;\n    ludnosc?: string;\n    wydatki_biezace_ue?: string;\n    wydatki_inwestycyjne_ue?: string;\n    // projekty_ue:\n    // janosik:\n    grupyRozdzialy: any;\n    grupyDzialy: any;\n    children?: Dzial[];\n}\n\ninterface PanelProps extends PropsFromRedux {\n    cytat?: string;\n    autor?: string;\n    selected: string[];\n    wojewodztwo?: string;\n    dzial?: string;\n    grupaDzial?: string;\n    grupaRozdzial?: string;\n    dane?: Dane;\n    zgony: ZgonyProps;\n    gus_comps: WykresXYProps[];\n    kolowy_wlasne_dane: WykresKolowyProps[];\n    xy_wlasne_dane: WykresXYProps[];\n}\n\nclass PanelInternal extends React.Component<PanelProps> {\n    renderBudzet(budzet?: Budzet) {\n        return this.isShown('budzet') && budzet?<React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi?: Budzet) {\n        return this.isShown('smieci') && gospodarka_odpadami_komunalnymi?\n            <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\" />\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    isShown(name: string) {\n        return (this.props.selected?.indexOf(name) > -1)\n    }\n\n    render() {\n        const {cytat, autor, dane, dzial, grupaDzial, grupaRozdzial, zgony, gus_comps, kolowy_wlasne_dane, xy_wlasne_dane} = this.props;\n\n        const {logo_url} = this.props;\n        const {gmina, typ_gminy, ludnosc, gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = dane || {};\n        const wybranyDzial = children ? children[parseInt(dzial || '0')] : null;\n        const caloscWydatkow = children?.reduce((a, b) => a + b.value, 0) || 1;\n        const dzialCzescCalosci = ((wybranyDzial?.value || 0) * 100) / caloscWydatkow;\n        const grupyRozdzialyCzescCalosci = dane && dane.grupyRozdzialy && grupaRozdzial && dane.grupyRozdzialy[grupaRozdzial]?\n            // @ts-ignore\n            ((dane.grupyRozdzialy[grupaRozdzial].reduce((a, b) => a + b.value, 0)) * 100 / caloscWydatkow):0;\n        const dzialChildren = wybranyDzial ? wybranyDzial.children : [];\n\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Box className=\"wstep\" style={{backgroundImage: \"url(\" + logo_url + \")\"}}>\n                            <Box className=\"prawa\">\n                                <Box>&nbsp;</Box>\n                                <Box className=\"nazwa_gminy\"><strong>{gmina}</strong></Box>\n                                <Box>{typ_gminy?.replace(gmina || 'ble', '')}</Box>\n                                <Box><strong>{ludnosc}</strong> mieszkańców</Box>\n                                <Box>&nbsp;</Box>\n                                <Box>&nbsp;</Box>\n                            </Box>\n                        </Box>\n                        <Box className=\"tlo\">\n                            {cytat !== '' ? <Box><i>{cytat}</i></Box> : ''}\n                            {autor !== '' ?\n                                <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                            <Box>&nbsp;</Box>\n                            {this.renderBudzet(budzet)}\n                            {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                            {this.isShown('dotacje_ue') && dotacje_ue?\n                                 <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                                 <React.Fragment />}\n                            {this.isShown('budzet-wykres') && dane && dane.budzet_wykres?\n                                <WykresXY dane={dane.budzet_wykres} chart_type=\"Bar\"\n                                          opis=\"Historia budżetu gminy:|dochody,wydatki\" jednostka=\"mln zł\"/> :null}\n                            {this.isShown('budzet-bilans') && dane && dane.budzet_wykres?\n                                <WykresXY dane={dane.budzet_wykres} chart_type=\"Bar\"\n                                          opis=\"Bilans budżetu gminy:|,,budżet:S:A,deficyt:S:A,nadwyżka:S:A\" jednostka=\"mln zł\"/> :null}\n                            {this.isShown('kolowy-wlasny') && kolowy_wlasne_dane?\n                                kolowy_wlasne_dane.map((entry, index) =>\n                                    (<WykresKolowy dane={kolowy_wlasne_dane[index].dane} opis={kolowy_wlasne_dane[index].opis}\n                                                   procentCalosci={100} jednostka={kolowy_wlasne_dane[index].jednostka} inside={false}/>)):<React.Fragment />}\n                            {this.isShown('xy-wlasny') && xy_wlasne_dane?\n                                xy_wlasne_dane.map((entry, index) =>\n                                    (<WykresXY chart_type=\"Bar\" dane={xy_wlasne_dane[index].dane || []} opis={xy_wlasne_dane[index].opis}\n                                               jednostka={xy_wlasne_dane[index].jednostka}/>)):<React.Fragment />}\n                            {this.isShown('dzialy') && children?\n                                    <WykresKolowy dane={children} opis=\"Wydatki wg. działów budżetu:\" procentCalosci={100} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('rozdzialy') && dzialChildren?\n                                // @ts-ignore\n                                    <WykresKolowy dane={dzialChildren} opis={\"Rozdział wydatków z <b>\" + dane?.children[dzial].name + \"</b>:\"} procentCalosci={dzialCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('grupy-dzialy') && dane && grupaDzial && dane.grupyDzialy && dane.grupyDzialy[grupaDzial]?\n                                    <WykresKolowy dane={dane.grupyDzialy[grupaDzial]} opis={\"Wydatki z grupy <b>\" + grupaDzial + \"</b> wg działu:\"} procentCalosci={100} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('grupy-rozdzialy') && dane && grupaRozdzial && dane.grupyRozdzialy && dane.grupyRozdzialy[grupaRozdzial]?\n                                    <WykresKolowy dane={dane.grupyRozdzialy[grupaRozdzial]} opis={\"Wydatki z grupy <b>\" + grupaRozdzial + \"</b> wg rozdziału:\"} procentCalosci={grupyRozdzialyCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('gus')?\n                                gus_comps.map((entry, index) =>\n                                    (<WykresXY key={index} dane={entry.dane} opis={entry.opis} />)):<React.Fragment />}\n                            {this.isShown('zgony') && zgony?\n                                <Zgony zgony={zgony.zgony} podregion={zgony.podregion}/>:<React.Fragment />}\n                        </Box>\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n                </div>\n            </StylesProvider>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return { logo_url: state.logo_url };\n};\n\nconst connector = connect(\n    mapStateToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(PanelInternal);","import React from \"react\";\n\ninterface SelektorWojewodztwaProps {\n    wojewodztwoChangeFn: (wojewodztwo: string) => void;\n    wojewodztwa: string[];\n}\n\nexport class SelektorWojewodztwa extends React.Component<SelektorWojewodztwaProps> {\n    render() {\n        const {wojewodztwoChangeFn, wojewodztwa} = this.props;\n        return <select defaultValue=\"MAŁOPOLSKIE\"\n            id=\"demo\"\n            style={{marginBottom: 10}}\n            onChange={ev => wojewodztwoChangeFn(ev.target.value)}>\n            {wojewodztwa.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React from \"react\";\n// @ts-ignore\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\ninterface WyborModulowProps {\n    zmianaModuluFn: (moduly: string[]) => void;\n    moduly: string[];\n}\n\nexport class WyborModulow extends React.Component<WyborModulowProps> {\n    render() {\n        const {moduly, zmianaModuluFn} = this.props;\n        return <div style={{width: \"520px\"}}>\n            <DropdownMultiselect options={moduly} selected={moduly.slice(3)} handleOnChange={(selected: string[]) => zmianaModuluFn(selected)}>\n        </DropdownMultiselect></div>\n    }\n}","import React from \"react\";\n\ninterface SelektorGrupyProps {\n    grupaChangeFn: (grupa: string) => void;\n    grupy: string[];\n}\n\nexport class SelektorGrupy extends React.Component<SelektorGrupyProps> {\n    render() {\n        const {grupaChangeFn, grupy} = this.props;\n        return <select\n            id=\"SelektorGrupy\"\n            style={{marginBottom: 10}}\n            onChange={ev => grupaChangeFn(ev.target.value)}>\n            {grupy.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","export const CHANGE_LOGO_URL = \"CHANGE_LOGO_URL\";","import {connect, ConnectedProps} from 'react-redux'\nimport React, {FormEvent} from 'react';\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport {PowiatEls, SelektorGminy} from \"./SelektorGminy\";\nimport Panel from \"./Panel\";\nimport { Dane } from \"./Panel\";\nimport axios from \"axios\";\nimport { cacheAdapterEnhancer } from 'axios-extensions';\nimport {SelektorWojewodztwa} from \"./SelektorWojewodztwa\";\nimport {WyborModulow} from \"./WyborModulow\";\nimport { ZgonyProps } from './Zgony';\nimport {WykresXYDane, WykresXYProps} from \"./WykresXY\";\nimport {SelektorGrupy} from \"./SelektorGrupy\";\nimport {DebounceInput} from \"react-debounce-input\";\nimport {NameValue, WykresKolowyProps} from \"./WykresKolowy\";\nimport {changeLogoUrl} from \"./konfiguracja/actions\";\nimport {RootState} from \"./reducers\";\n\nconst http = axios.create({\n    baseURL: '/',\n    // headers: { 'Cache-Control': 'no-cache' },\n    // cache will be enabled by default\n    adapter: axios.defaults.adapter?cacheAdapterEnhancer(axios.defaults.adapter):undefined\n});\n\n// interface Modul {\n//     widoczny: boolean;\n// }\n//\n// interface Moduly {\n//     logo: Modul;\n//     cytat: Modul;\n//     autor: Modul;\n// }\n\ninterface AppProps extends PropsFromRedux {\n    // moduly: Moduly;\n    // logo_url2: string;\n}\n\ninterface GUSInput {\n    gus_opis: string;\n    gus_id: string;\n}\n\ninterface AppState {\n    cytat: string;\n    autor: string;\n    select: string[];\n    dzial: string;\n    grupaDzial: string;\n    grupaRozdzial: string;\n    gus_input: GUSInput[];\n    gus_comps: WykresXYProps[];\n    xy_wlasne_dane: WykresXYProps[];\n    kolowy_wlasne_dane: WykresKolowyProps[];\n    dane?: Dane;\n    powiaty?: Map<string, PowiatEls>;\n    zgony: ZgonyProps;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    WOJEWODZTWA = [\n        \"DOLNOŚLĄSKIE\",\n        \"KUJAWSKO-POMORSKIE\",\n        \"LUBELSKIE\",\n        \"LUBUSKIE\",\n        \"ŁÓDZKIE\",\n        \"MAŁOPOLSKIE\",\n        \"MAZOWIECKIE\",\n        \"OPOLSKIE\",\n        \"PODKARPACKIE\",\n        \"PODLASKIE\",\n        \"POMORSKIE\",\n        \"ŚLĄSKIE\",\n        \"ŚWIĘTOKRZYSKIE\",\n        \"WARMIŃSKO-MAZURSKIE\",\n        \"WIELKOPOLSKIE\",\n        \"ZACHODNIOPOMORSKIE\",\n    ]\n\n    MODULY = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"budzet-wykres\",\n        \"budzet-bilans\",\n        \"kolowy-wlasny\",\n        \"xy-wlasny\",\n        \"dzialy\",\n        \"rozdzialy\",\n        \"grupy-dzialy\",\n        \"grupy-rozdzialy\",\n        \"zgony\",\n        \"gus\",\n    ]\n\n    GRUPY = [\n        \"Wynagrodzenia i składki\",\n        \"Wydatki na zadania statutowe\",\n        \"Dotacje na zadania bieżące\",\n        \"Świadczenia na rzecz osób fizycznych\",\n        \"Wynagrodzenia finansowane programami UE\",\n        \"Współfinansowanie wynagrodzeń programów UE\",\n        \"Wynagrodzenia dla innych programów zagranicznych\",\n        \"Wydatki finansowane programami UE\",\n        \"Współfinansowanie wydatków programów UE\",\n        \"Wydatki dla innych programów zagranicznych\",\n        \"Dotacje bieżące z programów UE\",\n        \"Współfinansowanie dotacji bieżących z programów UE\",\n        \"Dotacje bieżące z innych programów zagranicznych\",\n        \"Świadczenia dla osób fizycznych finansowane z UE\",\n        \"Współfinansowane świadczeń dla osób fizycznych z UE\",\n        \"Świadczenia dla osób fizycznych z innych programów zagranicznych\",\n        \"Wypłaty z poręczeń i gwarancji udzielonych przez gminę\",\n        \"Obsługa długu\",\n        \"Inwestycje ze środków gminy\",\n        \"Inwestycje ze środków UE\",\n        \"Współfinansowanie inwestycji ze środków UE\",\n        \"Dotacje do inwestycji ze środków gminy\",\n        \"Dotacje do inwestycji ze środków UE\",\n        \"Współfinansowanie dotacji do inwestycji ze środków UE\",\n        \"Zakup i objęcie akcji i udziałów\",\n        \"Wniesienie wkładów do spółek prawa handlowego\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeAutor = this.handleChangeAutor.bind(this);\n        this.handleChangeCytat = this.handleChangeCytat.bind(this);\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n\n        this.pobierzDaneGminy = this.pobierzDaneGminy.bind(this);\n        this.pobierzListePowiatow = this.pobierzListePowiatow.bind(this);\n        this.handleChangeGrupyDzialy = this.handleChangeGrupyDzialy.bind(this);\n        this.handleChangeGrupyRozdzialy = this.handleChangeGrupyRozdzialy.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            cytat: \"np: Kraków w 2019 realizował dobrą politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.\",\n            autor: \"np.: Jan Kowalski, Prezydent Miasta Krakowa\",\n            select: this.MODULY.slice(3),\n            dzial: \"0\",\n            grupaDzial: \"Wynagrodzenia i składki\",\n            grupaRozdzial: \"Wynagrodzenia i składki\",\n            gus_input: [{\n                gus_opis: \"Procent mieszkańców podłączonych do kanalizacji|miasto,ogółem,wieś\",\n                gus_id: \"60308,60309,60310\"},{\n                gus_opis: \"Emisja zanieczyszczeń|gazowych bez CO2,pyłowych:R\",\n                gus_id: \"1509,1508\"},{\n                gus_opis: \"Tereny zieleni|parki,zieleńce,zieleń uliczna,zieleń lokalna,zieleń osiedlowa\",\n                gus_id: \"73847,73848,73849,73850,73852\"},{\n                gus_opis: \"Dzieci, młodzież i dorośli wg rodzaju placówki:|żłobki,przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n                gus_id: \"377227,151864,151867,455415,2394,455392\"},{\n                gus_opis: \"Uczniowie przypadający na 1 oddział w szkołach:|podstawowych,liceach,zawodowych\",\n                gus_id: \"454078,454099,454088\"},{\n                gus_opis: \"Etaty nauczycielskie wg rodzaju szkoły:|przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n                gus_id: \"288152,377896,378306,378248,378626\"}],\n            gus_comps: [{},{},{},{},{},{}],\n            kolowy_wlasne_dane: [\n                {\n                    dane: [{\"name\": \"Pierwsza wartość\", \"value\": 321000},\n                        {\"name\": \"Druga wartość\", \"value\": 227000},\n                        {\"name\": \"Trzecia wartość\", \"value\": 146000},\n                        {\"name\": \"Czwarta wartość\", \"value\": 110000},\n                        {\"name\": \"Piąta wartość\", \"value\": 109000},\n                        {\"name\": \"Szósta wartość\", \"value\": 87000},\n                        {\"name\": \"Siódma wartość\", \"value\": 77000},\n                        {\"name\": \"Ósma wartość\", \"value\": 66000},\n                        {\"name\": \"Pozostałe\", \"value\": 88000}],\n                    opis: 'Wykres dla dowolnych danych - zmień wartości w panelu po prawej i zobacz efekt',\n                    procentCalosci: 100,\n                    jednostka: 'tys. zł',\n                    inside: true,\n                }\n            ],\n            xy_wlasne_dane: [\n                {\n                    opis: \"Wykres XY dla dowolnych danych - zmień wartości i zobacz efekt|seria1:S:A, seria2:S:A, seria3:R\",\n                    dane: [\n                        {label: \"2015\", dane0: 24, dane1: 65, dane2: 1034},\n                        {label: \"2016\", dane0: 34, dane1: 55, dane2: 1234},\n                        {label: \"2017\", dane0: 54, dane1: 35, dane2: 1634},\n                        {label: \"2018\", dane0: 74, dane1: 15, dane2: 2234},\n                        {label: \"2019\", dane0: 104, dane1: 3, dane2: 2234},\n                        ],\n                }\n            ],\n            zgony: {podregion: '', zgony: []},\n        };\n    }\n\n    handleChangeAutor(autor: string) {\n        this.setState(Object.assign({}, this.state, {autor: autor}));\n    }\n\n    handleChangeCytat(cytat: string) {\n        this.setState(Object.assign({}, this.state, {cytat: cytat}));\n    }\n\n    handleChangeMultiple(values: string[]) {\n        this.setState(Object.assign({}, this.state, {select: values}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleChangeLiczbaRozdzialow(liczbaRozdzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaRozdzialow: liczbaRozdzialow}));\n    }\n\n    handleChangeDzial(dzial: string) {\n        this.setState(Object.assign({}, this.state, {dzial: dzial}));\n    }\n\n    handleChangeGrupyDzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaDzial: grupa}));\n    }\n\n    handleChangeGrupyRozdzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaRozdzial: grupa}));\n    }\n\n    handleChangeWlasnyOpis(opis: string) {\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {opis: opis})\n                ]}));\n    }\n\n    handleChangeWlasnyDane(dane: string) {\n        let daneObject = this.csvToNameValueArray(dane);\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {dane: daneObject})\n                ]}));\n    }\n\n    handleChangeWlasnyJednostka(jednostka: string) {\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {jednostka: jednostka})\n                ]}));\n    }\n\n    handleChangeWlasnyXYOpis(opis: string) {\n        this.setState(Object.assign({}, this.state,\n            {xy_wlasne_dane: [\n                    Object.assign({}, this.state.xy_wlasne_dane[0], {opis: opis})\n                ]}));\n    }\n\n    handleChangeWlasnyXYDane(dane: string) {\n        let daneObject = this.csvToWykresXYDaneArray(dane);\n        this.setState(Object.assign({}, this.state,\n            {xy_wlasne_dane: [\n                    Object.assign({}, this.state.xy_wlasne_dane[0], {dane: daneObject})\n                ]}));\n    }\n\n    handleChangeWlasnyXYJednostka(jednostka: string) {\n        this.setState(Object.assign({}, this.state,\n            {xy_wlasne_dane: [\n                    Object.assign({}, this.state.xy_wlasne_dane[0], {jednostka: jednostka})\n                ]}));\n    }\n\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    isShown(name: string) {\n        return (this.state.select.indexOf(name) > -1)\n    }\n\n    csvToNameValueArray(csv: string) {\n        let lines = csv.split('\\n');\n        let result = [];\n        for(let i = 0;i < lines.length;i++) {\n            let line = lines[i].split(\",\");\n            if (line.length === 2) {\n                let v = isNaN(Number(line[1]))?0:Number(line[1]);\n                result.push({name: line[0], value: v});\n            }\n        }\n        return result;\n    }\n\n    csvToWykresXYDaneArray(csv: string) {\n        let lines = csv.split('\\n');\n        let result = [];\n        for(let i = 0;i < lines.length;i++) {\n            if (lines[i].length === 0) {\n                continue;\n            }\n            let line = lines[i].split(\",\");\n            let d0 = isNaN(Number(line[1]))?undefined:Number(line[1]);\n            let d1 = isNaN(Number(line[2]))?undefined:Number(line[2]);\n            let d2 = isNaN(Number(line[3]))?undefined:Number(line[3]);\n            let d3 = isNaN(Number(line[4]))?undefined:Number(line[4]);\n            let d4 = isNaN(Number(line[5]))?undefined:Number(line[5]);\n            let d5 = isNaN(Number(line[6]))?undefined:Number(line[6]);\n            result.push({x: line[0],\n                dane0: d0,\n                dane1: d1,\n                dane2: d2,\n                dane3: d3,\n                dane4: d4,\n                dane5: d5,\n            });\n        }\n        return result;\n    }\n\n    nameValueArrayToCsv(json: NameValue[]) {\n        let x = '';\n        json.forEach((nameValue) => {x += nameValue.name + ',' + nameValue.value + '\\n'});\n        return x;\n    }\n\n    wykresXYDaneArrayToCsv(json: WykresXYDane[]) {\n        let ret = '';\n        json.forEach((nameValue) => {ret += nameValue.label + ',' + (nameValue.dane0?nameValue.dane0:'') + ',' + (nameValue.dane1?nameValue.dane1:'') + ',' + (nameValue.dane2?nameValue.dane2:'') + ',' + (nameValue.dane3?nameValue.dane3:'') + ',' + (nameValue.dane4?nameValue.dane4:'') + ',' + (nameValue.dane5?nameValue.dane5:'') + '\\n'});\n        return ret;\n    }\n\n    render() {\n        const {cytat, autor, select, dzial, grupaDzial, grupaRozdzial, gus_input, dane, powiaty, zgony, gus_comps, kolowy_wlasne_dane, xy_wlasne_dane} = this.state;\n        const {logo_url, changeLogoUrl} = this.props;\n        return (\n            <Box display=\"flex\" flexDirection=\"row\">\n                <Panel\n                       dane={dane} ref={this.componentRef} cytat={cytat} autor={autor} selected={select} dzial={dzial}\n                       grupaDzial={grupaDzial} grupaRozdzial={grupaRozdzial} zgony={zgony} gus_comps={gus_comps} kolowy_wlasne_dane={kolowy_wlasne_dane} xy_wlasne_dane={xy_wlasne_dane}/>\n                <form onSubmit={this.handleSubmit}>\n                    <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                        <span className=\"hint\">URL logo w nagłówku:</span>\n                        <input type=\"text\" name=\"logo_url\" onChange={\n                            ev=>changeLogoUrl(ev.target.value)}\n                               value={logo_url}/>\n                        <strong>Wybór Jednostki Samorządu:</strong>\n                        <span className=\"hint\">Województwo:</span>\n                        <SelektorWojewodztwa wojewodztwa={this.WOJEWODZTWA} wojewodztwoChangeFn={this.pobierzListePowiatow}/>\n                        <span className=\"hint\">Gmina:</span>\n                        <SelektorGminy powiaty={powiaty} gminaChangeFn={this.pobierzDaneGminy}/>\n                        <hr/>\n                        <strong>Komentarz eksperta:</strong>\n                        <span className=\"hint\">Tekst:</span>\n                        <textarea name=\"cytat\" onChange={ev=>this.handleChangeCytat(ev.target.value)} value={cytat}/>\n                        <span className=\"hint\">Autor:</span>\n                        <input type=\"text\" name=\"autor\" onChange={ev=>this.handleChangeAutor(ev.target.value)}\n                               value={autor}/>\n                        <hr/>\n                        <strong>Elementy grafiki:</strong>\n                        <WyborModulow moduly={this.MODULY} zmianaModuluFn={this.handleChangeMultiple}/>\n                        <hr/>\n                        {this.isShown('kolowy-wlasny')?<React.Fragment>\n                            <strong>Wykres kołowy na bazie własnych danych:</strong>\n                            {/*<select*/}\n                            {/*    id=\"SelektorGrupy\"*/}\n                            {/*    onChange={ev => grupaChangeFn(ev.target.value)}>*/}\n                            {/*    {grupy.map((name) => (*/}\n                            {/*        <option key={name} value={name}>*/}\n                            {/*            {name}*/}\n                            {/*        </option>*/}\n                            {/*    ))}*/}\n                            {/*</select>;*/}\n                            <span className=\"hint\">Nagłówek wykresu:</span>\n                            <input type=\"text\" name=\"wlasny_kolowy.opis\" onChange={ev=>this.handleChangeWlasnyOpis(ev.target.value)}\n                                   value={kolowy_wlasne_dane[0].opis} />\n                            <span className=\"hint\">Dane do wykresu:</span>\n                            <DebounceInput element=\"textarea\" forceNotifyByEnter={false} debounceTimeout={2000} className=\"json\" name=\"wlasny.dane\" onChange={ev=>this.handleChangeWlasnyDane(ev.target.value)} value={this.nameValueArrayToCsv(kolowy_wlasne_dane[0].dane)}/>\n                            <span className=\"hint\">Jednostka do dodania do nazw. Jeśli zawiera 'tys.' lub 'mln' to zostanie odpowiednio przeliczona:</span>\n                            <input type=\"text\" name=\"wlasny_kolowy.jednostka\" onChange={ev=>this.handleChangeWlasnyJednostka(ev.target.value)}\n                                   value={kolowy_wlasne_dane[0].jednostka} />\n\n                            <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('xy-wlasny')?<React.Fragment>\n                            <strong>Wykres XY na bazie własnych danych:</strong>\n                            <span className=\"hint\">Nagłówek wykresu:</span>\n                            <input type=\"text\" name=\"wlasny_xy.opis\" onChange={ev=>this.handleChangeWlasnyXYOpis(ev.target.value)}\n                                   value={xy_wlasne_dane[0].opis} />\n                            <span className=\"hint\">Dane do wykresu:</span>\n                            <span className=\"hint\">Format: NAGŁÓWEK|SERIA0:S:A,SERIA1:S:A,SERIA2:S:B:R,SERIA3:S:B:R (serie z \":R\" na końcu nazwy będą na prawej osi Y, wartości z :S:A, :S:B, etc. będą wyświetlone nad sobą)</span>\n                            <DebounceInput element=\"textarea\" forceNotifyByEnter={false} debounceTimeout={2000} className=\"json\" name=\"wlasny_liniowy.dane\" onChange={ev=>this.handleChangeWlasnyXYDane(ev.target.value)} value={this.wykresXYDaneArrayToCsv(xy_wlasne_dane[0].dane || [])}/>\n                            <span className=\"hint\">Jednostka do dodania do nazw. Jeśli zawiera 'tys.' lub 'mln' to zostanie odpowiednio przeliczona:</span>\n                            <input type=\"text\" name=\"wlasny_liniowy.jednostka\" onChange={ev=>this.handleChangeWlasnyXYJednostka(ev.target.value)}\n                                   value={xy_wlasne_dane[0].jednostka} />\n\n                            <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('rozdzialy')?<React.Fragment>\n                                <strong>Number działu do szczegółowego wyświetlenia:</strong>\n                                <input type=\"text\" name=\"dzial\" value={dzial}\n                                       onChange={ev=>this.handleChangeDzial(ev.target.value)}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-dzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na działy:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyDzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-rozdzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na rozdziały:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyRozdzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        <Box><strong>Wykresy z danych GUS:</strong>(<a target=\"_blank\" rel=\"noreferrer\"  href=\"https://bdl.stat.gov.pl/BDL/metadane/cechy/2398#\">źródło</a>)</Box>\n                        <Box style={{color: \"red\"}}>(Gdy wszystkie wykresy są puste oznacza to zapewne awarię serwera GUS - ostatnia zdarzyła się 2021.01.03)</Box>\n                        {this.isShown('gus')?gus_input.map((input, index) => {\n                                return <React.Fragment key={index}>\n                                    <span className=\"hint\"><b>Wykres {index}</b>: Nagłówek wykresu i nazwy serii danych(pozostaw pusty aby schować wykres)</span>\n                                    <span className=\"hint\">Format: NAGŁÓWEK|SERIA1,SERIA2:R,SERIA3:R (serie z \":R\" na końcu nazwy będą na prawej osi Y)</span>\n                                    <DebounceInput type=\"text\" name=\"gus_opis\" value={input.gus_opis}\n                                           onChange={ev=>this.pobierzGUSComps(index, dane?.kod_gus || '', input.gus_id, ev.target.value.trim())}\n                                                   debounceTimeout={2000}/>\n                                    <span className=\"hint\">Identyfikatory danych z GUS. Dane muszą być dostępne na poziomie gminy.</span>\n                                    <DebounceInput type=\"text\" name=\"gus_id\" value={input.gus_id}\n                                           onChange={ev=>this.pobierzGUSComps(index, dane?.kod_gus || '', ev.target.value.trim(), input.gus_opis)}\n                                                   debounceTimeout={2000}/>\n                                <hr/></React.Fragment>}):<React.Fragment/>}\n                        <button onClick={() => exportComponentAsPNG(this.componentRef)}>\n                            Export PNG\n                        </button>\n                    </Box>\n                </form>\n            </Box>\n        );\n    }\n\n    componentDidMount() {\n        this.pobierzListePowiatow(\"MAŁOPOLSKIE\");\n    }\n\n    pobierzListePowiatow(wojewodztwo: string) {\n        let wojName = wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\").replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\");\n        const apiUrl = '/files/' + wojName + '.json';\n        http.get(apiUrl).then((response) => {\n            const ret = new Map<string, PowiatEls>();\n            for (const x in response.data) {\n                if (response.data.hasOwnProperty(x)) {\n                    const gminy = new Map<string, string>();\n                    for (const y in response.data[x]) {\n                        if (response.data[x].hasOwnProperty(y)) {\n                            gminy.set(y, response.data[x][y]);\n                        }\n                    }\n                    const p: PowiatEls = {gminy: gminy};\n                    ret.set(x, p);\n                }\n            }\n            this.setState(Object.assign({}, this.state, {powiaty: ret}));\n            // const pierwszaGmina = ret.values().next().value.gminy.values().next().value;\n            const pierwszaGmina = \"1261011\";\n            this.pobierzDaneGminy(pierwszaGmina);\n        });\n    }\n\n    // TODO: use react testing library & jest\n    pobierzDaneGminy(kodGminy: string) {\n        const apiUrl = '/files/' + kodGminy + '-panel.json';\n        http.get(apiUrl).then((response) => {\n            const ret: Dane = response.data;\n            console.log(ret);\n            this.setState(Object.assign({}, this.state, {dane: ret}));\n            if (ret.podregion_eurostat) {\n                this.pobierzZgony(ret.podregion_eurostat)\n            }\n            if (ret.kod_gus) {\n                console.log(ret.kod_gus);\n                this.state.gus_input.forEach((input, index) => {\n                    console.log(input);\n                    this.pobierzGUSComps(index, ret.kod_gus || '', input.gus_id, input.gus_opis)\n                });\n            }\n        });\n    }\n\n    pobierzGUSComps(index: number, kodGus: string, ids_string: string, opis: string) {\n        console.log(index + \":\" + kodGus);\n        this.setState(Object.assign({}, this.state, {gus_opis: opis, gus_id: ids_string}));\n        let ids = ids_string.split(\",\").map(x => parseInt(x));\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        ids.forEach(id => {\n            apiUrl += \"&var-id=\" + id;\n        });\n        http.get(apiUrl).then((response) => {\n            console.log(response);\n            let dane: WykresXYDane[] = [{label: \"2015\"}, {label: \"2016\"}, {label: \"2017\"}, {label: \"2018\"}, {label: \"2019\"}];\n            for (let r of response.data.results) {\n                for (let i = 0; i < ids.length; i++) {\n                    // znajdzmy odpowiedni id do przypisania wartosci, aby byly w takiej kolejnosci jak na liscie\n                    if (ids[i] !== r.id) {\n                        continue;\n                    }\n                    for (let v of r.values) {\n                        for (let z of dane) {\n                            if (z.label === v.year) {\n                                // @ts-ignore\n                                z[\"dane\" + i] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            let props = {opis: opis, dane: dane}\n            let arr = this.state.gus_comps;\n            arr[index] = props;\n            console.log(arr);\n            this.setState(Object.assign({}, this.state, {gus_comps: arr}));\n        });\n    }\n\n    pobierzZgony(podregion: string) {\n        const apiUrl = '/files/' + podregion + '.json';\n        http.get(apiUrl).then((response) => {\n            let x = response.data\n            this.setState(Object.assign({}, this.state, {zgony: x}));\n        });\n    }\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return { logo_url: state.logo_url };\n};\n\nconst mapDispatchToProps = {\n    changeLogoUrl\n}\n\nconst connector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(App);","import { CHANGE_LOGO_URL } from \"./actionTypes\";\n\nexport const changeLogoUrl = (logo_url: string) => ({\n    type: CHANGE_LOGO_URL,\n    payload: logo_url\n});","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer\n","const logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nexport default logger\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport {logo_url} from \"./konfiguracja/reducers\";\n\n\nconst rootReducer = combineReducers({\n    logo_url,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>","import { CHANGE_LOGO_URL } from \"./actionTypes\";\n\ninterface Action {\n    type: \"CHANGE_LOGO_URL\";\n    payload: string;\n}\n// header_logo.png\nexport const logo_url = (state = 'header_logo.png', action: Action) => {\n    console.log(state);\n    console.log(action);\n    switch (action.type) {\n        case CHANGE_LOGO_URL:\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport configureStore from './configureStore'\n\nconst store = configureStore()\n\nconst renderApp = () => ReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ndocument.title = \"Generator Infografik\";\n\n// @ts-ignore\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n    // @ts-ignore\n    module.hot.accept('./App', renderApp)\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\nimport loggerMiddleware from './middleware/logger'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [loggerMiddleware, ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}\n"],"sourceRoot":""}