{"version":3,"sources":["SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Nauczyciele.tsx","Panel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelektorGminy","props","state","powiaty","Map","wojewodztwo","this","kodWybranejGminy","gminaChangeFn","id","value","onChange","ev","target","Array","from","entries","key","label","gminy","gmina","kodGminy","apiUrl","replaceAll","axios","get","then","response","ret","x","data","hasOwnProperty","y","set","p","setState","Object","assign","common","React","Component","BudzetComp","dane","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat","powiat_pc","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Nauczyciele","kodGus","console","log","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","position","szkoly","377896","378306","378248","378626","rok","results","r","values","v","z","Number","parseInt","year","val","Panel","budzet","dochody_kierunek","dochody_zmiana","wydatki_kierunek","wydatki_zmiana","gospodarka_odpadami_komunalnymi","children","name","selected","indexOf","Fragment","AttachMoney","fontSize","DeleteSharp","kod_gus","ludnosc","cytat","autor","liczbaDzialow","dzialy","COLORS","StylesProvider","injectFirst","renderBudzet","renderSmieci","Math","max","min","length","slice","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","map","entry","index","fill","layout","verticalAlign","align","App","classes","componentRef","wojewodztwa","elements","createRef","handleChangeAutor","bind","handleChangeCytat","handleChangeMultiple","handleChangeGmina","handleChangeWojewodztwo","handleSubmit","select","event","i","l","push","preventDefault","ref","onSubmit","style","padding","marginBottom","FormControl","Select","labelId","multiple","input","Input","renderValue","Chip","MenuItem","handleChangeLiczbaDzialow","onClick","exportComponentAsPNG","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32fb8278.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\ninterface SelektorGminyProps {\n    wojewodztwo: string;\n    gminaChangeFn: (kodGminy: string) => void;\n    kodWybranejGminy: string;\n}\n\ninterface PowiatEls {\n    gminy: Map<string, string>;\n}\n\ninterface SelektorGminyState {\n    wojewodztwo: string;\n    powiaty: Map<string, PowiatEls>;\n}\n\nexport class SelektorGminy extends React.Component<SelektorGminyProps, SelektorGminyState> {\n    constructor(props: SelektorGminyProps) {\n        super(props);\n        this.state = {powiaty: new Map<string, PowiatEls>(), wojewodztwo: 'bla'};\n    }\n\n    render() {\n        const {kodWybranejGminy, gminaChangeFn} = this.props;\n        const {powiaty} = this.state;\n        return <select\n            id=\"demo\"\n            value={kodWybranejGminy}\n            onChange={ev => gminaChangeFn(ev.target.value)}>\n            {Array.from(powiaty.entries(), ([key, value]) => (\n                    <optgroup key={key} label={key}>\n                        {Array.from(value.gminy.entries(), ([gmina, kodGminy]) => (\n                                <option key={kodGminy} value={kodGminy}>\n                                    {gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>\n    }\n\n    common() {\n        if (this.state.wojewodztwo !== this.props.wojewodztwo) {\n            let wojName = this.props.wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\").replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\");\n            const apiUrl = '/files/' + wojName + '.json';\n            axios.get(apiUrl).then((response) => {\n                const ret = new Map<string, PowiatEls>();\n                for (const x in response.data) {\n                    if (response.data.hasOwnProperty(x)) {\n                        const gminy = new Map<string, string>();\n                        for (const y in response.data[x]) {\n                            if (response.data[x].hasOwnProperty(y)) {\n                                gminy.set(y, response.data[x][y]);\n                            }\n                        }\n                        const p: PowiatEls = {gminy: gminy};\n                        ret.set(x, p);\n                    }\n                }\n                this.setState(Object.assign({}, this.state, {powiaty: ret, wojewodztwo: this.props.wojewodztwo}));\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.common();\n    }\n\n    componentDidUpdate() {\n        this.common();\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\" >\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./Panel\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    constructor(props: DotacjeUEProps) {\n        super(props);\n    }\n\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\"></HomeOutlined>\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\"></BusinessOutlined>\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\"></LocationCityOutlined>\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface NauczycieleProps {\n    kodGus: string;\n}\n\ninterface Zatrudnienie {\n    rok: number;\n    podstawowe?: number,\n    zawodowe?: number,\n    gimnazja?: number,\n    licea?: number,\n}\n\ninterface NauczycieleState {\n    dane: Zatrudnienie[];\n    kodGus: string;\n}\n\nexport class Nauczyciele extends React.Component<NauczycieleProps, NauczycieleState> {\n    constructor(props: NauczycieleProps) {\n        super(props);\n        this.state = {dane: [], kodGus: ''};\n    }\n\n    render() {\n        const {dane} = this.state;\n        console.log(dane);\n        return <Box><Box>Etaty nauczycielskie wg rodzaju szkoły:</Box>\n            <LineChart width={530} height={250} data={dane}\n                   margin={{ top: 5, right: 15, left: 10, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"rok\" />\n            <YAxis />\n            {/*<Tooltip />*/}\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"podstawowe\" stroke=\"#8884d8\">\n                <LabelList dataKey=\"podstawowe\" position=\"top\" />\n            </Line>\n            <Line type=\"monotone\" dataKey=\"gimnazja\" stroke=\"#0884d8\">\n                <LabelList dataKey=\"gimnazja\" position=\"top\" />\n            </Line>\n            <Line type=\"monotone\" dataKey=\"zawodowe\" stroke=\"#080408\">\n                <LabelList dataKey=\"zawodowe\" position=\"top\" />\n            </Line>\n            <Line type=\"monotone\" dataKey=\"licea\" stroke=\"#82ca9d\">\n                <LabelList dataKey=\"licea\" position=\"top\" />\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n\n    common() {\n        let szkoly = {\n            377896: \"podstawowe\",\n            378306: \"zawodowe\",\n            378248: \"gimnazja\",\n            378626: \"licea\",\n        }\n        const {kodGus} = this.props;\n        console.log(this.state.kodGus);\n        console.log(this.props.kodGus);\n        if (this.state.kodGus !== kodGus) {\n            // //  011212161011 => 01 + 12 + wojewodztwo + 0 gmina || 1 mnpp + powiat + gmina + rodzaj\n            // let kodGUS = '01' + kodGus.slice(0, 2) + kodGus.slice(0, 2) + '1' + kodGus.slice(2, 7);\n            console.log(kodGus);\n\n            let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl';\n            for (let id in szkoly) {\n                apiUrl += \"&var-id=\" + id;\n            }\n            console.log(apiUrl);\n            let ret: Zatrudnienie[] = [{rok: 2015}, {rok: 2016}, {rok: 2017}, {rok: 2018}, {rok: 2019}];\n            axios.get(apiUrl).then((response) => {\n                for (let r of response.data.results) {\n                    console.log(r);\n                    for (let v of r.values) {\n                        for (let z of ret) {\n                            if (z.rok === Number.parseInt(v.year)) {\n                                // @ts-ignore\n                                z[szkoly[r.id]] = v.val;\n                            }\n                        }\n                    }\n                }\n                console.log(ret);\n                this.setState(Object.assign({}, this.state, {dane: ret, kodGus: this.props.kodGus}));\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.common();\n    }\n\n    componentDidUpdate() {\n        this.common();\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {PieChart, Pie, Cell, Legend} from \"recharts\";\nimport {Nauczyciele} from \"./Nauczyciele\";\n\nexport interface PanelProps {\n    kodGminy: string;\n    cytat?: string;\n    autor?: string;\n    selected?: string[];\n    wojewodztwo?: string;\n    liczbaDzialow?: string;\n}\n\nexport interface  DotacjeUE {\n    gmina: string;\n    gmina_pc: string;\n    powiat: string;\n    powiat_pc: string;\n    wojewodztwo: string;\n    wojewodztwo_pc: string;\n}\n\ninterface Dzial {\n    name: string;\n    value: number;\n}\n\ninterface Dane {\n    gmina?: string;\n    kod_gus?: string;\n    kodGminy?: string;\n    dochod_ue?: string;\n    dotacje_ue: DotacjeUE;\n    budzet: Budzet;\n    gospodarka_odpadami_komunalnymi: Budzet;\n    ludnosc?: number;\n    wydatki_biezace_ue?: string;\n    wydatki_inwestycyjne_ue?: string;\n    // projekty_ue:\n    // janosik:\n    children: Dzial[];\n}\n\n// TODO: Po wyborze gminy tworzyc Panel z propsami\nexport class Panel extends React.Component<PanelProps, Dane> {\n    constructor(props: PanelProps) {\n        super(props);\n        this.state = {\n            budzet: {dochody: \"0\", wydatki: \"0\", dochody_kierunek: \"-\", dochody_zmiana: -1, wydatki_kierunek: \"-\", wydatki_zmiana: -1},\n            gospodarka_odpadami_komunalnymi: {dochody: \"0\", wydatki: \"0\", dochody_kierunek: \"-\", dochody_zmiana: -1, wydatki_kierunek: \"-\", wydatki_zmiana: -1},\n            dotacje_ue: {gmina: \"\", gmina_pc: \"\", powiat: \"\", powiat_pc: \"\", wojewodztwo: \"\", wojewodztwo_pc: \"\"},\n            children: [{name: \"test\", value: 123}],\n        };\n    }\n\n    renderBudzet(budzet: Budzet) {\n        // @ts-ignore\n        if (this.props.selected?.indexOf('budzet') > -1) {\n            return <React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>\n        } else {\n            return '';\n        }\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi: Budzet) {\n        // @ts-ignore\n        if (this.props.selected?.indexOf('smieci') > -1) {\n            return <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\"></DeleteSharp>\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>\n        } else {\n            return '';\n        }\n    }\n\n    render() {\n        const {gmina, kod_gus, ludnosc, gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = this.state;\n        const {cytat, autor, selected, liczbaDzialow} = this.props;\n        let dzialy : number = Number.parseInt(liczbaDzialow || \"10\") || 10;\n\n        const COLORS = ['#0088FE', '#00C49F', '#778888', '#FF8042', \"#FFFF33\"];\n\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Box className=\"intro\">{gmina} ({ludnosc} mieszkańców)</Box><br/>\n                        {cytat !== '' ? <Box className=\"intro\"><i>{cytat}</i></Box> : ''}\n                        {autor !== '' ?\n                            <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                        <br/>\n                        {this.renderBudzet(budzet)}\n                        {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                        {// @ts-ignore\n                         (selected?.indexOf('dotacje_ue') > -1)?\n                             <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                             <React.Fragment></React.Fragment>}\n                        {// @ts-ignore\n                            (selected?.indexOf('dzialy') > -1)?\n                            <PieChart width={550} height={Math.max((Math.min(dzialy, children.length)) * 25, 200)}>\n                                <Pie data={children.slice(0, dzialy)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={20} outerRadius={86} label={false}  startAngle={450} endAngle={90}>\n                                    {\n                                        children.map((entry, index) => (\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]}/>\n                                        ))\n                                    }\n                                </Pie>\n                                {/*<Tooltip />*/}\n                                <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\n                            </PieChart>:\n                            <React.Fragment></React.Fragment>}\n                        {// @ts-ignore\n                            (selected?.indexOf('nauczyciele') > -1)?\n                                <Nauczyciele kodGus={kod_gus||''}/>:<React.Fragment></React.Fragment>}\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n\n                </div>\n            </StylesProvider>\n        );\n    }\n\n    common() {\n        if (this.props.kodGminy !== this.state.kodGminy) {\n            const apiUrl = '/files/' + this.props.kodGminy + '-panel.json';\n            axios.get(apiUrl).then((response) => {\n                const ret: Dane = response.data;\n                this.setState(ret);\n            });\n            this.setState(Object.assign({}, this.state, {kodGminy: this.props.kodGminy}));\n        }\n    }\n\n    componentDidMount() {\n        this.common();\n    }\n\n    componentDidUpdate() {\n        this.common();\n    }\n}","import React, {FormEvent} from 'react';\nimport {Chip, FormControl, Input, MenuItem, Select} from \"@material-ui/core\";\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport {SelektorGminy} from \"./SelektorGminy\";\nimport {Panel} from \"./Panel\";\n\ninterface AppProps {\n}\n\ninterface AppState {\n    wojewodztwo: string;\n    cytat: string;\n    autor: string;\n    select: string[];\n    kodGminy: string;\n    liczbaDzialow: string;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    wojewodztwa = [\n        \"DOLNOŚLĄSKIE\",\n        \"KUJAWSKO-POMORSKIE\",\n        \"LUBELSKIE\",\n        \"LUBUSKIE\",\n        \"ŁÓDZKIE\",\n        \"MAŁOPOLSKIE\",\n        \"MAZOWIECKIE\",\n        \"OPOLSKIE\",\n        \"PODKARPACKIE\",\n        \"PODLASKIE\",\n        \"POMORSKIE\",\n        \"ŚLĄSKIE\",\n        \"ŚWIĘTOKRZYSKIE\",\n        \"WARMIŃSKO-MAZURSKIE\",\n        \"WIELKOPOLSKIE\",\n        \"ZACHODNIOPOMORSKIE\",\n]\n\n    elements = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"dzialy\",\n        \"nauczyciele\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeAutor = this.handleChangeAutor.bind(this);\n        this.handleChangeCytat = this.handleChangeCytat.bind(this);\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n\n        this.handleChangeGmina = this.handleChangeGmina.bind(this);\n        this.handleChangeWojewodztwo = this.handleChangeWojewodztwo.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            cytat: \"np: Kraków w 2019 realizował dobrą politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.\",\n            autor: \"np.: Maciej Pikor, Lider Polska 2050 w Małopolsce\",\n            select: this.elements,\n            wojewodztwo: \"MAŁOPOLSKIE\",\n            kodGminy: \"1261011\",\n            liczbaDzialow: \"10\",\n        };\n    }\n\n    handleChangeAutor(event: React.ChangeEvent<{ value: unknown }>) {\n        if (event !== null && event.target !== null) {\n            // @ts-ignore\n            if (event.target.value !== null) {\n                this.setState(Object.assign({}, this.state, {autor: event.target.value}));\n            }\n        } else {\n            // no luck\n        }\n    }\n\n    handleChangeCytat(event: React.ChangeEvent<{ value: unknown }>) {\n        if (event !== null && event.target !== null) {\n            // @ts-ignore\n            if (event.target.value !== null) {\n                this.setState(Object.assign({}, this.state, {cytat: event.target.value}));\n            }\n        } else {\n            // no luck\n        }\n    }\n\n\n\n    handleChangeMultiple(event: React.ChangeEvent<{ value: unknown }>) {\n        console.log(event.target);\n        const value: string[] = [];\n        // @ts-ignore\n        for (let i = 0, l = event.target.value.length; i < l; i += 1) {\n            // @ts-ignore\n            value.push(event.target.value[i]);\n        }\n        this.setState(Object.assign({}, this.state, {select: value}));\n    }\n\n    handleChangeWojewodztwo(event: React.ChangeEvent<{ value: unknown }>) {\n        this.setState(Object.assign({}, this.state, {wojewodztwo: event.target.value}));\n    }\n\n    handleChangeGmina(kodGminy: string) {\n        this.setState(Object.assign({}, this.state, {kodGminy: kodGminy}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    //TODO: use redux\n    render() {\n        const { cytat, autor, select, wojewodztwo, kodGminy, liczbaDzialow } = this.state;\n        const elements = this.elements;\n        const wojewodztwa = this.wojewodztwa;\n        return (\n\n            // https://www.npmjs.com/package/react-component-export-image\n            <Box display=\"flex\" flexDirection=\"row\">\n                    <Panel kodGminy={kodGminy} ref={this.componentRef} cytat={cytat} autor={autor} selected={select} liczbaDzialow={liczbaDzialow}/>\n                    <form onSubmit={this.handleSubmit}>\n                        <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                            <strong>Wybór Jednostki Samorządu:</strong>\n                            <select\n                                id=\"demo\"\n                                style={{marginBottom: 10}}\n                                value={wojewodztwo}\n                                onChange={this.handleChangeWojewodztwo}>\n                                {wojewodztwa.map((name) => (\n                                    <option key={name} value={name}>\n                                        {name}\n                                    </option>\n                                ))}\n                            </select>\n                            <SelektorGminy wojewodztwo={wojewodztwo} gminaChangeFn={this.handleChangeGmina} kodWybranejGminy={kodGminy}/>\n                            <br/>\n                            <strong>Komentarz eksperta:</strong>\n                                <textarea name=\"cytat\" onChange={this.handleChangeCytat} value={cytat} style={{marginBottom: 10}}/>\n                                <input type=\"text\" name=\"autor\" onChange={this.handleChangeAutor} value={autor}/>\n                            <FormControl className=\"formControl\">\n\n                                <br/>\n                                <strong>Elementy grafiki:</strong>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    multiple\n                                    style={{marginBottom: 10}}\n                                    value={select}\n                                    onChange={this.handleChangeMultiple}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                    renderValue={(selected) => (\n                                        <div className=\"chips\">\n                                            {(selected as string[]).map((value) => (\n                                                <Chip key={value} label={value} className=\"chip\" />\n                                            ))}\n                                        </div>\n                                    )}\n                                >\n                                    {elements.map((name) => (\n                                        <MenuItem key={name} value={name}>\n                                            {name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <strong>Max. liczba działów na wykresie:</strong>\n                            <input type=\"text\" name=\"liczbaDzialow\" onChange={ev=>this.handleChangeLiczbaDzialow(ev.target.value)} value={liczbaDzialow} style={{marginBottom: 10}}/>\n                            <button onClick={() => exportComponentAsPNG(this.componentRef)}>\n                                Export PNG\n                            </button>\n                        </Box>\n                    </form>\n            </Box>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}