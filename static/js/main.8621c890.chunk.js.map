{"version":3,"sources":["SelektorGminy.tsx","BudzetComp.tsx","DotacjeUEComp.tsx","Zgony.tsx","WykresXY.tsx","WykresKolowy.tsx","Panel.tsx","SelektorWojewodztwa.tsx","WyborModulow.tsx","SelektorGrupy.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelektorGminy","this","props","gminaChangeFn","powiaty","id","onChange","ev","target","value","Array","from","entries","key","label","gminy","gmina","kodGminy","Fragment","React","Component","BudzetComp","dane","dochody","wydatki","Box","display","flexDirection","AddCircleOutline","viewBox","className","RemoveCircle","DotacjeUEComp","dotacje_ue","gmina_pc","powiat","powiat_pc","wojewodztwo","wojewodztwo_pc","HomeOutlined","BusinessOutlined","LocationCityOutlined","Zgony","podregion","zgony","syncId","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","axisLine","strokeWidth","ticks","iconSize","wrapperStyle","type","dot","stroke","WykresXY","opis","split","tekst","serie_string","serie","COLORS","tickSize","tickMargin","yAxisId","orientation","map","index","name","replace","length","indexOf","WykresKolowy","RADIAN","Math","PI","state","activeIndex","verticalOffset","onPieClick","midAngle","sin","setState","inside","legendRenderer","bind","entry","daneFinal","slice","push","reduce","a","b","reverse","dangerouslySetInnerHTML","__html","nameKey","cx","cy","innerRadius","outerRadius","startAngle","endAngle","onClick","activeShape","percent","fill","cos","osx","osy","omx","omy","oex","oey","isx","isy","imx","imy","outsideTextAnchor","procentCalosci","line1","jednostka","round","line2","toFixed","d","r","x","y","textAnchor","dy","layout","verticalAlign","align","formatter","Panel","budzet","isShown","AttachMoney","fontSize","gospodarka_odpadami_komunalnymi","DeleteSharp","selected","cytat","autor","dzial","grupaDzial","grupaRozdzial","gus_comps","kolowy_wlasne_dane","xy_wlasne_dane","console","log","typ_gminy","ludnosc","children","wybranyDzial","parseInt","caloscWydatkow","dzialCzescCalosci","grupyRozdzialyCzescCalosci","grupyRozdzialy","dzialChildren","StylesProvider","injectFirst","renderBudzet","renderSmieci","grupyDzialy","SelektorWojewodztwa","wojewodztwoChangeFn","wojewodztwa","style","marginBottom","WyborModulow","moduly","zmianaModuluFn","options","handleOnChange","SelektorGrupy","grupaChangeFn","grupy","http","axios","create","baseURL","adapter","defaults","cacheAdapterEnhancer","undefined","App","classes","componentRef","WOJEWODZTWA","MODULY","GRUPY","createRef","handleChangeAutor","handleChangeCytat","handleChangeMultiple","pobierzDaneGminy","pobierzListePowiatow","handleChangeGrupyDzialy","handleChangeGrupyRozdzialy","handleSubmit","select","gus_input","gus_opis","gus_id","dane0","dane1","dane2","Object","assign","values","liczbaDzialow","liczbaRozdzialow","grupa","daneObject","csvToNameValueArray","csvToWykresXYDaneArray","event","preventDefault","csv","lines","result","i","line","v","isNaN","Number","d0","d1","d2","d3","d4","d5","dane3","dane4","dane5","json","forEach","nameValue","ret","ref","onSubmit","padding","handleChangeWlasnyOpis","element","forceNotifyByEnter","debounceTimeout","handleChangeWlasnyDane","nameValueArrayToCsv","handleChangeWlasnyJednostka","handleChangeWlasnyXYOpis","handleChangeWlasnyXYDane","wykresXYDaneArrayToCsv","handleChangeWlasnyXYJednostka","handleChangeDzial","href","input","pobierzGUSComps","kod_gus","trim","exportComponentAsPNG","apiUrl","replaceAll","get","then","response","Map","hasOwnProperty","set","p","pierwszaGmina","next","podregion_eurostat","pobierzZgony","kodGus","ids_string","ids","results","z","year","val","arr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8621c890.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface SelektorGminyProps {\n    gminaChangeFn: (kodGminy: string) => void;\n    powiaty?: Map<string, PowiatEls>;\n}\n\nexport interface PowiatEls {\n    gminy: Map<string, string>;\n}\n\nexport class SelektorGminy extends React.Component<SelektorGminyProps> {\n    render() {\n        const {gminaChangeFn, powiaty} = this.props;\n        return powiaty?<select\n            id=\"demo\"\n            // value={selected}\n            onChange={ev => gminaChangeFn(ev.target.value)}>\n            {Array.from(powiaty.entries(), ([key, value]) => (\n                    <optgroup key={key} label={key}>\n                        {Array.from(value.gminy.entries(), ([gmina, kodGminy]) => (\n                                <option key={kodGminy} value={kodGminy}>\n                                    {gmina}\n                                </option>\n                            ))}\n                    </optgroup>\n            ))}\n        </select>:<React.Fragment />;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AddCircleOutline, RemoveCircle} from \"@material-ui/icons\";\n\nexport interface Budzet {\n    dochody: string;\n    dochody_zmiana: number;\n    dochody_kierunek: string;\n\n    wydatki: string;\n    wydatki_zmiana: number;\n    wydatki_kierunek: string;\n}\n\ninterface BudzetProps {\n    dane: Budzet;\n}\n\nexport class BudzetComp extends React.Component<BudzetProps> {\n    render() {\n        const {dochody, wydatki} = this.props.dane\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" flexDirection=\"row\">\n                <AddCircleOutline viewBox=\"\"></AddCircleOutline>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Dochody:</Box>\n                    <Box>{dochody}</Box>\n                {/*</Box>*/}\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <RemoveCircle viewBox=\"\"></RemoveCircle>\n                {/*<Box display=\"flex\" flexDirection=\"column\">*/}\n                    <Box className=\"pomaranczowy\">Wydatki:</Box>\n                    <Box>{wydatki}</Box>\n                {/*</Box>*/}\n            </Box>\n        </Box>\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {BusinessOutlined, HomeOutlined, LocationCityOutlined} from \"@material-ui/icons\";\nimport {DotacjeUE} from \"./Panel\";\n\n\ninterface DotacjeUEProps {\n    dotacje_ue: DotacjeUE;\n}\n\nexport class DotacjeUEComp extends React.Component<DotacjeUEProps> {\n    render() {\n        const {gmina, gmina_pc, powiat, powiat_pc, wojewodztwo, wojewodztwo_pc} = this.props.dotacje_ue\n        return <Box display=\"flex\" flexDirection=\"column\">\n            <Box>Dotacje UE od 2014 dla projektów realizowanych w:</Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <HomeOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Gminie:</Box>&nbsp;\n                <Box> {gmina} ({gmina_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <BusinessOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Powiecie:</Box>&nbsp;\n                <Box>{powiat} ({powiat_pc} na mieszkańca)</Box>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\">\n                <LocationCityOutlined viewBox=\"\" />\n                <Box className=\"pomaranczowy\">Województwie:</Box>&nbsp;\n                <Box>{wojewodztwo} ({wojewodztwo_pc} na mieszkańca)</Box>\n            </Box>\n        </Box>\n    }\n}\n","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, LabelList, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\ninterface ZgonyWTygodniu {\n    podregion: string;\n    tydzien: string;\n    2014: number;\n    2015: number;\n    2016: number;\n    2017: number;\n    2018: number;\n    2019: number;\n    2020: number;\n}\n\nexport interface ZgonyProps {\n    podregion: string;\n    zgony: ZgonyWTygodniu[];\n}\n\nexport class Zgony extends React.Component<ZgonyProps> {\n    render() {\n        const {podregion, zgony} = this.props;\n        return <Box><br/><Box>Podregion {podregion}: wszystkie zgony wg. tygodnia:</Box>\n            <LineChart syncId={\"zgony\"} width={1060} height={500} data={zgony}\n                   margin={{ top: 10, right: 30, left: 20, bottom: 10 }}>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"tydzien\" axisLine={{strokeWidth: 2}} ticks={[1,5,10,15,20,25,30,36,42,47,52]}/>\n            <YAxis axisLine={{strokeWidth: 2}}/>\n            <Legend iconSize={20} wrapperStyle={{bottom: -10}}/>\n            <Line type=\"monotone\" dot={false} dataKey=\"2014\" stroke=\"#92daad\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2015\" stroke=\"#82ca9d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2016\" stroke=\"#72ba8d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2017\" stroke=\"#62aa7d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2018\" stroke=\"#529a6d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2019\" stroke=\"#428a5d\">\n            </Line>\n            <Line type=\"monotone\" dot={false} dataKey=\"2020\" stroke=\"#ff2222\">\n            </Line>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {CartesianGrid, Legend, Line, LineChart, XAxis, YAxis} from \"recharts\";\n\nexport interface WykresXYDane {\n    x: number;\n    dane0?: number;\n    dane1?: number;\n    dane2?: number;\n    dane3?: number;\n    dane4?: number;\n    dane5?: number;\n}\n\nexport interface WykresXYProps {\n    opis?: string;\n    dane?: WykresXYDane[];\n    jednostka?: string;\n}\n\nexport class WykresXY extends React.Component<WykresXYProps> {\n    render() {\n        const {dane, opis} = this.props;\n        if (opis === '') {\n            return <React.Fragment/>;\n        }\n        let [tekst, serie_string] = opis?opis.split('|'):[];\n        let serie = serie_string?serie_string.split(\",\"):[];\n        const COLORS = [\n            [],\n            [\"#003f5c\"],\n            [\"#003f5c\", \"#ffa600\"],\n            [\"#003f5c\", \"#bc5090\", \"#ffa600\"],\n            [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"],\n            [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\"],\n            [\"#003f5c\", \"#444e86\", \"#955196\", \"#dd5182\", \"#ff6e54\", \"#ffa600\"],\n            [\"#003f5c\", \"#374c80\", \"#7a5195\", \"#bc5090\", \"#ef5675\", \"#ff764a\", \"#ffa600\"],\n            [\"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"],\n        ];\n        return <Box><br/><Box>{tekst}</Box>\n            <LineChart syncId={opis} width={1100} height={500} data={dane}\n                   margin={{ top: 10, right: 40, left: 30, bottom: 10 }}>\n            <CartesianGrid strokeDasharray=\"5 5\"/>\n            <XAxis dataKey=\"x\" tickSize={12} tickMargin={10}/>\n            <YAxis yAxisId=\"left\" orientation=\"left\" axisLine={{strokeWidth: 2}} tickSize={8}/>\n            <YAxis yAxisId=\"right\" orientation=\"right\" axisLine={{strokeWidth: 2}} tickSize={18}/>\n                {serie.map((value, index) => {\n                    return <Line key={index} type=\"monotone\" name={value.replace(':R', ' (prawa oś)')}\n                                 dataKey={\"dane\" + index} stroke={COLORS[serie.length][index]} strokeWidth={2}\n                                 yAxisId={value.indexOf(':R') > -1?'right':'left'}/>;\n                })\n                }\n            <Legend iconSize={20} wrapperStyle={{bottom: -10}}/>\n        </LineChart>\n        </Box>;\n    }\n}","import React from \"react\";\nimport {Cell, Legend, Pie, PieChart, PieLabelRenderProps, Sector} from \"recharts\";\nimport {Box} from \"@material-ui/core\";\n\nexport interface NameValue {\n    name: string;\n    value: number;\n}\n\nexport interface WykresKolowyProps {\n    dane: NameValue[];\n    opis?: string;\n    procentCalosci: number;\n    jednostka: string;\n    inside: boolean;\n}\n\nexport class WykresKolowy extends React.Component<WykresKolowyProps> {\n    constructor(props: WykresKolowyProps) {\n        super(props);\n\n        this.legendRenderer = this.legendRenderer.bind(this);\n    }\n\n    RADIAN = Math.PI / 180;\n    state = {\n        activeIndex: -1,\n        verticalOffset: 0,\n    };\n\n    onPieClick = (data: PieLabelRenderProps, index: number) => {\n        const {midAngle} = data;\n        const sin = Math.sin(-this.RADIAN * (midAngle || 0));\n        this.setState({\n            verticalOffset: (!this.props.inside && sin < 0 && this.state.activeIndex !== index ? 80 : 0),\n            activeIndex: (this.state.activeIndex === index? -1 : index),\n        });\n    };\n\n    // @ts-ignore\n    legendRenderer(value, entry, index) {\n        if (index === this.state.activeIndex) {\n            return <span><b>{value}</b></span>;\n        } else {\n            return <span>{value}</span>;\n        }\n    }\n\n    render() {\n        const {dane, opis = 'bla', inside} = this.props;\n        // @ts-ignore\n        const renderActiveShape = (props) => {\n            const {\n                cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n                percent, value,\n            } = props;\n            const fill = '#f9c00c';\n            const sin = Math.sin(-this.RADIAN * midAngle);\n            const cos = Math.cos(-this.RADIAN * midAngle);\n            const osx = cx + (outerRadius + 20) * cos;\n            const osy = cy + (outerRadius + 20) * sin;\n            const omx = cx + (outerRadius + 60) * cos;\n            const omy = cy + (outerRadius + 60) * sin;\n            const oex = omx;\n            const oey = cy + ((outerRadius/0.86 + 36) * (sin >= 0 ? 1 : -1)) - 10;\n            const isx = cx + (innerRadius + 9) * cos;\n            const isy = cy + (innerRadius + 9) * sin;\n            const imx = cx + (innerRadius / 2) * cos;\n            const imy = cy + (innerRadius / 2) * sin;\n            const outsideTextAnchor = cos < 0 ? 'start' : 'end';\n            const procentCalosci = this.props.procentCalosci;\n            const v = this.props.jednostka.indexOf('tys.') > -1?Math.round(value/1000):\n                (this.props.jednostka.indexOf('mln.') > -1?Math.round(value/1000000):value);\n            const line1 = v + ' ' + this.props.jednostka;\n            const line2 = (percent * 100).toFixed(2) + '%' + (procentCalosci === 100 ?'':' / ' + (1.0 * procentCalosci * percent).toFixed(2) + '%');\n            return (\n                <g>\n                    <Sector\n                        cx={cx + 12 * cos}\n                        cy={cy + 12 * sin}\n                        innerRadius={innerRadius}\n                        outerRadius={outerRadius + 5}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        fill={fill}\n                        stroke=\"black\"\n                        strokeWidth={2}\n                    />\n                    {inside?\n                        <React.Fragment>\n                            <path d={`M${isx},${isy}L${imx},${imy}`} stroke={fill} strokeWidth={2} fill=\"none\"/>\n                            <circle cx={imx} cy={imy} r={4} fill={fill} stroke=\"none\" />\n                            <text x={cx} y={cy} textAnchor=\"middle\" fill=\"#333\">{line1}</text>\n                            <text x={cx} y={cy} dy={36} textAnchor=\"middle\" fill=\"#999\">{line2}</text>\n                        </React.Fragment>:\n                        <React.Fragment>\n                            <path d={`M${osx},${osy}L${omx},${omy}L${oex},${oey}`} stroke={fill} strokeWidth={2} fill=\"none\" />\n                            <circle cx={oex} cy={oey} r={4} fill={fill} stroke=\"none\" />\n                            <text x={oex + (cos < 0 ? 1 : -1) * 24} y={oey} textAnchor={outsideTextAnchor} fill=\"#333\">{line1}</text>\n                            <text x={oex + (cos < 0 ? 1 : -1) * 24} y={oey} dy={36} textAnchor={outsideTextAnchor} fill=\"#999\">{line2}</text>\n                        </React.Fragment>}\n                </g>\n            );\n        };\n\n        let daneFinal: any[] = dane.slice(0, 8);\n        if (dane.length > 8) {\n            daneFinal.push({name: \"Pozostałe\", value: dane.slice(8).reduce((a, b) => a + b.value, 0)});\n        }\n        // https://learnui.design/tools/data-color-picker.html#palette\n        const COLORS = [\"grey\", \"#003f5c\", \"#2f4b7c\", \"#665191\", \"#a05195\", \"#d45087\", \"#f95d6a\", \"#ff7c43\", \"#ffa600\"].reverse();\n        // const HUE = [\n        //     [\"#003f5c\", \"#255571\", \"#406b88\", \"#59829e\", \"#739bb6\", \"#8db3ce\", \"#a7cde6\", \"#c2e7ff\"],\n        //     [\"#2f4b7c\", \"#475f8e\", \"#5f73a0\", \"#7688b2\", \"#8d9ec5\", \"#a5b4d8\", \"#bdcbeb\", \"#d6e2ff\"],\n        // ];\n        return <React.Fragment>\n            {opis?<React.Fragment><br/><Box className=\"intro\" dangerouslySetInnerHTML={{__html: opis}} /></React.Fragment>:<React.Fragment/>}\n            <PieChart width={1200} height={inside?520:400 + (this.state.activeIndex >= 0 ? 80:0)}>\n            <Pie data={daneFinal} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy={inside?250:200+this.state.verticalOffset}\n                 innerRadius={inside?160:40} outerRadius={inside?240:172} label={false} startAngle={450} endAngle={90} activeIndex={this.state.activeIndex}\n                 onClick={this.onPieClick}\n                 activeShape={renderActiveShape}>\n                {\n                    // @ts-ignore\n                    daneFinal.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={index === this.state.activeIndex?\"#f9c00c\":COLORS[index]}/>\n                    ))\n                }\n            </Pie>\n            <Legend layout=\"vertical\" verticalAlign=\"bottom\" align=\"right\" formatter={this.legendRenderer}/>\n            </PieChart>\n        </React.Fragment>;\n    }\n}","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {AttachMoney, DeleteSharp} from \"@material-ui/icons\";\nimport {Budzet, BudzetComp} from \"./BudzetComp\";\nimport {StylesProvider} from \"@material-ui/core\";\nimport {DotacjeUEComp} from \"./DotacjeUEComp\";\nimport {Zgony, ZgonyProps} from \"./Zgony\";\nimport {WykresXY, WykresXYProps} from \"./WykresXY\";\nimport {WykresKolowy, WykresKolowyProps} from \"./WykresKolowy\";\n\nexport interface DotacjeUE {\n    gmina: string;\n    gmina_pc: string;\n    powiat: string;\n    powiat_pc: string;\n    wojewodztwo: string;\n    wojewodztwo_pc: string;\n}\n\ninterface Rozdzial {\n    name: string;\n    value: number;\n}\n\ninterface Dzial {\n    name: string;\n    value: number;\n    children: Rozdzial[];\n}\n\nexport interface Dane {\n    gmina?: string;\n    typ_gminy: string;\n    kod_gus?: string;\n    podregion_eurostat?: string;\n    dochod_ue?: string;\n    dotacje_ue?: DotacjeUE;\n    budzet?: Budzet;\n    gospodarka_odpadami_komunalnymi?: Budzet;\n    ludnosc?: string;\n    wydatki_biezace_ue?: string;\n    wydatki_inwestycyjne_ue?: string;\n    // projekty_ue:\n    // janosik:\n    grupyRozdzialy: any;\n    grupyDzialy: any;\n    children?: Dzial[];\n}\n\nexport interface PanelProps {\n    cytat?: string;\n    autor?: string;\n    selected: string[];\n    wojewodztwo?: string;\n    dzial?: string;\n    grupaDzial?: string;\n    grupaRozdzial?: string;\n    dane?: Dane;\n    zgony: ZgonyProps;\n    gus_comps: WykresXYProps[];\n    kolowy_wlasne_dane: WykresKolowyProps[];\n    xy_wlasne_dane: WykresXYProps[];\n}\n\nexport class Panel extends React.Component<PanelProps> {\n    renderBudzet(budzet?: Budzet) {\n        return this.isShown('budzet') && budzet?<React.Fragment>\n                <Box className=\"intro\">Budżet za rok <strong>2019</strong></Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    {/*<Money className=\"icon\"></Money>*/}\n                    <AttachMoney fontSize=\"large\" className=\"icon\" viewBox=\"\"/>\n                    <BudzetComp dane={budzet}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    renderSmieci(gospodarka_odpadami_komunalnymi?: Budzet) {\n        return this.isShown('smieci') && gospodarka_odpadami_komunalnymi?\n            <React.Fragment>\n                <Box className=\"intro\">Gospodarka Odpadami Komunalnymi</Box>\n                <Box display=\"flex\" flexDirection=\"row\">\n                    <DeleteSharp fontSize=\"large\" className=\"icon\" viewBox=\"\" />\n                    <BudzetComp dane={gospodarka_odpadami_komunalnymi}/>\n                </Box><br/>\n            </React.Fragment>:<React.Fragment/>;\n    }\n\n    isShown(name: string) {\n        return (this.props.selected?.indexOf(name) > -1)\n    }\n\n    render() {\n        const {cytat, autor, dane, dzial, grupaDzial, grupaRozdzial, zgony, gus_comps, kolowy_wlasne_dane, xy_wlasne_dane} = this.props;\n        console.log(this.props);\n        const {gmina, typ_gminy, ludnosc, gospodarka_odpadami_komunalnymi, budzet, dotacje_ue, children} = dane || {};\n        const wybranyDzial = children ? children[parseInt(dzial || '0')] : null;\n        const caloscWydatkow = children?.reduce((a, b) => a + b.value, 0) || 1;\n        const dzialCzescCalosci = ((wybranyDzial?.value || 0) * 100) / caloscWydatkow;\n        const grupyRozdzialyCzescCalosci = dane && dane.grupyRozdzialy && grupaRozdzial && dane.grupyRozdzialy[grupaRozdzial]?\n            // @ts-ignore\n            ((dane.grupyRozdzialy[grupaRozdzial].reduce((a, b) => a + b.value, 0)) * 100 / caloscWydatkow):0;\n        const dzialChildren = wybranyDzial ? wybranyDzial.children : [];\n\n        // @ts-ignore\n        return (\n            <StylesProvider injectFirst>\n                <div id=\"main_section\">\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Box className=\"wstep\">\n                            <Box className=\"prawa\">\n                                <Box>&nbsp;</Box>\n                                <Box className=\"nazwa_gminy\"><strong>{gmina}</strong></Box>\n                                <Box>{typ_gminy?.replace(gmina || 'ble', '')}</Box>\n                                <Box><strong>{ludnosc}</strong> mieszkańców</Box>\n                                <Box>&nbsp;</Box>\n                                <Box>&nbsp;</Box>\n                            </Box>\n                        </Box>\n                        <Box className=\"tlo\">\n                            {cytat !== '' ? <Box><i>{cytat}</i></Box> : ''}\n                            {autor !== '' ?\n                                <Box className=\"autor\">{autor}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Box> : ''}\n                            <Box>&nbsp;</Box>\n                            {this.renderBudzet(budzet)}\n                            {this.renderSmieci(gospodarka_odpadami_komunalnymi)}\n                            {this.isShown('dotacje_ue') && dotacje_ue?\n                                 <DotacjeUEComp dotacje_ue={dotacje_ue}/>:\n                                 <React.Fragment />}\n                            {this.isShown('kolowy-wlasny') && kolowy_wlasne_dane?\n                                kolowy_wlasne_dane.map((entry, index) =>\n                                    (<WykresKolowy dane={kolowy_wlasne_dane[index].dane} opis={kolowy_wlasne_dane[index].opis}\n                                                   procentCalosci={100} jednostka={kolowy_wlasne_dane[index].jednostka} inside={false}/>)):<React.Fragment />}\n                            {this.isShown('xy-wlasny') && xy_wlasne_dane?\n                                xy_wlasne_dane.map((entry, index) =>\n                                    (<WykresXY dane={xy_wlasne_dane[index].dane || []} opis={xy_wlasne_dane[index].opis}\n                                               jednostka={xy_wlasne_dane[index].jednostka}/>)):<React.Fragment />}\n                            {this.isShown('dzialy') && children?\n                                    <WykresKolowy dane={children} opis=\"Wydatki wg. działów budżetu:\" procentCalosci={100} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('rozdzialy') && dzialChildren?\n                                // @ts-ignore\n                                    <WykresKolowy dane={dzialChildren} opis={\"Rozdział wydatków z <b>\" + dane?.children[dzial].name + \"</b>:\"} procentCalosci={dzialCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('grupy-dzialy') && dane && grupaDzial && dane.grupyDzialy && dane.grupyDzialy[grupaDzial]?\n                                    <WykresKolowy dane={dane.grupyDzialy[grupaDzial]} opis={\"Wydatki z grupy <b>\" + grupaDzial + \"</b> wg działu:\"} procentCalosci={100} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('grupy-rozdzialy') && dane && grupaRozdzial && dane.grupyRozdzialy && dane.grupyRozdzialy[grupaRozdzial]?\n                                    <WykresKolowy dane={dane.grupyRozdzialy[grupaRozdzial]} opis={\"Wydatki z grupy <b>\" + grupaRozdzial + \"</b> wg rozdziału:\"} procentCalosci={grupyRozdzialyCzescCalosci} jednostka=\"tys. zł\" inside={true}/>:<React.Fragment />}\n                            {this.isShown('gus')?\n                                gus_comps.map((entry, index) =>\n                                    (<WykresXY key={index} dane={entry.dane} opis={entry.opis} />)):<React.Fragment />}\n                            {this.isShown('zgony') && zgony?\n                                <Zgony zgony={zgony.zgony} podregion={zgony.podregion}/>:<React.Fragment />}\n                        </Box>\n                    </Box>\n\n                    {/*            <span className=\"intro\" hidden>Dochody z UE: <span id=\"dochod_ue\"*/}\n                    {/*                                                               className=\"pomaranczowy\"></span></span><br/>*/}\n                    {/*            <span className=\"intro\">Wydatki dofinansowane z UE:<br/>*/}\n                    {/*Bieżące gminy: <span id=\"wydatki_biezace_ue\" className=\"pomaranczowy\"></span><br/>*/}\n                    {/*Inwestycyjne gminy: <span id=\"wydatki_inwestycje_ue\" className=\"pomaranczowy\"></span><br/>*/}\n\n                    {/*            <span id=\"janosik:otrzymala\" className=\"intro\">Gmina otrzymała <span id=\"janosik:dochody\"*/}\n                    {/*                                                                                 className=\"pomaranczowy\"></span>*/}\n                    {/*    \"janosikowego\" od samorządów z wysokimi dochodami</span>*/}\n                    {/*            <span id=\"janosik:wplacila\" className=\"intro\">Gmina wpłaciła <span id=\"janosik:wydatki\"*/}\n                    {/*                                                                               className=\"pomaranczowy\"></span>*/}\n                    {/*    netto \"janosikowego\" na rzecz samorządów z niskimi dochodami</span><br/><br/><br/>*/}\n                </div>\n            </StylesProvider>\n        );\n    }\n}","import React from \"react\";\n\ninterface SelektorWojewodztwaProps {\n    wojewodztwoChangeFn: (wojewodztwo: string) => void;\n    wojewodztwa: string[];\n}\n\nexport class SelektorWojewodztwa extends React.Component<SelektorWojewodztwaProps> {\n    render() {\n        const {wojewodztwoChangeFn, wojewodztwa} = this.props;\n        return <select\n            id=\"demo\"\n            style={{marginBottom: 10}}\n            onChange={ev => wojewodztwoChangeFn(ev.target.value)}>\n            {wojewodztwa.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React from \"react\";\n// @ts-ignore\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\ninterface WyborModulowProps {\n    zmianaModuluFn: (moduly: string[]) => void;\n    moduly: string[];\n}\n\nexport class WyborModulow extends React.Component<WyborModulowProps> {\n    render() {\n        const {moduly, zmianaModuluFn} = this.props;\n        return <div style={{width: \"520px\"}}>\n            <DropdownMultiselect options={moduly} selected={moduly.slice(3)} handleOnChange={(selected: string[]) => zmianaModuluFn(selected)}>\n        </DropdownMultiselect></div>\n    }\n}","import React from \"react\";\n\ninterface SelektorGrupyProps {\n    grupaChangeFn: (grupa: string) => void;\n    grupy: string[];\n}\n\nexport class SelektorGrupy extends React.Component<SelektorGrupyProps> {\n    render() {\n        const {grupaChangeFn, grupy} = this.props;\n        return <select\n            id=\"SelektorGrupy\"\n            style={{marginBottom: 10}}\n            onChange={ev => grupaChangeFn(ev.target.value)}>\n            {grupy.map((name) => (\n                <option key={name} value={name}>\n                    {name}\n                </option>\n            ))}\n        </select>;\n    }\n}\n","import React, {FormEvent} from 'react';\nimport './App.css';\nimport {exportComponentAsPNG} from 'react-component-export-image';\nimport Box from \"@material-ui/core/Box\";\nimport {PowiatEls, SelektorGminy} from \"./SelektorGminy\";\nimport {Dane, Panel} from \"./Panel\";\nimport axios from \"axios\";\nimport { cacheAdapterEnhancer } from 'axios-extensions';\nimport {SelektorWojewodztwa} from \"./SelektorWojewodztwa\";\nimport {WyborModulow} from \"./WyborModulow\";\nimport { ZgonyProps } from './Zgony';\nimport {WykresXYDane, WykresXYProps} from \"./WykresXY\";\nimport {SelektorGrupy} from \"./SelektorGrupy\";\nimport {DebounceInput} from \"react-debounce-input\";\nimport {NameValue, WykresKolowyProps} from \"./WykresKolowy\";\n\nconst http = axios.create({\n    baseURL: '/',\n    // headers: { 'Cache-Control': 'no-cache' },\n    // cache will be enabled by default\n    adapter: axios.defaults.adapter?cacheAdapterEnhancer(axios.defaults.adapter):undefined\n});\n\ninterface AppProps {\n}\n\ninterface GUSInput {\n    gus_opis: string;\n    gus_id: string;\n}\n\ninterface AppState {\n    cytat: string;\n    autor: string;\n    select: string[];\n    dzial: string;\n    grupaDzial: string;\n    grupaRozdzial: string;\n    gus_input: GUSInput[];\n    gus_comps: WykresXYProps[];\n    xy_wlasne_dane: WykresXYProps[];\n    kolowy_wlasne_dane: WykresKolowyProps[];\n    dane?: Dane;\n    powiaty?: Map<string, PowiatEls>;\n    zgony: ZgonyProps;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    classes : any;\n    componentRef : any;\n\n    WOJEWODZTWA = [\n        \"DOLNOŚLĄSKIE\",\n        \"KUJAWSKO-POMORSKIE\",\n        \"LUBELSKIE\",\n        \"LUBUSKIE\",\n        \"ŁÓDZKIE\",\n        \"MAŁOPOLSKIE\",\n        \"MAZOWIECKIE\",\n        \"OPOLSKIE\",\n        \"PODKARPACKIE\",\n        \"PODLASKIE\",\n        \"POMORSKIE\",\n        \"ŚLĄSKIE\",\n        \"ŚWIĘTOKRZYSKIE\",\n        \"WARMIŃSKO-MAZURSKIE\",\n        \"WIELKOPOLSKIE\",\n        \"ZACHODNIOPOMORSKIE\",\n    ]\n\n    MODULY = [\n        \"budzet\",\n        \"smieci\",\n        \"dotacje_ue\",\n        \"kolowy-wlasny\",\n        \"xy-wlasny\",\n        \"dzialy\",\n        \"rozdzialy\",\n        \"grupy-dzialy\",\n        \"grupy-rozdzialy\",\n        \"zgony\",\n        \"gus\",\n    ]\n\n    GRUPY = [\n        \"Wynagrodzenia i składki\",\n        \"Wydatki na zadania statutowe\",\n        \"Dotacje na zadania bieżące\",\n        \"Świadczenia na rzecz osób fizycznych\",\n        \"Wynagrodzenia finansowane programami UE\",\n        \"Współfinansowanie wynagrodzeń programów UE\",\n        \"Wynagrodzenia dla innych programów zagranicznych\",\n        \"Wydatki finansowane programami UE\",\n        \"Współfinansowanie wydatków programów UE\",\n        \"Wydatki dla innych programów zagranicznych\",\n        \"Dotacje bieżące z programów UE\",\n        \"Współfinansowanie dotacji bieżących z programów UE\",\n        \"Dotacje bieżące z innych programów zagranicznych\",\n        \"Świadczenia dla osób fizycznych finansowane z UE\",\n        \"Współfinansowane świadczeń dla osób fizycznych z UE\",\n        \"Świadczenia dla osób fizycznych z innych programów zagranicznych\",\n        \"Wypłaty z poręczeń i gwarancji udzielonych przez gminę\",\n        \"Obsługa długu\",\n        \"Inwestycje ze środków gminy\",\n        \"Inwestycje ze środków UE\",\n        \"Współfinansowanie inwestycji ze środków UE\",\n        \"Dotacje do inwestycji ze środków gminy\",\n        \"Dotacje do inwestycji ze środków UE\",\n        \"Współfinansowanie dotacji do inwestycji ze środków UE\",\n        \"Zakup i objęcie akcji i udziałów\",\n        \"Wniesienie wkładów do spółek prawa handlowego\",\n    ]\n\n    constructor(props: AppProps) {\n        super(props);\n        this.componentRef = React.createRef();\n\n        this.handleChangeAutor = this.handleChangeAutor.bind(this);\n        this.handleChangeCytat = this.handleChangeCytat.bind(this);\n        this.handleChangeMultiple = this.handleChangeMultiple.bind(this);\n\n        this.pobierzDaneGminy = this.pobierzDaneGminy.bind(this);\n        this.pobierzListePowiatow = this.pobierzListePowiatow.bind(this);\n        this.handleChangeGrupyDzialy = this.handleChangeGrupyDzialy.bind(this);\n        this.handleChangeGrupyRozdzialy = this.handleChangeGrupyRozdzialy.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            cytat: \"np: Kraków w 2019 realizował dobrą politykę budżetową. Wprawdzie wydatki przewyższyły dochody, ale środki te zostały wydane na wkład własny w projekty inwestycyjne dofinansowane przez UE, które będą procentować w przyszłych latach.\",\n            autor: \"np.: Maciej Pikor, Lider Polska 2050 w Małopolsce\",\n            select: this.MODULY.slice(3),\n            dzial: \"0\",\n            grupaDzial: \"Wynagrodzenia i składki\",\n            grupaRozdzial: \"Wynagrodzenia i składki\",\n            gus_input: [{\n                gus_opis: \"Procent mieszkańców podłączonych do kanalizacji|miasto,ogółem,wieś\",\n                gus_id: \"60308,60309,60310\"},{\n                gus_opis: \"Emisja zanieczyszczeń|gazowych bez CO2,pyłowych:R\",\n                gus_id: \"1509,1508\"},{\n                gus_opis: \"Tereny zieleni|parki,zieleńce,zieleń uliczna,zieleń lokalna,zieleń osiedlowa\",\n                gus_id: \"73847,73848,73849,73850,73852\"},{\n                gus_opis: \"Dzieci, młodzież i dorośli wg rodzaju placówki:|żłobki,przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n                gus_id: \"377227,151864,151867,455415,2394,455392\"},{\n                gus_opis: \"Uczniowie przypadający na 1 oddział w szkołach:|podstawowych,liceach,zawodowych\",\n                gus_id: \"454078,454099,454088\"},{\n                gus_opis: \"Etaty nauczycielskie wg rodzaju szkoły:|przedszkola,podstawowe,zawodowe,gimnazja,licea\",\n                gus_id: \"288152,377896,378306,378248,378626\"}],\n            gus_comps: [{},{},{},{},{},{}],\n            kolowy_wlasne_dane: [\n                {\n                    dane: [{\"name\": \"Pierwsza wartość\", \"value\": 321000},\n                        {\"name\": \"Druga wartość\", \"value\": 227000},\n                        {\"name\": \"Trzecia wartość\", \"value\": 146000},\n                        {\"name\": \"Czwarta wartość\", \"value\": 110000},\n                        {\"name\": \"Piąta wartość\", \"value\": 109000},\n                        {\"name\": \"Szósta wartość\", \"value\": 87000},\n                        {\"name\": \"Siódma wartość\", \"value\": 77000},\n                        {\"name\": \"Ósma wartość\", \"value\": 66000},\n                        {\"name\": \"Pozostałe\", \"value\": 88000}],\n                    opis: 'Wykres dla dowolnych danych - zmień wartości w panelu po prawej i zobacz efekt',\n                    procentCalosci: 100,\n                    jednostka: 'tys. zł',\n                    inside: true,\n                }\n            ],\n            xy_wlasne_dane: [\n                {\n                    opis: \"Wykres Liniowy dla dowolnych danych - zmień wartości i zobacz efekt|seria1,seria2, seria3:R\",\n                    dane: [\n                        {x: 2015, dane0: 24, dane1: 65, dane2: 1034},\n                        {x: 2016, dane0: 34, dane1: 55, dane2: 1234},\n                        {x: 2017, dane0: 54, dane1: 35, dane2: 1634},\n                        {x: 2018, dane0: 74, dane1: 15, dane2: 2234},\n                        {x: 2019, dane0: 104, dane1: 3, dane2: 2234},\n                        ],\n                }\n            ],\n            zgony: {podregion: '', zgony: []},\n        };\n    }\n\n    handleChangeAutor(autor: string) {\n        this.setState(Object.assign({}, this.state, {autor: autor}));\n    }\n\n    handleChangeCytat(cytat: string) {\n        this.setState(Object.assign({}, this.state, {cytat: cytat}));\n    }\n\n    handleChangeMultiple(values: string[]) {\n        this.setState(Object.assign({}, this.state, {select: values}));\n    }\n\n    handleChangeLiczbaDzialow(liczbaDzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaDzialow: liczbaDzialow}));\n    }\n\n    handleChangeLiczbaRozdzialow(liczbaRozdzialow: string) {\n        this.setState(Object.assign({}, this.state, {liczbaRozdzialow: liczbaRozdzialow}));\n    }\n\n    handleChangeDzial(dzial: string) {\n        this.setState(Object.assign({}, this.state, {dzial: dzial}));\n    }\n\n    handleChangeGrupyDzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaDzial: grupa}));\n    }\n\n    handleChangeGrupyRozdzialy(grupa: string) {\n        this.setState(Object.assign({}, this.state, {grupaRozdzial: grupa}));\n    }\n\n    handleChangeWlasnyOpis(opis: string) {\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {opis: opis})\n                ]}));\n    }\n\n    handleChangeWlasnyDane(dane: string) {\n        let daneObject = this.csvToNameValueArray(dane);\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {dane: daneObject})\n                ]}));\n    }\n\n    handleChangeWlasnyJednostka(jednostka: string) {\n        this.setState(Object.assign({}, this.state,\n            {kolowy_wlasne_dane: [\n                    Object.assign({}, this.state.kolowy_wlasne_dane[0], {jednostka: jednostka})\n                ]}));\n    }\n\n    handleChangeWlasnyXYOpis(opis: string) {\n        this.setState(Object.assign({}, this.state,\n            {xy_wlasne_dane: [\n                    Object.assign({}, this.state.xy_wlasne_dane[0], {opis: opis})\n                ]}));\n    }\n\n    handleChangeWlasnyXYDane(dane: string) {\n        let daneObject = this.csvToWykresXYDaneArray(dane);\n        this.setState(Object.assign({}, this.state,\n            {xy_wlasne_dane: [\n                    Object.assign({}, this.state.xy_wlasne_dane[0], {dane: daneObject})\n                ]}));\n    }\n\n    handleChangeWlasnyXYJednostka(jednostka: string) {\n        this.setState(Object.assign({}, this.state,\n            {xy_wlasne_dane: [\n                    Object.assign({}, this.state.xy_wlasne_dane[0], {jednostka: jednostka})\n                ]}));\n    }\n\n\n    handleSubmit(event: FormEvent) {\n        event.preventDefault();\n    }\n\n    isShown(name: string) {\n        return (this.state.select.indexOf(name) > -1)\n    }\n\n    csvToNameValueArray(csv: string) {\n        let lines = csv.split('\\n');\n        let result = [];\n        for(let i = 0;i < lines.length;i++) {\n            let line = lines[i].split(\",\");\n            if (line.length === 2) {\n                let v = isNaN(Number(line[1]))?0:Number(line[1]);\n                result.push({name: line[0], value: v});\n            }\n        }\n        return result;\n    }\n\n    csvToWykresXYDaneArray(csv: string) {\n        let lines = csv.split('\\n');\n        let result = [];\n        for(let i = 0;i < lines.length;i++) {\n            let line = lines[i].split(\",\");\n            let d0 = isNaN(Number(line[1]))?undefined:Number(line[1]);\n            let d1 = isNaN(Number(line[2]))?undefined:Number(line[2]);\n            let d2 = isNaN(Number(line[3]))?undefined:Number(line[3]);\n            let d3 = isNaN(Number(line[4]))?undefined:Number(line[4]);\n            let d4 = isNaN(Number(line[5]))?undefined:Number(line[5]);\n            let d5 = isNaN(Number(line[6]))?undefined:Number(line[6]);\n            result.push({x: line[0],\n                dane0: d0,\n                dane1: d1,\n                dane2: d2,\n                dane3: d3,\n                dane4: d4,\n                dane5: d5,\n            });\n        }\n        return result;\n    }\n\n    nameValueArrayToCsv(json: NameValue[]) {\n        let x = '';\n        json.forEach((nameValue) => {x += nameValue.name + ',' + nameValue.value + '\\n'});\n        return x;\n    }\n\n    wykresXYDaneArrayToCsv(json: WykresXYDane[]) {\n        let ret = '';\n        json.forEach((nameValue) => {ret += nameValue.x + ',' + (nameValue.dane0?nameValue.dane1:'') + ',' + (nameValue.dane1?nameValue.dane1:'') + ',' + (nameValue.dane2?nameValue.dane2:'') + ',' + (nameValue.dane3?nameValue.dane3:'') + ',' + (nameValue.dane4?nameValue.dane4:'') + ',' + (nameValue.dane5?nameValue.dane5:'') + '\\n'});\n        return ret;\n    }\n\n    //TODO: use redux\n    render() {\n        const {cytat, autor, select, dzial, grupaDzial, grupaRozdzial, gus_input, dane, powiaty, zgony, gus_comps, kolowy_wlasne_dane, xy_wlasne_dane} = this.state;\n        return (\n            <Box display=\"flex\" flexDirection=\"row\">\n                <Panel dane={dane} ref={this.componentRef} cytat={cytat} autor={autor} selected={select} dzial={dzial}\n                       grupaDzial={grupaDzial} grupaRozdzial={grupaRozdzial} zgony={zgony} gus_comps={gus_comps} kolowy_wlasne_dane={kolowy_wlasne_dane} xy_wlasne_dane={xy_wlasne_dane}/>\n                <form onSubmit={this.handleSubmit}>\n                    <Box display=\"flex\" flexDirection=\"column\" style={{padding: 10}}>\n                        <strong>Wybór Jednostki Samorządu:</strong>\n                        <span className=\"hint\">Województwo:</span>\n                        <SelektorWojewodztwa wojewodztwa={this.WOJEWODZTWA} wojewodztwoChangeFn={this.pobierzListePowiatow}/>\n                        <span className=\"hint\">Gmina:</span>\n                        <SelektorGminy powiaty={powiaty} gminaChangeFn={this.pobierzDaneGminy}/>\n                        <hr/>\n                        <strong>Komentarz eksperta:</strong>\n                        <span className=\"hint\">Tekst:</span>\n                        <textarea name=\"cytat\" onChange={ev=>this.handleChangeCytat(ev.target.value)} value={cytat}/>\n                        <span className=\"hint\">Autor:</span>\n                        <input type=\"text\" name=\"autor\" onChange={ev=>this.handleChangeAutor(ev.target.value)}\n                               value={autor}/>\n                        <hr/>\n                        <strong>Elementy grafiki:</strong>\n                        <WyborModulow moduly={this.MODULY} zmianaModuluFn={this.handleChangeMultiple}/>\n                        <hr/>\n                        {this.isShown('kolowy-wlasny')?<React.Fragment>\n                            <strong>Wykres kołowy na bazie własnych danych:</strong>\n                            {/*<select*/}\n                            {/*    id=\"SelektorGrupy\"*/}\n                            {/*    onChange={ev => grupaChangeFn(ev.target.value)}>*/}\n                            {/*    {grupy.map((name) => (*/}\n                            {/*        <option key={name} value={name}>*/}\n                            {/*            {name}*/}\n                            {/*        </option>*/}\n                            {/*    ))}*/}\n                            {/*</select>;*/}\n                            <span className=\"hint\">Nagłówek wykresu:</span>\n                            <input type=\"text\" name=\"wlasny_kolowy.opis\" onChange={ev=>this.handleChangeWlasnyOpis(ev.target.value)}\n                                   value={kolowy_wlasne_dane[0].opis} />\n                            <span className=\"hint\">Dane do wykresu:</span>\n                            <DebounceInput element=\"textarea\" forceNotifyByEnter={false} debounceTimeout={2000} className=\"json\" name=\"wlasny.dane\" onChange={ev=>this.handleChangeWlasnyDane(ev.target.value)} value={this.nameValueArrayToCsv(kolowy_wlasne_dane[0].dane)}/>\n                            <span className=\"hint\">Jednostka do dodania do nazw. Jeśli zawiera 'tys.' lub 'mln.' to zostanie odpowiednio przeliczona:</span>\n                            <input type=\"text\" name=\"wlasny_kolowy.jednostka\" onChange={ev=>this.handleChangeWlasnyJednostka(ev.target.value)}\n                                   value={kolowy_wlasne_dane[0].jednostka} />\n\n                            <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('xy-wlasny')?<React.Fragment>\n                            <strong>Wykres XY na bazie własnych danych:</strong>\n                            <span className=\"hint\">Nagłówek wykresu:</span>\n                            <input type=\"text\" name=\"wlasny_xy.opis\" onChange={ev=>this.handleChangeWlasnyXYOpis(ev.target.value)}\n                                   value={xy_wlasne_dane[0].opis} />\n                            <span className=\"hint\">Dane do wykresu:</span>\n                            <span className=\"hint\">Format: NAGŁÓWEK|SERIA1,SERIA2:R,SERIA3:R (serie z \":R\" na końcu nazwy będą na prawej osi Y)</span>\n                            <DebounceInput element=\"textarea\" forceNotifyByEnter={false} debounceTimeout={2000} className=\"json\" name=\"wlasny_liniowy.dane\" onChange={ev=>this.handleChangeWlasnyXYDane(ev.target.value)} value={this.wykresXYDaneArrayToCsv(xy_wlasne_dane[0].dane || [])}/>\n                            <span className=\"hint\">Jednostka do dodania do nazw. Jeśli zawiera 'tys.' lub 'mln.' to zostanie odpowiednio przeliczona:</span>\n                            <input type=\"text\" name=\"wlasny_liniowy.jednostka\" onChange={ev=>this.handleChangeWlasnyXYJednostka(ev.target.value)}\n                                   value={xy_wlasne_dane[0].jednostka} />\n\n                            <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('rozdzialy')?<React.Fragment>\n                                <strong>Number działu do szczegółowego wyświetlenia:</strong>\n                                <input type=\"text\" name=\"dzial\" value={dzial}\n                                       onChange={ev=>this.handleChangeDzial(ev.target.value)}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-dzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na działy:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyDzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        {this.isShown('grupy-rozdzialy')?<React.Fragment>\n                                <strong>Podział wydatków z grupy na rozdziały:</strong>\n                                <SelektorGrupy grupy={this.GRUPY} grupaChangeFn={this.handleChangeGrupyRozdzialy}/>\n                                <hr/></React.Fragment>:<React.Fragment/>}\n                        <Box><strong>Wykresy z danych GUS:</strong>(<a target=\"_blank\" href=\"https://bdl.stat.gov.pl/BDL/metadane/cechy/2398#\">źródło</a>)</Box>\n                        {this.isShown('gus')?gus_input.map((input, index) => {\n                                return <React.Fragment key={index}>\n                                    <span className=\"hint\"><b>Wykres {index}</b>: Nagłówek wykresu i nazwy serii danych(pozostaw pusty aby schować wykres)</span>\n                                    <span className=\"hint\">Format: NAGŁÓWEK|SERIA1,SERIA2:R,SERIA3:R (serie z \":R\" na końcu nazwy będą na prawej osi Y)</span>\n                                    <DebounceInput type=\"text\" name=\"gus_opis\" value={input.gus_opis}\n                                           onChange={ev=>this.pobierzGUSComps(index, dane?.kod_gus || '', input.gus_id, ev.target.value.trim())}\n                                                   debounceTimeout={2000}/>\n                                    <span className=\"hint\">Identyfikatory danych z GUS. Dane muszą być dostępne na poziomie gminy.</span>\n                                    <DebounceInput type=\"text\" name=\"gus_id\" value={input.gus_id}\n                                           onChange={ev=>this.pobierzGUSComps(index, dane?.kod_gus || '', ev.target.value.trim(), input.gus_opis)}\n                                                   debounceTimeout={2000}/>\n                                <hr/></React.Fragment>}):<React.Fragment/>}\n                        <button onClick={() => exportComponentAsPNG(this.componentRef)}>\n                            Export PNG\n                        </button>\n                    </Box>\n                </form>\n            </Box>\n        );\n    }\n\n    componentDidMount() {\n        this.pobierzListePowiatow(\"DOLNOŚLĄSKIE\");\n    }\n\n    pobierzListePowiatow(wojewodztwo: string) {\n        let wojName = wojewodztwo.replaceAll(\"Ś\", \"S\").replaceAll(\"Ą\", \"A\").replaceAll(\"Ń\", \"N\").replaceAll(\"Ł\", \"L\");\n        const apiUrl = '/files/' + wojName + '.json';\n        http.get(apiUrl).then((response) => {\n            const ret = new Map<string, PowiatEls>();\n            for (const x in response.data) {\n                if (response.data.hasOwnProperty(x)) {\n                    const gminy = new Map<string, string>();\n                    for (const y in response.data[x]) {\n                        if (response.data[x].hasOwnProperty(y)) {\n                            gminy.set(y, response.data[x][y]);\n                        }\n                    }\n                    const p: PowiatEls = {gminy: gminy};\n                    ret.set(x, p);\n                }\n            }\n            this.setState(Object.assign({}, this.state, {powiaty: ret}));\n            const pierwszaGmina = ret.values().next().value.gminy.values().next().value;\n            this.pobierzDaneGminy(pierwszaGmina);\n        });\n    }\n\n    pobierzDaneGminy(kodGminy: string) {\n        const apiUrl = '/files/' + kodGminy + '-panel.json';\n        http.get(apiUrl).then((response) => {\n            const ret: Dane = response.data;\n            console.log(ret);\n            this.setState(Object.assign({}, this.state, {dane: ret}));\n            if (ret.podregion_eurostat) {\n                this.pobierzZgony(ret.podregion_eurostat)\n            }\n            if (ret.kod_gus) {\n                this.state.gus_input.forEach((input, index) => {\n                    this.pobierzGUSComps(index, ret.kod_gus || '', input.gus_id, input.gus_opis)\n                });\n            }\n        });\n    }\n\n    pobierzGUSComps(index: number, kodGus: string, ids_string: string, opis: string) {\n        this.setState(Object.assign({}, this.state, {gus_opis: opis, gus_id: ids_string}));\n        let ids = ids_string.split(\",\").map(x => parseInt(x));\n        let apiUrl = 'https://bdl.stat.gov.pl/api/v1/data/by-unit/' + kodGus + '?lang=pl&page-size=100';\n        ids.forEach(id => {\n            apiUrl += \"&var-id=\" + id;\n        });\n        http.get(apiUrl).then((response) => {\n            let dane: WykresXYDane[] = [{x: 2015}, {x: 2016}, {x: 2017}, {x: 2018}, {x: 2019}];\n            for (let r of response.data.results) {\n                for (let i = 0; i < ids.length; i++) {\n                    // znajdzmy odpowiedni id do przypisania wartosci, aby byly w takiej kolejnosci jak na liscie\n                    if (ids[i] !== r.id) {\n                        continue;\n                    }\n                    for (let v of r.values) {\n                        for (let z of dane) {\n                            if (z.x === Number.parseInt(v.year)) {\n                                // @ts-ignore\n                                z[\"dane\" + i] = v.val;\n                            }\n                        }\n                    }\n                }\n            }\n            let props = {opis: opis, dane: dane}\n            let arr = this.state.gus_comps;\n            arr[index] = props;\n            this.setState(Object.assign({}, this.state, {gus_comps: arr}));\n        });\n    }\n\n    pobierzZgony(podregion: string) {\n        const apiUrl = '/files/' + podregion + '.json';\n        http.get(apiUrl).then((response) => {\n            let x = response.data\n            this.setState(Object.assign({}, this.state, {zgony: x}));\n        });\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}